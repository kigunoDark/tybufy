// –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª get-price-ids.js –≤ –ø–∞–ø–∫–µ backend:

require('dotenv').config();
const stripe = require('stripe')(process.env.STRIPE_LIVE_SECRET);

async function getPriceIds() {
  try {
    if (!process.env.STRIPE_LIVE_SECRET) {
      console.error('‚ùå STRIPE_LIVE_SECRET –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!');
      return;
    }

    const isTestMode = process.env.STRIPE_LIVE_SECRET.startsWith('sk_test_');
    
    const prices = await stripe.prices.list({
      limit: 100,
      expand: ['data.product']
    });

    if (prices.data.length === 0) {
      console.log(`‚ùå –¶–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ ${isTestMode ? '—Ç–µ—Å—Ç–æ–≤–æ–º' : '—Ä–µ–∞–ª—å–Ω–æ–º'} —Ä–µ–∂–∏–º–µ.`);
      return;
    }

    console.log(`\nüîç –ù–∞–π–¥–µ–Ω–æ ${prices.data.length} —Ü–µ–Ω –≤ ${isTestMode ? '—Ç–µ—Å—Ç–æ–≤–æ–º' : '—Ä–µ–∞–ª—å–Ω–æ–º'} —Ä–µ–∂–∏–º–µ Stripe:\n`);

    // –ü–æ–∏—Å–∫ –ø–æ –Ω—É–∂–Ω—ã–º —Ü–µ–Ω–∞–º (–≤ —Ü–µ–Ω—Ç–∞—Ö)
    const priceBoost = prices.data.find(p => p.unit_amount === 1658); // $16.58
    const pricePro = prices.data.find(p => p.unit_amount === 9900);   // $99.00
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ü–µ–Ω—ã –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
    prices.data.forEach(price => {
      const amount = (price.unit_amount / 100).toFixed(2);
      const product = price.product?.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
      console.log(`- ${product}: $${amount}/${price.recurring?.interval} (ID: ${price.id})`);
    });

    console.log('\n' + '='.repeat(60));
    
    if (isTestMode) {
      console.log(`
// ‚úÖ –¢–ï–°–¢–û–í–´–ï Price IDs (–≤—Å—Ç–∞–≤—å—Ç–µ –≤ –≤–∞—à –∫–æ–¥):
const testPriceIds = {
  'boost': '${priceBoost?.id || '–°–û–ó–î–ê–ô–¢–ï_–ü–†–û–î–£–ö–¢_$16.58'}',
  'pro': '${pricePro?.id || '–°–û–ó–î–ê–ô–¢–ï_–ü–†–û–î–£–ö–¢_$99.00'}',
};

// –î–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
onClick={() => handleUpgrade('${priceBoost?.id || '–°–û–ó–î–ê–ô–¢–ï_–ü–†–û–î–£–ö–¢_$16.58'}', 'boost')}
onClick={() => handleUpgrade('${pricePro?.id || '–°–û–ó–î–ê–ô–¢–ï_–ü–†–û–î–£–ö–¢_$99.00'}', 'pro')}`);
    } else {
      console.log(`
// ‚úÖ –†–ï–ê–õ–¨–ù–´–ï Price IDs (–≤—Å—Ç–∞–≤—å—Ç–µ –≤ –≤–∞—à –∫–æ–¥):
const livePriceIds = {
  'boost': '${priceBoost?.id || '–°–û–ó–î–ê–ô–¢–ï_–ü–†–û–î–£–ö–¢_$16.58'}',
  'pro': '${pricePro?.id || '–°–û–ó–î–ê–ô–¢–ï_–ü–†–û–î–£–ö–¢_$99.00'}',
};

// –î–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
onClick={() => handleUpgrade('${priceBoost?.id || '–°–û–ó–î–ê–ô–¢–ï_–ü–†–û–î–£–ö–¢_$16.58'}', 'boost')}
onClick={() => handleUpgrade('${pricePro?.id || '–°–û–ó–î–ê–ô–¢–ï_–ü–†–û–î–£–ö–¢_$99.00'}', 'pro')}`);
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    const missing = [];
    if (!priceBoost) missing.push('Boost Plan - $16.58/–º–µ—Å—è—Ü');
    if (!pricePro) missing.push('Pro Plan - $99.00/–º–µ—Å—è—Ü');

    if (missing.length > 0) {
      console.log('\n‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –≤ Stripe Dashboard:');
      missing.forEach(item => console.log(`   - ${item}`));
      console.log('\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:');
      console.log('1. –í–æ–π–¥–∏—Ç–µ –≤ Stripe Dashboard');
      console.log('2. Products ‚Üí Create product');
      console.log('3. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Å —Ç–æ—á–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏: $16.58 –∏ $99.00');
      console.log('4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞');
    }

    console.log('\n' + '='.repeat(60));

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    
    if (error.type === 'StripeAuthenticationError') {
      console.log('\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
      console.log('- –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å STRIPE_LIVE_SECRET –≤ .env —Ñ–∞–π–ª–µ');
      console.log('- –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–µ–∂–∏–º–∞ (test/live) –≤ Stripe Dashboard');
    }
  }
}

getPriceIds();
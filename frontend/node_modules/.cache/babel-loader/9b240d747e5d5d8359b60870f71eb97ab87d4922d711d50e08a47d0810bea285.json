{"ast":null,"code":"var _jsxFileName = \"C:\\\\Scriptify\\\\ai-content-studio\\\\frontend\\\\src\\\\components\\\\VideoExportModal.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { X, Download, Check, AlertCircle, FolderOpen, ChevronDown, ChevronUp } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const VideoExportModal = ({\n  isOpen,\n  onClose,\n  timelineItems,\n  tracks,\n  videoDuration,\n  onExport\n}) => {\n  _s();\n  const [exportSettings, setExportSettings] = useState({\n    resolution: \"1920x1080\",\n    fps: 30,\n    bitrate: 5000,\n    format: \"mp4\",\n    quality: \"high\",\n    saveDirectory: null,\n    filename: `video_${Date.now()}`\n  });\n  const [isExporting, setIsExporting] = useState(false);\n  const [exportProgress, setExportProgress] = useState(0);\n  const [exportStatus, setExportStatus] = useState(\"idle\");\n  const [estimatedTime, setEstimatedTime] = useState(null);\n  const [showAllElements, setShowAllElements] = useState(false); // Для кнопки \"Еще\"\n\n  // Предустановки для быстрого выбора\n  const presets = [{\n    name: \"YouTube 1080p\",\n    resolution: \"1920x1080\",\n    fps: 30,\n    quality: \"high\",\n    format: \"mp4\"\n  }, {\n    name: \"Instagram\",\n    resolution: \"1080x1080\",\n    fps: 30,\n    quality: \"medium\",\n    format: \"mp4\"\n  }, {\n    name: \"TikTok\",\n    resolution: \"1080x1920\",\n    fps: 30,\n    quality: \"medium\",\n    format: \"mp4\"\n  }, {\n    name: \"Web\",\n    resolution: \"1280x720\",\n    fps: 30,\n    quality: \"medium\",\n    format: \"webm\"\n  }];\n  const qualityOptions = [{\n    value: \"low\",\n    label: \"Низкое\",\n    bitrate: 1000\n  }, {\n    value: \"medium\",\n    label: \"Среднее\",\n    bitrate: 3000\n  }, {\n    value: \"high\",\n    label: \"Высокое\",\n    bitrate: 5000\n  }, {\n    value: \"ultra\",\n    label: \"Ультра\",\n    bitrate: 10000\n  }];\n  const formatOptions = [{\n    value: \"mp4\",\n    label: \"MP4\"\n  }, {\n    value: \"webm\",\n    label: \"WebM\"\n  }, {\n    value: \"mov\",\n    label: \"MOV\"\n  }];\n\n  // Быстрый расчет времени экспорта\n  useEffect(() => {\n    if (videoDuration && timelineItems) {\n      const complexity = timelineItems.filter(item => item.trackType === \"overlay\").length;\n      const baseTime = Math.max(2, videoDuration * 0.1);\n      const complexityMultiplier = 1 + complexity * 0.1;\n      setEstimatedTime(Math.ceil(baseTime * complexityMultiplier));\n    }\n  }, [videoDuration, timelineItems]);\n\n  // Синхронизация битрейта с качеством\n  useEffect(() => {\n    const quality = qualityOptions.find(q => q.value === exportSettings.quality);\n    if (quality && quality.bitrate !== exportSettings.bitrate) {\n      setExportSettings(prev => ({\n        ...prev,\n        bitrate: quality.bitrate\n      }));\n    }\n  }, [exportSettings.quality]);\n\n  // Выбор папки для сохранения\n  const handleSelectDirectory = async () => {\n    try {\n      if ('showDirectoryPicker' in window) {\n        const directoryHandle = await window.showDirectoryPicker();\n        setExportSettings(prev => ({\n          ...prev,\n          saveDirectory: directoryHandle\n        }));\n      } else {\n        alert('Ваш браузер не поддерживает выбор папки. Файл будет сохранен в папку загрузок.');\n      }\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Ошибка выбора папки:', error);\n      }\n    }\n  };\n\n  // Применение пресета\n  const applyPreset = preset => {\n    setExportSettings(prev => ({\n      ...prev,\n      ...preset\n    }));\n  };\n  const getFileSize = () => {\n    if (!videoDuration) return \"~\";\n    const sizeInMB = exportSettings.bitrate * videoDuration * 1000 / (8 * 1024 * 1024);\n    return sizeInMB < 1024 ? `~${sizeInMB.toFixed(0)} МБ` : `~${(sizeInMB / 1024).toFixed(1)} ГБ`;\n  };\n  const handleExport = async () => {\n    if (!timelineItems || timelineItems.length === 0) {\n      alert('Нет элементов для экспорта!');\n      return;\n    }\n    console.log('=== ДИАГНОСТИКА ПЕРЕД ЭКСПОРТОМ ===');\n    console.log('TimelineItems:', timelineItems);\n    console.log('Длительность видео:', videoDuration);\n    console.log('Настройки экспорта:', exportSettings);\n\n    // Детальная диагностика каждого элемента\n    timelineItems.forEach((item, index) => {\n      var _item$file;\n      console.log(`Элемент ${index}:`, {\n        id: item.id,\n        name: item.name,\n        type: item.type,\n        trackType: item.trackType,\n        startTime: item.startTime,\n        duration: item.duration,\n        hasFile: !!item.file,\n        hasSrc: !!item.src,\n        hasUrl: !!item.url,\n        fileType: (_item$file = item.file) === null || _item$file === void 0 ? void 0 : _item$file.type,\n        allProps: Object.keys(item)\n      });\n    });\n    console.log('=====================================');\n    setIsExporting(true);\n    setExportStatus(\"processing\");\n    setExportProgress(0);\n    try {\n      await actualVideoExport();\n      setExportStatus(\"success\");\n    } catch (error) {\n      console.error(\"❌ КРИТИЧЕСКАЯ ОШИБКА ЭКСПОРТА:\", error);\n      alert(`Ошибка экспорта: ${error.message}`);\n      setExportStatus(\"error\");\n    } finally {\n      setIsExporting(false);\n    }\n  };\n  const actualVideoExport = async () => {\n    try {\n      const videoExporter = new VideoExporter({\n        timelineItems,\n        tracks,\n        videoDuration,\n        settings: exportSettings,\n        onProgress: setExportProgress\n      });\n      const exportedVideoBlob = await videoExporter.render();\n      await downloadVideo(exportedVideoBlob);\n    } catch (error) {\n      console.error('Ошибка при экспорте:', error);\n      throw error;\n    }\n  };\n  const downloadVideo = async blob => {\n    const filename = `${exportSettings.filename}.${exportSettings.format}`;\n    try {\n      if (exportSettings.saveDirectory && 'showDirectoryPicker' in window) {\n        const fileHandle = await exportSettings.saveDirectory.getFileHandle(filename, {\n          create: true\n        });\n        const writable = await fileHandle.createWritable();\n        await writable.write(blob);\n        await writable.close();\n      } else {\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      console.error('Ошибка сохранения:', error);\n      throw error;\n    }\n  };\n  const handleClose = () => {\n    if (!isExporting) {\n      setExportStatus(\"idle\");\n      setExportProgress(0);\n      onClose();\n    }\n  };\n  if (!isOpen) return null;\n\n  // Логика отображения элементов\n  const elementsToShow = showAllElements ? timelineItems : timelineItems === null || timelineItems === void 0 ? void 0 : timelineItems.slice(0, 3);\n  const hasMoreElements = timelineItems && timelineItems.length > 3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-2xl shadow-xl max-w-lg w-full max-h-[90vh] overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-4 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Download, {\n            size: 20,\n            className: \"mr-2 text-blue-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442 \\u0432\\u0438\\u0434\\u0435\\u043E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          className: \"p-1 hover:bg-gray-100 rounded-full transition-colors\",\n          disabled: isExporting,\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 space-y-4 max-h-[calc(90vh-120px)] overflow-y-auto\",\n        children: [exportStatus !== \"idle\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-3 rounded-lg ${exportStatus === \"processing\" ? \"bg-blue-50 border border-blue-200\" : exportStatus === \"success\" ? \"bg-green-50 border border-green-200\" : \"bg-red-50 border border-red-200\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [exportStatus === \"processing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between text-sm text-blue-700 mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [exportProgress, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-full bg-blue-200 rounded-full h-1.5\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-blue-600 h-1.5 rounded-full transition-all duration-300\",\n                    style: {\n                      width: `${exportProgress}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), exportStatus === \"success\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Check, {\n                size: 16,\n                className: \"text-green-600 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-green-700 text-sm font-medium\",\n                children: \"\\u0413\\u043E\\u0442\\u043E\\u0432\\u043E!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), exportStatus === \"error\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                size: 16,\n                className: \"text-red-600 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-red-700 text-sm font-medium\",\n                children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u044D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"\\u0411\\u044B\\u0441\\u0442\\u0440\\u044B\\u0435 \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-2\",\n            children: presets.map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => applyPreset(preset),\n              className: \"p-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\",\n              disabled: isExporting,\n              children: preset.name\n            }, preset.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-700 mb-1\",\n              children: \"\\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: exportSettings.resolution,\n              onChange: e => setExportSettings(prev => ({\n                ...prev,\n                resolution: e.target.value\n              })),\n              className: \"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n              disabled: isExporting,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3840x2160\",\n                children: \"4K\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1920x1080\",\n                children: \"1080p\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1280x720\",\n                children: \"720p\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"854x480\",\n                children: \"480p\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1080x1920\",\n                children: \"9:16 (TikTok)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1080x1080\",\n                children: \"1:1 (Instagram)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-700 mb-1\",\n              children: \"FPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: exportSettings.fps,\n              onChange: e => setExportSettings(prev => ({\n                ...prev,\n                fps: parseInt(e.target.value)\n              })),\n              className: \"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n              disabled: isExporting,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"24\",\n                children: \"24\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"30\",\n                children: \"30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"60\",\n                children: \"60\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-700 mb-1\",\n              children: \"\\u041A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: exportSettings.quality,\n              onChange: e => setExportSettings(prev => ({\n                ...prev,\n                quality: e.target.value\n              })),\n              className: \"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n              disabled: isExporting,\n              children: qualityOptions.map(quality => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: quality.value,\n                children: quality.label\n              }, quality.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-700 mb-1\",\n              children: \"\\u0424\\u043E\\u0440\\u043C\\u0430\\u0442\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: exportSettings.format,\n              onChange: e => setExportSettings(prev => ({\n                ...prev,\n                format: e.target.value\n              })),\n              className: \"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n              disabled: isExporting,\n              children: formatOptions.map(format => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: format.value,\n                children: format.label\n              }, format.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-700 mb-1\",\n              children: \"\\u0418\\u043C\\u044F \\u0444\\u0430\\u0439\\u043B\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: exportSettings.filename,\n              onChange: e => setExportSettings(prev => ({\n                ...prev,\n                filename: e.target.value\n              })),\n              className: \"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n              disabled: isExporting,\n              placeholder: \"\\u0418\\u043C\\u044F \\u0444\\u0430\\u0439\\u043B\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-700 mb-1\",\n              children: \"\\u041F\\u0430\\u043F\\u043A\\u0430 \\u0434\\u043B\\u044F \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSelectDirectory,\n              className: \"w-full p-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors flex items-center justify-between\",\n              disabled: isExporting,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: exportSettings.saveDirectory ? exportSettings.saveDirectory.name : 'Выберите папку'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FolderOpen, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 rounded-lg p-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-2 text-xs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"\\u0414\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 font-medium\",\n                children: [Math.round(videoDuration), \"\\u0441\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 font-medium\",\n                children: getFileSize()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"\\u0411\\u0438\\u0442\\u0440\\u0435\\u0439\\u0442:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 font-medium\",\n                children: [exportSettings.bitrate, \" kbps\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"\\u0412\\u0440\\u0435\\u043C\\u044F:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 font-medium\",\n                children: [\"~\", estimatedTime, \"\\u0441\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 rounded-lg p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs font-medium text-gray-800\",\n              children: \"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u044B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-600\",\n              children: (timelineItems === null || timelineItems === void 0 ? void 0 : timelineItems.length) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), timelineItems && timelineItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-1\",\n            children: [elementsToShow === null || elementsToShow === void 0 ? void 0 : elementsToShow.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between text-xs\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-700 truncate\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-1 py-0.5 rounded text-xs ${item.trackType === \"main\" ? \"bg-blue-100 text-blue-700\" : item.trackType === \"audio\" ? \"bg-green-100 text-green-700\" : \"bg-purple-100 text-purple-700\"}`,\n                children: item.trackType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this)), hasMoreElements && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowAllElements(!showAllElements),\n              className: \"w-full text-xs text-blue-600 hover:text-blue-800 flex items-center justify-center py-1 transition-colors\",\n              children: showAllElements ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \", /*#__PURE__*/_jsxDEV(ChevronUp, {\n                  size: 12,\n                  className: \"ml-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"+\", timelineItems.length - 3, \" \\u0435\\u0449\\u0451 \", /*#__PURE__*/_jsxDEV(ChevronDown, {\n                  size: 12,\n                  className: \"ml-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500 text-center py-2\",\n            children: \"\\u041D\\u0435\\u0442 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end space-x-3 p-4 border-t border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          className: \"px-4 py-2 text-sm text-gray-600 hover:text-gray-800 transition-colors\",\n          disabled: isExporting,\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExport,\n          disabled: isExporting || !timelineItems || timelineItems.length === 0,\n          className: `px-4 py-2 text-sm rounded-lg font-medium transition-all flex items-center ${isExporting || !timelineItems || timelineItems.length === 0 ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" : \"bg-blue-600 text-white hover:bg-blue-700\"}`,\n          children: isExporting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-3 w-3 border-b-2 border-white mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this), \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              size: 14,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this), \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n\n// Полностью переписанный VideoExporter класс для правильного экспорта\n_s(VideoExportModal, \"o9mGQFTi1ZqvD/sVLiPqj9ylZaw=\");\n_c = VideoExportModal;\nclass VideoExporter {\n  constructor({\n    timelineItems,\n    tracks,\n    videoDuration,\n    settings,\n    onProgress\n  }) {\n    this.timelineItems = timelineItems;\n    this.tracks = tracks;\n    this.videoDuration = videoDuration;\n    this.settings = settings;\n    this.onProgress = onProgress;\n\n    // Создаем основной canvas для композиции\n    this.canvas = document.createElement(\"canvas\");\n    this.ctx = this.canvas.getContext(\"2d\");\n    const [width, height] = settings.resolution.split(\"x\").map(Number);\n    this.canvas.width = width;\n    this.canvas.height = height;\n\n    // Создаем аудио контекст для работы со звуком\n    this.audioContext = null;\n    this.audioSources = [];\n    this.audioBuffers = new Map();\n    this.audioDestination = null;\n\n    // Подготовленные элементы\n    this.preparedElements = new Map();\n  }\n  async render() {\n    try {\n      console.log('🎬 СТАРТ ЭКСПОРТА ВИДЕО');\n      console.log('📊 Параметры:', {\n        элементов: this.timelineItems.length,\n        длительность: this.videoDuration,\n        разрешение: this.settings.resolution,\n        fps: this.settings.fps\n      });\n\n      // Проверяем базовые требования\n      if (!this.timelineItems || this.timelineItems.length === 0) {\n        throw new Error('Нет элементов для экспорта');\n      }\n      if (!this.videoDuration || this.videoDuration <= 0) {\n        throw new Error('Неверная длительность видео');\n      }\n\n      // Подготавливаем все элементы\n      await this.prepareAllElements();\n\n      // Настраиваем аудио (опционально)\n      await this.setupAudio();\n\n      // Создаем видео поток\n      const stream = this.canvas.captureStream(this.settings.fps);\n      console.log('🎥 Canvas stream создан:', stream);\n\n      // Добавляем аудио к потоку (если есть)\n      if (this.audioContext && this.audioDestination) {\n        const audioTracks = this.audioDestination.stream.getAudioTracks();\n        audioTracks.forEach(track => {\n          stream.addTrack(track);\n        });\n        console.log(`🔊 Добавлено ${audioTracks.length} аудио треков`);\n      }\n\n      // Проверяем поддерживаемые форматы\n      const mimeType = this.getMimeType();\n      console.log('🎞️ Используемый MIME тип:', mimeType);\n\n      // Настраиваем запись\n      const options = {\n        mimeType: mimeType,\n        videoBitsPerSecond: this.settings.bitrate * 1000\n      };\n\n      // Добавляем аудио битрейт только если есть аудио\n      if (this.audioDestination) {\n        options.audioBitsPerSecond = 128000;\n      }\n      console.log('⚙️ Опции MediaRecorder:', options);\n\n      // Проверяем поддержку MediaRecorder\n      if (!MediaRecorder.isTypeSupported(mimeType)) {\n        console.warn('⚠️ MIME тип не поддерживается, используем базовый');\n        options.mimeType = 'video/webm';\n      }\n      const mediaRecorder = new MediaRecorder(stream, options);\n      const chunks = [];\n      let recordedSize = 0;\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunks.push(event.data);\n          recordedSize += event.data.size;\n          console.log(`📦 Получен чанк: ${event.data.size} байт (всего: ${recordedSize})`);\n        }\n      };\n      return new Promise((resolve, reject) => {\n        mediaRecorder.onstop = () => {\n          console.log(`✅ Запись завершена. Чанков: ${chunks.length}, размер: ${recordedSize} байт`);\n          if (chunks.length === 0 || recordedSize === 0) {\n            reject(new Error('Не удалось записать видео - нет данных'));\n            return;\n          }\n          const blob = new Blob(chunks, {\n            type: `video/${this.settings.format}`\n          });\n          console.log(`🎉 Финальный файл: ${(blob.size / 1024 / 1024).toFixed(2)} МБ`);\n\n          // Очистка ресурсов\n          this.cleanup();\n          resolve(blob);\n        };\n        mediaRecorder.onerror = error => {\n          console.error('❌ Ошибка MediaRecorder:', error);\n          this.cleanup();\n          reject(new Error(`Ошибка записи: ${error.message || error}`));\n        };\n\n        // Начинаем запись\n        mediaRecorder.start(1000);\n        console.log('🔴 MediaRecorder запущен');\n\n        // Запускаем рендеринг кадров\n        this.renderFrames().then(() => {\n          console.log('🎯 Рендеринг завершен, останавливаем запись...');\n          setTimeout(() => {\n            if (mediaRecorder.state === 'recording') {\n              mediaRecorder.stop();\n            }\n          }, 1000); // Даем время на финализацию\n        }).catch(error => {\n          console.error('💥 Ошибка рендеринга:', error);\n          if (mediaRecorder.state === 'recording') {\n            mediaRecorder.stop();\n          }\n          reject(error);\n        });\n      });\n    } catch (error) {\n      console.error('💥 КРИТИЧЕСКАЯ ОШИБКА render():', error);\n      this.cleanup();\n      throw error;\n    }\n  }\n  async prepareAllElements() {\n    var _this$onProgress, _this$onProgress2;\n    console.log('📦 Подготовка элементов...');\n    (_this$onProgress = this.onProgress) === null || _this$onProgress === void 0 ? void 0 : _this$onProgress.call(this, 10);\n    const preparationPromises = this.timelineItems.map(async (item, index) => {\n      try {\n        console.log(`📄 Подготавливаем [${index}]: ${item.name}`);\n        const elementType = this.determineElementType(item);\n        console.log(`🎯 Тип элемента ${item.name}: ${elementType}`);\n        if (elementType === 'video') {\n          console.log(`🎬 Подготавливаем видео: ${item.name}`);\n          await this.prepareVideoElement(item);\n        } else if (elementType === 'image') {\n          console.log(`🖼️ Подготавливаем изображение: ${item.name}`);\n          await this.prepareImageElement(item);\n        } else if (elementType === 'audio') {\n          console.log(`🎵 Подготавливаем аудио: ${item.name}`);\n          await this.prepareAudioElement(item);\n        } else if (elementType === 'text') {\n          console.log(`📝 Текстовый элемент: ${item.name}`);\n        } else {\n          console.log(`❓ Неизвестный тип элемента: ${item.name}`);\n        }\n        this.preparedElements.set(item.id, item);\n        console.log(`✅ Элемент подготовлен: ${item.name}`);\n      } catch (error) {\n        console.warn(`⚠️ Ошибка подготовки ${item.name}:`, error);\n      }\n    });\n    await Promise.all(preparationPromises);\n    (_this$onProgress2 = this.onProgress) === null || _this$onProgress2 === void 0 ? void 0 : _this$onProgress2.call(this, 30);\n    console.log('✅ Все элементы подготовлены');\n  }\n  isVideoElement(item) {\n    var _item$file$type;\n    return item.type === \"video\" || item.trackType === \"main\" || item.file && ((_item$file$type = item.file.type) === null || _item$file$type === void 0 ? void 0 : _item$file$type.startsWith('video/')) || item.src && /\\.(mp4|webm|mov|avi)$/i.test(item.src) || item.url && /\\.(mp4|webm|mov|avi)$/i.test(item.url);\n  }\n  isImageElement(item) {\n    var _item$file$type2;\n    return item.type === \"image\" || item.file && ((_item$file$type2 = item.file.type) === null || _item$file$type2 === void 0 ? void 0 : _item$file$type2.startsWith('image/')) || item.src && /\\.(jpg|jpeg|png|gif|webp)$/i.test(item.src) || item.url && /\\.(jpg|jpeg|png|gif|webp)$/i.test(item.url);\n  }\n  isAudioElement(item) {\n    var _item$file$type3;\n    return item.type === \"audio\" || item.trackType === \"audio\" || item.file && ((_item$file$type3 = item.file.type) === null || _item$file$type3 === void 0 ? void 0 : _item$file$type3.startsWith('audio/')) || item.src && /\\.(mp3|wav|ogg|m4a)$/i.test(item.src) || item.url && /\\.(mp3|wav|ogg|m4a)$/i.test(item.url);\n  }\n  async prepareVideoElement(item) {\n    if (item.videoElement) return;\n    const video = document.createElement(\"video\");\n    video.crossOrigin = \"anonymous\";\n    video.muted = true;\n    video.preload = \"metadata\";\n\n    // Получаем URL\n    let videoUrl = this.getElementUrl(item);\n    if (!videoUrl) {\n      console.warn(`❌ Не найден URL для видео: ${item.name}`);\n      return;\n    }\n    video.src = videoUrl;\n    item.videoElement = video;\n    await new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        console.warn(`⏰ Таймаут загрузки видео: ${item.name}`);\n        resolve();\n      }, 10000);\n      video.onloadedmetadata = () => {\n        clearTimeout(timeout);\n        console.log(`🎥 Видео загружено: ${item.name} (${video.duration.toFixed(1)}с)`);\n        resolve();\n      };\n      video.onerror = e => {\n        clearTimeout(timeout);\n        console.error(`❌ Ошибка загрузки видео: ${item.name}`, e);\n        resolve(); // Не блокируем весь процесс\n      };\n    });\n  }\n  async prepareImageElement(item) {\n    if (item.imageElement) return;\n    const img = new Image();\n    img.crossOrigin = \"anonymous\";\n    let imageUrl = this.getElementUrl(item);\n    if (!imageUrl) {\n      console.warn(`❌ Не найден URL для изображения: ${item.name}`);\n      return;\n    }\n    img.src = imageUrl;\n    item.imageElement = img;\n    await new Promise(resolve => {\n      const timeout = setTimeout(() => {\n        console.warn(`⏰ Таймаут загрузки изображения: ${item.name}`);\n        resolve();\n      }, 5000);\n      img.onload = () => {\n        clearTimeout(timeout);\n        console.log(`🖼️ Изображение загружено: ${item.name} (${img.naturalWidth}x${img.naturalHeight})`);\n        resolve();\n      };\n      img.onerror = e => {\n        clearTimeout(timeout);\n        console.error(`❌ Ошибка загрузки изображения: ${item.name}`, e);\n        resolve();\n      };\n    });\n  }\n  async prepareAudioElement(item) {\n    if (!this.audioContext) {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    }\n    let audioUrl = this.getElementUrl(item);\n    if (!audioUrl) {\n      console.warn(`❌ Не найден URL для аудио: ${item.name}`);\n      return;\n    }\n    try {\n      console.log(`🎵 Загружаем аудио: ${item.name}`);\n      let arrayBuffer;\n      if (item.file && item.file instanceof File) {\n        arrayBuffer = await item.file.arrayBuffer();\n      } else {\n        const response = await fetch(audioUrl);\n        arrayBuffer = await response.arrayBuffer();\n      }\n      const audioBuffer = await this.audioContext.decodeAudioData(arrayBuffer);\n      this.audioBuffers.set(item.id, audioBuffer);\n      console.log(`🎵 Аудио подготовлено: ${item.name} (${audioBuffer.duration.toFixed(1)}с)`);\n    } catch (error) {\n      console.error(`❌ Ошибка подготовки аудио ${item.name}:`, error);\n    }\n  }\n  getElementUrl(item) {\n    if (item.file && item.file instanceof File) {\n      return URL.createObjectURL(item.file);\n    }\n    return item.src || item.url || item.data;\n  }\n  async setupAudio() {\n    if (!this.audioContext || this.audioBuffers.size === 0) return;\n    console.log('🔊 Настраиваем аудио...');\n\n    // Создаем destination для микширования аудио\n    this.audioDestination = this.audioContext.createMediaStreamDestination();\n\n    // Создаем источники для каждого аудио элемента\n    for (const [itemId, audioBuffer] of this.audioBuffers) {\n      const item = this.timelineItems.find(i => i.id === itemId);\n      if (!item) continue;\n\n      // Создаем источник и подключаем к destination\n      const source = this.audioContext.createBufferSource();\n      source.buffer = audioBuffer;\n      source.connect(this.audioDestination);\n\n      // Добавляем в список источников\n      this.audioSources.push({\n        source,\n        item,\n        startTime: item.startTime || 0,\n        duration: item.duration || audioBuffer.duration\n      });\n    }\n    console.log(`🔊 Подготовлено ${this.audioSources.length} аудио источников`);\n  }\n  async renderFrames() {\n    var _this$onProgress4;\n    const frameCount = Math.ceil(this.videoDuration * this.settings.fps);\n    const frameDuration = 1000 / this.settings.fps;\n    console.log(`🎞️ Начинаем рендеринг ${frameCount} кадров (${this.settings.fps} FPS)`);\n    console.log(`⏱️ Длительность кадра: ${frameDuration.toFixed(2)}мс`);\n\n    // Запускаем аудио источники\n    this.startAudioSources();\n\n    // Рендерим тестовый кадр для проверки\n    console.log('🧪 Рендерим тестовый кадр...');\n    await this.renderFrame(0);\n    console.log('✅ Тестовый кадр отрендерен');\n    for (let frame = 0; frame < frameCount; frame++) {\n      const currentTime = frame / this.settings.fps;\n      try {\n        var _this$onProgress3;\n        await this.renderFrame(currentTime);\n\n        // Обновляем прогресс\n        const progress = 30 + Math.round(frame / frameCount * 60);\n        (_this$onProgress3 = this.onProgress) === null || _this$onProgress3 === void 0 ? void 0 : _this$onProgress3.call(this, progress);\n\n        // Логируем прогресс каждые 30 кадров\n        if (frame % 30 === 0) {\n          console.log(`🎬 Кадр ${frame}/${frameCount} (${currentTime.toFixed(1)}с) - ${progress}%`);\n          await new Promise(resolve => setTimeout(resolve, 1));\n        }\n      } catch (error) {\n        console.error(`❌ Ошибка рендеринга кадра ${frame} (время ${currentTime.toFixed(2)}с):`, error);\n        // Рендерим заглушку вместо ошибочного кадра\n        this.renderErrorFrame(currentTime, error.message);\n      }\n    }\n    (_this$onProgress4 = this.onProgress) === null || _this$onProgress4 === void 0 ? void 0 : _this$onProgress4.call(this, 90);\n    console.log('🎉 Все кадры отрендерены успешно!');\n  }\n  startAudioSources() {\n    if (!this.audioContext || this.audioSources.length === 0) return;\n    console.log('▶️ Запускаем аудио источники...');\n\n    // Возобновляем аудио контекст если он приостановлен\n    if (this.audioContext.state === 'suspended') {\n      this.audioContext.resume();\n    }\n    this.audioSources.forEach(({\n      source,\n      item,\n      startTime,\n      duration\n    }) => {\n      try {\n        // Планируем воспроизведение аудио согласно таймлайну\n        const when = this.audioContext.currentTime + startTime;\n        const offset = 0;\n        const sourceDuration = Math.min(duration, source.buffer.duration);\n        source.start(when, offset, sourceDuration);\n        console.log(`🎵 Запущено аудио: ${item.name} в ${startTime}с на ${sourceDuration}с`);\n      } catch (error) {\n        console.warn(`⚠️ Ошибка запуска аудио ${item.name}:`, error);\n      }\n    });\n  }\n  async renderFrame(currentTime) {\n    console.log(`🖼️ Рендерим кадр на времени ${currentTime.toFixed(2)}с`);\n\n    // Очищаем canvas черным фоном\n    this.ctx.fillStyle = \"#000000\";\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Получаем активные элементы для текущего времени\n    const activeItems = this.getActiveItems(currentTime);\n    console.log(`📋 Активных элементов на ${currentTime.toFixed(2)}с: ${activeItems.length}`);\n    if (activeItems.length === 0) {\n      console.log('⚠️ Нет активных элементов, рендерим временную метку');\n      this.renderTimestamp(currentTime);\n      return;\n    }\n\n    // Выводим список активных элементов\n    activeItems.forEach((item, index) => {\n      console.log(`  ${index + 1}. ${item.name} (${item.type || item.trackType}) - ${item.startTime}с-${(item.startTime || 0) + (item.duration || 0)}с`);\n    });\n\n    // Сортируем элементы по слоям (z-index)\n    const sortedItems = this.sortItemsByLayer(activeItems);\n\n    // Рендерим каждый активный элемент\n    for (let i = 0; i < sortedItems.length; i++) {\n      const item = sortedItems[i];\n      const relativeTime = currentTime - (item.startTime || 0);\n      console.log(`🎨 Рендерим элемент ${i + 1}/${sortedItems.length}: ${item.name} (относительное время: ${relativeTime.toFixed(2)}с)`);\n      try {\n        await this.renderItem(item, relativeTime, currentTime);\n        console.log(`✅ Элемент ${item.name} отрендерен`);\n      } catch (error) {\n        console.error(`❌ Ошибка рендеринга элемента ${item.name}:`, error);\n        this.renderPlaceholderItem(`Ошибка: ${item.name}`);\n      }\n    }\n    console.log(`✅ Кадр ${currentTime.toFixed(2)}с завершен`);\n  }\n  getActiveItems(currentTime) {\n    return this.timelineItems.filter(item => {\n      const startTime = item.startTime || 0;\n      const duration = item.duration || this.videoDuration;\n      const endTime = startTime + duration;\n      return currentTime >= startTime && currentTime < endTime;\n    });\n  }\n  sortItemsByLayer(items) {\n    const layerOrder = {\n      audio: 0,\n      // Аудио не рендерится визуально\n      background: 1,\n      main: 2,\n      video: 2,\n      image: 3,\n      overlay: 4,\n      text: 5,\n      title: 5\n    };\n    return [...items].sort((a, b) => {\n      const typeA = this.determineElementType(a);\n      const typeB = this.determineElementType(b);\n\n      // Аудио элементы всегда в конец (хотя они не рендерятся)\n      if (typeA === 'audio' && typeB !== 'audio') return 1;\n      if (typeB === 'audio' && typeA !== 'audio') return -1;\n      const orderA = layerOrder[a.trackType] || layerOrder[a.type] || layerOrder[typeA] || 3;\n      const orderB = layerOrder[b.trackType] || layerOrder[b.type] || layerOrder[typeB] || 3;\n      return orderA - orderB;\n    });\n  }\n  async renderItem(item, relativeTime, currentTime) {\n    try {\n      var _item$file2;\n      this.ctx.save();\n      console.log(`🔍 Анализируем элемент: ${item.name}`);\n      console.log(`📝 Тип: ${item.type}, TrackType: ${item.trackType}`);\n      console.log(`📂 HasFile: ${!!item.file}, FileType: ${(_item$file2 = item.file) === null || _item$file2 === void 0 ? void 0 : _item$file2.type}`);\n      console.log(`🔗 HasSrc: ${!!item.src}, HasUrl: ${!!item.url}`);\n\n      // Определяем тип элемента более точно\n      const elementType = this.determineElementType(item);\n      console.log(`🎯 Определенный тип: ${elementType}`);\n\n      // Пропускаем аудио элементы - они не рендерятся визуально\n      if (elementType === 'audio') {\n        console.log(`🎵 Пропускаем аудио элемент: ${item.name}`);\n        return;\n      }\n      if (elementType === 'video') {\n        if (!item.videoElement) {\n          console.warn(`❌ Видео элемент не подготовлен: ${item.name}`);\n          this.renderPlaceholderItem(`Видео не загружено: ${item.name}`);\n          return;\n        }\n        await this.renderVideoItem(item, relativeTime);\n      } else if (elementType === 'image') {\n        if (!item.imageElement) {\n          console.warn(`❌ Изображение не подготовлено: ${item.name}`);\n          this.renderPlaceholderItem(`Изображение не загружено: ${item.name}`);\n          return;\n        }\n        this.renderImageItem(item);\n      } else if (elementType === 'text') {\n        this.renderTextItem(item);\n      } else {\n        console.warn(`❓ Неизвестный тип элемента: ${item.name}`);\n        this.renderPlaceholderItem(item.name || 'Неизвестный элемент');\n      }\n    } catch (error) {\n      console.warn(`⚠️ Ошибка рендеринга элемента ${item.name}:`, error);\n      this.renderPlaceholderItem(`Ошибка: ${item.name}`);\n    } finally {\n      this.ctx.restore();\n    }\n  }\n  determineElementType(item) {\n    var _item$file3;\n    // Сначала проверяем по типу файла (самый надежный способ)\n    if ((_item$file3 = item.file) !== null && _item$file3 !== void 0 && _item$file3.type) {\n      if (item.file.type.startsWith('video/')) return 'video';\n      if (item.file.type.startsWith('image/')) return 'image';\n      if (item.file.type.startsWith('audio/')) return 'audio';\n    }\n\n    // Проверяем по расширению файла в названии\n    const fileName = item.name || item.src || item.url || '';\n    const lowerName = fileName.toLowerCase();\n\n    // Аудио расширения\n    if (/\\.(mp3|wav|ogg|m4a|aac|flac)$/i.test(lowerName)) {\n      return 'audio';\n    }\n\n    // Видео расширения\n    if (/\\.(mp4|webm|mov|avi|mkv)$/i.test(lowerName)) {\n      return 'video';\n    }\n\n    // Изображения\n    if (/\\.(jpg|jpeg|png|gif|webp|svg)$/i.test(lowerName)) {\n      return 'image';\n    }\n\n    // Проверяем по типу элемента\n    if (item.type === 'video' || item.trackType === 'main') return 'video';\n    if (item.type === 'image') return 'image';\n    if (item.type === 'audio' || item.trackType === 'audio' || item.trackType === 'audios') return 'audio';\n    if (item.type === 'text' || item.trackType === 'text' || item.text || item.content || item.title) return 'text';\n\n    // По умолчанию считаем текстом, если есть текстовое содержимое\n    if (item.text || item.content || item.title) return 'text';\n\n    // Если ничего не определили, возвращаем неизвестный тип\n    return 'unknown';\n  }\n  async renderVideoItem(item, relativeTime) {\n    const video = item.videoElement;\n    if (!video || video.readyState < 2) {\n      this.renderPlaceholderItem(`Загрузка: ${item.name}`);\n      return;\n    }\n    try {\n      // Устанавливаем время видео\n      const targetTime = Math.max(0, Math.min(relativeTime, video.duration));\n      if (Math.abs(video.currentTime - targetTime) > 0.1) {\n        video.currentTime = targetTime;\n\n        // Ждем готовности кадра\n        let attempts = 0;\n        while (video.readyState < 2 && attempts < 20) {\n          await new Promise(resolve => setTimeout(resolve, 5));\n          attempts++;\n        }\n      }\n\n      // Рендерим видео кадр\n      this.drawScaledElement(video);\n    } catch (error) {\n      console.warn(`⚠️ Ошибка рендеринга видео ${item.name}:`, error);\n      this.renderPlaceholderItem(`Видео: ${item.name}`);\n    }\n  }\n  renderImageItem(item) {\n    const img = item.imageElement;\n    if (!img || !img.complete || img.naturalWidth === 0) {\n      this.renderPlaceholderItem(`Изображение: ${item.name}`);\n      return;\n    }\n    try {\n      this.drawScaledElement(img);\n    } catch (error) {\n      console.warn(`⚠️ Ошибка рендеринга изображения ${item.name}:`, error);\n      this.renderPlaceholderItem(`Изображение: ${item.name}`);\n    }\n  }\n  renderTextItem(item) {\n    const text = item.text || item.content || item.title || item.name;\n\n    // Настройка текста\n    this.ctx.fillStyle = item.color || \"#ffffff\";\n    this.ctx.font = `${item.fontSize || Math.min(48, this.canvas.width / 20)}px ${item.fontFamily || 'Arial'}`;\n    this.ctx.textAlign = item.textAlign || \"center\";\n    this.ctx.textBaseline = \"middle\";\n\n    // Позиция текста\n    const x = item.x !== undefined ? item.x : this.canvas.width / 2;\n    const y = item.y !== undefined ? item.y : this.canvas.height / 2;\n\n    // Обводка текста для лучшей читаемости\n    this.ctx.strokeStyle = \"#000000\";\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeText(text, x, y);\n    this.ctx.fillText(text, x, y);\n  }\n  renderPlaceholderItem(text) {\n    // Полупрозрачный фон\n    this.ctx.fillStyle = \"rgba(64, 64, 64, 0.8)\";\n    this.ctx.fillRect(10, 10, this.canvas.width - 20, 40);\n\n    // Текст\n    this.ctx.fillStyle = \"#ffffff\";\n    this.ctx.font = `${Math.min(16, this.canvas.width / 60)}px Arial`;\n    this.ctx.textAlign = \"left\";\n    this.ctx.textBaseline = \"middle\";\n    this.ctx.fillText(text, 20, 30);\n  }\n  renderTimestamp(currentTime) {\n    // Показываем время при отсутствии элементов\n    this.ctx.fillStyle = \"#333333\";\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.fillStyle = \"#ffffff\";\n    this.ctx.font = `${Math.min(24, this.canvas.width / 40)}px Arial`;\n    this.ctx.textAlign = \"center\";\n    this.ctx.textBaseline = \"middle\";\n    this.ctx.fillText(`Время: ${currentTime.toFixed(1)}с`, this.canvas.width / 2, this.canvas.height / 2);\n  }\n  renderErrorFrame(currentTime, errorMessage) {\n    // Красный фон для ошибки\n    this.ctx.fillStyle = \"#ff0000\";\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Белый текст с ошибкой\n    this.ctx.fillStyle = \"#ffffff\";\n    this.ctx.font = `${Math.min(32, this.canvas.width / 30)}px Arial`;\n    this.ctx.textAlign = \"center\";\n    this.ctx.textBaseline = \"middle\";\n    const x = this.canvas.width / 2;\n    const y = this.canvas.height / 2;\n    this.ctx.fillText(`ОШИБКА КАДРА`, x, y - 40);\n    this.ctx.fillText(`Время: ${currentTime.toFixed(1)}с`, x, y);\n    this.ctx.fillText(errorMessage.substring(0, 50), x, y + 40);\n  }\n  drawScaledElement(element) {\n    const elementWidth = element.videoWidth || element.naturalWidth || element.width;\n    const elementHeight = element.videoHeight || element.naturalHeight || element.height;\n    if (!elementWidth || !elementHeight) {\n      console.warn('⚠️ Элемент не имеет размеров:', element);\n      return;\n    }\n    const canvasRatio = this.canvas.width / this.canvas.height;\n    const elementRatio = elementWidth / elementHeight;\n    let drawWidth, drawHeight, drawX, drawY;\n\n    // Масштабируем с сохранением пропорций (cover)\n    if (elementRatio > canvasRatio) {\n      // Элемент шире canvas\n      drawHeight = this.canvas.height;\n      drawWidth = this.canvas.height * elementRatio;\n      drawX = (this.canvas.width - drawWidth) / 2;\n      drawY = 0;\n    } else {\n      // Элемент выше canvas\n      drawWidth = this.canvas.width;\n      drawHeight = this.canvas.width / elementRatio;\n      drawX = 0;\n      drawY = (this.canvas.height - drawHeight) / 2;\n    }\n    try {\n      this.ctx.drawImage(element, drawX, drawY, drawWidth, drawHeight);\n    } catch (error) {\n      console.error('💥 Критическая ошибка отрисовки:', error);\n      this.renderPlaceholderItem('Ошибка отрисовки');\n    }\n  }\n  getMimeType() {\n    // Проверяем поддерживаемые форматы\n    const formats = ['video/webm;codecs=vp9,opus', 'video/webm;codecs=vp8,opus', 'video/mp4;codecs=h264,aac', 'video/webm;codecs=vp9', 'video/webm;codecs=vp8', 'video/webm'];\n    for (const format of formats) {\n      if (MediaRecorder.isTypeSupported(format)) {\n        console.log(`🎬 Используем формат: ${format}`);\n        return format;\n      }\n    }\n    console.warn('⚠️ Используем базовый формат: video/webm');\n    return 'video/webm';\n  }\n  cleanup() {\n    console.log('🧹 Очистка ресурсов...');\n\n    // Останавливаем аудио источники\n    this.audioSources.forEach(({\n      source\n    }) => {\n      try {\n        if (source.buffer) {\n          source.stop();\n        }\n      } catch (error) {\n        // Источник уже остановлен\n      }\n    });\n\n    // Очищаем URL объекты\n    this.timelineItems.forEach(item => {\n      var _item$videoElement, _item$imageElement;\n      if ((_item$videoElement = item.videoElement) !== null && _item$videoElement !== void 0 && _item$videoElement.src.startsWith('blob:')) {\n        URL.revokeObjectURL(item.videoElement.src);\n      }\n      if ((_item$imageElement = item.imageElement) !== null && _item$imageElement !== void 0 && _item$imageElement.src.startsWith('blob:')) {\n        URL.revokeObjectURL(item.imageElement.src);\n      }\n    });\n\n    // Закрываем аудио контекст\n    if (this.audioContext && this.audioContext.state !== 'closed') {\n      this.audioContext.close();\n    }\n\n    // Очищаем массивы\n    this.audioSources = [];\n    this.audioBuffers.clear();\n    this.preparedElements.clear();\n    this.audioDestination = null;\n  }\n}\nexport const useVideoExporter = () => {\n  _s2();\n  const [isExportModalOpen, setIsExportModalOpen] = useState(false);\n  const openExportModal = () => setIsExportModalOpen(true);\n  const closeExportModal = () => setIsExportModalOpen(false);\n  return {\n    isExportModalOpen,\n    openExportModal,\n    closeExportModal\n  };\n};\n_s2(useVideoExporter, \"Wfaj4kprhDIijrMYdBElG6JtIdM=\");\nvar _c;\n$RefreshReg$(_c, \"VideoExportModal\");","map":{"version":3,"names":["useState","useEffect","X","Download","Check","AlertCircle","FolderOpen","ChevronDown","ChevronUp","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoExportModal","isOpen","onClose","timelineItems","tracks","videoDuration","onExport","_s","exportSettings","setExportSettings","resolution","fps","bitrate","format","quality","saveDirectory","filename","Date","now","isExporting","setIsExporting","exportProgress","setExportProgress","exportStatus","setExportStatus","estimatedTime","setEstimatedTime","showAllElements","setShowAllElements","presets","name","qualityOptions","value","label","formatOptions","complexity","filter","item","trackType","length","baseTime","Math","max","complexityMultiplier","ceil","find","q","prev","handleSelectDirectory","window","directoryHandle","showDirectoryPicker","alert","error","console","applyPreset","preset","getFileSize","sizeInMB","toFixed","handleExport","log","forEach","index","_item$file","id","type","startTime","duration","hasFile","file","hasSrc","src","hasUrl","url","fileType","allProps","Object","keys","actualVideoExport","message","videoExporter","VideoExporter","settings","onProgress","exportedVideoBlob","render","downloadVideo","blob","fileHandle","getFileHandle","create","writable","createWritable","write","close","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleClose","elementsToShow","slice","hasMoreElements","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","width","map","onChange","e","target","parseInt","placeholder","round","_c","constructor","canvas","ctx","getContext","height","split","Number","audioContext","audioSources","audioBuffers","Map","audioDestination","preparedElements","элементов","длительность","разрешение","Error","prepareAllElements","setupAudio","stream","captureStream","audioTracks","getAudioTracks","track","addTrack","mimeType","getMimeType","options","videoBitsPerSecond","audioBitsPerSecond","MediaRecorder","isTypeSupported","warn","mediaRecorder","chunks","recordedSize","ondataavailable","event","data","push","Promise","resolve","reject","onstop","Blob","cleanup","onerror","start","renderFrames","then","setTimeout","state","stop","catch","_this$onProgress","_this$onProgress2","call","preparationPromises","elementType","determineElementType","prepareVideoElement","prepareImageElement","prepareAudioElement","set","all","isVideoElement","_item$file$type","startsWith","test","isImageElement","_item$file$type2","isAudioElement","_item$file$type3","videoElement","video","crossOrigin","muted","preload","videoUrl","getElementUrl","timeout","onloadedmetadata","clearTimeout","imageElement","img","Image","imageUrl","onload","naturalWidth","naturalHeight","AudioContext","webkitAudioContext","audioUrl","arrayBuffer","File","response","fetch","audioBuffer","decodeAudioData","createMediaStreamDestination","itemId","i","source","createBufferSource","buffer","connect","_this$onProgress4","frameCount","frameDuration","startAudioSources","renderFrame","frame","currentTime","_this$onProgress3","progress","renderErrorFrame","resume","when","offset","sourceDuration","min","fillStyle","fillRect","activeItems","getActiveItems","renderTimestamp","sortedItems","sortItemsByLayer","relativeTime","renderItem","renderPlaceholderItem","endTime","items","layerOrder","audio","background","main","image","overlay","text","title","sort","b","typeA","typeB","orderA","orderB","_item$file2","save","renderVideoItem","renderImageItem","renderTextItem","restore","_item$file3","lowerName","toLowerCase","content","readyState","targetTime","abs","attempts","drawScaledElement","complete","color","font","fontSize","fontFamily","textAlign","textBaseline","x","undefined","y","strokeStyle","lineWidth","strokeText","fillText","errorMessage","substring","element","elementWidth","videoWidth","elementHeight","videoHeight","canvasRatio","elementRatio","drawWidth","drawHeight","drawX","drawY","drawImage","formats","_item$videoElement","_item$imageElement","clear","useVideoExporter","_s2","isExportModalOpen","setIsExportModalOpen","openExportModal","closeExportModal","$RefreshReg$"],"sources":["C:/Scriptify/ai-content-studio/frontend/src/components/VideoExportModal.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { X, Download, Check, AlertCircle, FolderOpen, ChevronDown, ChevronUp } from \"lucide-react\";\r\n\r\nexport const VideoExportModal = ({\r\n  isOpen,\r\n  onClose,\r\n  timelineItems,\r\n  tracks,\r\n  videoDuration,\r\n  onExport,\r\n}) => {\r\n  const [exportSettings, setExportSettings] = useState({\r\n    resolution: \"1920x1080\",\r\n    fps: 30,\r\n    bitrate: 5000,\r\n    format: \"mp4\",\r\n    quality: \"high\",\r\n    saveDirectory: null,\r\n    filename: `video_${Date.now()}`\r\n  });\r\n\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [exportProgress, setExportProgress] = useState(0);\r\n  const [exportStatus, setExportStatus] = useState(\"idle\");\r\n  const [estimatedTime, setEstimatedTime] = useState(null);\r\n  const [showAllElements, setShowAllElements] = useState(false); // Для кнопки \"Еще\"\r\n\r\n  // Предустановки для быстрого выбора\r\n  const presets = [\r\n    { name: \"YouTube 1080p\", resolution: \"1920x1080\", fps: 30, quality: \"high\", format: \"mp4\" },\r\n    { name: \"Instagram\", resolution: \"1080x1080\", fps: 30, quality: \"medium\", format: \"mp4\" },\r\n    { name: \"TikTok\", resolution: \"1080x1920\", fps: 30, quality: \"medium\", format: \"mp4\" },\r\n    { name: \"Web\", resolution: \"1280x720\", fps: 30, quality: \"medium\", format: \"webm\" },\r\n  ];\r\n\r\n  const qualityOptions = [\r\n    { value: \"low\", label: \"Низкое\", bitrate: 1000 },\r\n    { value: \"medium\", label: \"Среднее\", bitrate: 3000 },\r\n    { value: \"high\", label: \"Высокое\", bitrate: 5000 },\r\n    { value: \"ultra\", label: \"Ультра\", bitrate: 10000 },\r\n  ];\r\n\r\n  const formatOptions = [\r\n    { value: \"mp4\", label: \"MP4\" },\r\n    { value: \"webm\", label: \"WebM\" },\r\n    { value: \"mov\", label: \"MOV\" },\r\n  ];\r\n\r\n  // Быстрый расчет времени экспорта\r\n  useEffect(() => {\r\n    if (videoDuration && timelineItems) {\r\n      const complexity = timelineItems.filter(item => item.trackType === \"overlay\").length;\r\n      const baseTime = Math.max(2, videoDuration * 0.1);\r\n      const complexityMultiplier = 1 + (complexity * 0.1);\r\n      setEstimatedTime(Math.ceil(baseTime * complexityMultiplier));\r\n    }\r\n  }, [videoDuration, timelineItems]);\r\n\r\n  // Синхронизация битрейта с качеством\r\n  useEffect(() => {\r\n    const quality = qualityOptions.find(q => q.value === exportSettings.quality);\r\n    if (quality && quality.bitrate !== exportSettings.bitrate) {\r\n      setExportSettings(prev => ({ ...prev, bitrate: quality.bitrate }));\r\n    }\r\n  }, [exportSettings.quality]);\r\n\r\n  // Выбор папки для сохранения\r\n  const handleSelectDirectory = async () => {\r\n    try {\r\n      if ('showDirectoryPicker' in window) {\r\n        const directoryHandle = await window.showDirectoryPicker();\r\n        setExportSettings(prev => ({ \r\n          ...prev, \r\n          saveDirectory: directoryHandle \r\n        }));\r\n      } else {\r\n        alert('Ваш браузер не поддерживает выбор папки. Файл будет сохранен в папку загрузок.');\r\n      }\r\n    } catch (error) {\r\n      if (error.name !== 'AbortError') {\r\n        console.error('Ошибка выбора папки:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Применение пресета\r\n  const applyPreset = (preset) => {\r\n    setExportSettings(prev => ({\r\n      ...prev,\r\n      ...preset\r\n    }));\r\n  };\r\n\r\n  const getFileSize = () => {\r\n    if (!videoDuration) return \"~\";\r\n    const sizeInMB = (exportSettings.bitrate * videoDuration * 1000) / (8 * 1024 * 1024);\r\n    return sizeInMB < 1024 ? `~${sizeInMB.toFixed(0)} МБ` : `~${(sizeInMB / 1024).toFixed(1)} ГБ`;\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    if (!timelineItems || timelineItems.length === 0) {\r\n      alert('Нет элементов для экспорта!');\r\n      return;\r\n    }\r\n\r\n    console.log('=== ДИАГНОСТИКА ПЕРЕД ЭКСПОРТОМ ===');\r\n    console.log('TimelineItems:', timelineItems);\r\n    console.log('Длительность видео:', videoDuration);\r\n    console.log('Настройки экспорта:', exportSettings);\r\n    \r\n    // Детальная диагностика каждого элемента\r\n    timelineItems.forEach((item, index) => {\r\n      console.log(`Элемент ${index}:`, {\r\n        id: item.id,\r\n        name: item.name,\r\n        type: item.type,\r\n        trackType: item.trackType,\r\n        startTime: item.startTime,\r\n        duration: item.duration,\r\n        hasFile: !!item.file,\r\n        hasSrc: !!item.src,\r\n        hasUrl: !!item.url,\r\n        fileType: item.file?.type,\r\n        allProps: Object.keys(item)\r\n      });\r\n    });\r\n    console.log('=====================================');\r\n\r\n    setIsExporting(true);\r\n    setExportStatus(\"processing\");\r\n    setExportProgress(0);\r\n\r\n    try {\r\n      await actualVideoExport();\r\n      setExportStatus(\"success\");\r\n    } catch (error) {\r\n      console.error(\"❌ КРИТИЧЕСКАЯ ОШИБКА ЭКСПОРТА:\", error);\r\n      alert(`Ошибка экспорта: ${error.message}`);\r\n      setExportStatus(\"error\");\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const actualVideoExport = async () => {\r\n    try {\r\n      const videoExporter = new VideoExporter({\r\n        timelineItems,\r\n        tracks,\r\n        videoDuration,\r\n        settings: exportSettings,\r\n        onProgress: setExportProgress\r\n      });\r\n\r\n      const exportedVideoBlob = await videoExporter.render();\r\n      await downloadVideo(exportedVideoBlob);\r\n    } catch (error) {\r\n      console.error('Ошибка при экспорте:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const downloadVideo = async (blob) => {\r\n    const filename = `${exportSettings.filename}.${exportSettings.format}`;\r\n    \r\n    try {\r\n      if (exportSettings.saveDirectory && 'showDirectoryPicker' in window) {\r\n        const fileHandle = await exportSettings.saveDirectory.getFileHandle(filename, {\r\n          create: true,\r\n        });\r\n        const writable = await fileHandle.createWritable();\r\n        await writable.write(blob);\r\n        await writable.close();\r\n      } else {\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = filename;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n        URL.revokeObjectURL(url);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка сохранения:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (!isExporting) {\r\n      setExportStatus(\"idle\");\r\n      setExportProgress(0);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  // Логика отображения элементов\r\n  const elementsToShow = showAllElements ? timelineItems : timelineItems?.slice(0, 3);\r\n  const hasMoreElements = timelineItems && timelineItems.length > 3;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-2xl shadow-xl max-w-lg w-full max-h-[90vh] overflow-hidden\">\r\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800 flex items-center\">\r\n            <Download size={20} className=\"mr-2 text-blue-600\" />\r\n            Экспорт видео\r\n          </h2>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"p-1 hover:bg-gray-100 rounded-full transition-colors\"\r\n            disabled={isExporting}\r\n          >\r\n            <X size={18} />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-4 space-y-4 max-h-[calc(90vh-120px)] overflow-y-auto\">\r\n          {/* Статус экспорта */}\r\n          {exportStatus !== \"idle\" && (\r\n            <div className={`p-3 rounded-lg ${\r\n              exportStatus === \"processing\" ? \"bg-blue-50 border border-blue-200\" :\r\n              exportStatus === \"success\" ? \"bg-green-50 border border-green-200\" :\r\n              \"bg-red-50 border border-red-200\"\r\n            }`}>\r\n              <div className=\"flex items-center\">\r\n                {exportStatus === \"processing\" && (\r\n                  <>\r\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"></div>\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex justify-between text-sm text-blue-700 mb-1\">\r\n                        <span>Экспорт...</span>\r\n                        <span>{exportProgress}%</span>\r\n                      </div>\r\n                      <div className=\"w-full bg-blue-200 rounded-full h-1.5\">\r\n                        <div\r\n                          className=\"bg-blue-600 h-1.5 rounded-full transition-all duration-300\"\r\n                          style={{ width: `${exportProgress}%` }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                {exportStatus === \"success\" && (\r\n                  <>\r\n                    <Check size={16} className=\"text-green-600 mr-2\" />\r\n                    <span className=\"text-green-700 text-sm font-medium\">Готово!</span>\r\n                  </>\r\n                )}\r\n                {exportStatus === \"error\" && (\r\n                  <>\r\n                    <AlertCircle size={16} className=\"text-red-600 mr-2\" />\r\n                    <span className=\"text-red-700 text-sm font-medium\">Ошибка экспорта</span>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Быстрые пресеты */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Быстрые настройки\r\n            </label>\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              {presets.map((preset) => (\r\n                <button\r\n                  key={preset.name}\r\n                  onClick={() => applyPreset(preset)}\r\n                  className=\"p-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\r\n                  disabled={isExporting}\r\n                >\r\n                  {preset.name}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Настройки экспорта */}\r\n          <div className=\"grid grid-cols-2 gap-3\">\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                Разрешение\r\n              </label>\r\n              <select\r\n                value={exportSettings.resolution}\r\n                onChange={(e) => setExportSettings(prev => ({ ...prev, resolution: e.target.value }))}\r\n                className=\"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                disabled={isExporting}\r\n              >\r\n                <option value=\"3840x2160\">4K</option>\r\n                <option value=\"1920x1080\">1080p</option>\r\n                <option value=\"1280x720\">720p</option>\r\n                <option value=\"854x480\">480p</option>\r\n                <option value=\"1080x1920\">9:16 (TikTok)</option>\r\n                <option value=\"1080x1080\">1:1 (Instagram)</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                FPS\r\n              </label>\r\n              <select\r\n                value={exportSettings.fps}\r\n                onChange={(e) => setExportSettings(prev => ({ ...prev, fps: parseInt(e.target.value) }))}\r\n                className=\"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                disabled={isExporting}\r\n              >\r\n                <option value=\"24\">24</option>\r\n                <option value=\"30\">30</option>\r\n                <option value=\"60\">60</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                Качество\r\n              </label>\r\n              <select\r\n                value={exportSettings.quality}\r\n                onChange={(e) => setExportSettings(prev => ({ ...prev, quality: e.target.value }))}\r\n                className=\"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                disabled={isExporting}\r\n              >\r\n                {qualityOptions.map((quality) => (\r\n                  <option key={quality.value} value={quality.value}>\r\n                    {quality.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                Формат\r\n              </label>\r\n              <select\r\n                value={exportSettings.format}\r\n                onChange={(e) => setExportSettings(prev => ({ ...prev, format: e.target.value }))}\r\n                className=\"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                disabled={isExporting}\r\n              >\r\n                {formatOptions.map((format) => (\r\n                  <option key={format.value} value={format.value}>\r\n                    {format.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Имя файла и папка сохранения */}\r\n          <div className=\"space-y-2\">\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                Имя файла\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={exportSettings.filename}\r\n                onChange={(e) => setExportSettings(prev => ({ ...prev, filename: e.target.value }))}\r\n                className=\"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                disabled={isExporting}\r\n                placeholder=\"Имя файла\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                Папка для сохранения\r\n              </label>\r\n              <button\r\n                onClick={handleSelectDirectory}\r\n                className=\"w-full p-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors flex items-center justify-between\"\r\n                disabled={isExporting}\r\n              >\r\n                <span className=\"text-gray-600\">\r\n                  {exportSettings.saveDirectory ? exportSettings.saveDirectory.name : 'Выберите папку'}\r\n                </span>\r\n                <FolderOpen size={16} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Информация */}\r\n          <div className=\"bg-gray-50 rounded-lg p-3\">\r\n            <div className=\"grid grid-cols-2 gap-2 text-xs\">\r\n              <div>\r\n                <span className=\"text-gray-600\">Длительность:</span>\r\n                <span className=\"ml-1 font-medium\">{Math.round(videoDuration)}с</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"text-gray-600\">Размер:</span>\r\n                <span className=\"ml-1 font-medium\">{getFileSize()}</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"text-gray-600\">Битрейт:</span>\r\n                <span className=\"ml-1 font-medium\">{exportSettings.bitrate} kbps</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"text-gray-600\">Время:</span>\r\n                <span className=\"ml-1 font-medium\">~{estimatedTime}с</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Элементы для экспорта - ИСПРАВЛЕНО */}\r\n          <div className=\"bg-gray-50 rounded-lg p-3\">\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <span className=\"text-xs font-medium text-gray-800\">Элементы</span>\r\n              <span className=\"text-xs text-gray-600\">{timelineItems?.length || 0}</span>\r\n            </div>\r\n            {timelineItems && timelineItems.length > 0 ? (\r\n              <div className=\"space-y-1\">\r\n                {elementsToShow?.map((item) => (\r\n                  <div key={item.id} className=\"flex items-center justify-between text-xs\">\r\n                    <span className=\"text-gray-700 truncate\">{item.name}</span>\r\n                    <span className={`px-1 py-0.5 rounded text-xs ${\r\n                      item.trackType === \"main\" ? \"bg-blue-100 text-blue-700\" :\r\n                      item.trackType === \"audio\" ? \"bg-green-100 text-green-700\" :\r\n                      \"bg-purple-100 text-purple-700\"\r\n                    }`}>\r\n                      {item.trackType}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n                {hasMoreElements && (\r\n                  <button\r\n                    onClick={() => setShowAllElements(!showAllElements)}\r\n                    className=\"w-full text-xs text-blue-600 hover:text-blue-800 flex items-center justify-center py-1 transition-colors\"\r\n                  >\r\n                    {showAllElements ? (\r\n                      <>\r\n                        Скрыть <ChevronUp size={12} className=\"ml-1\" />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        +{timelineItems.length - 3} ещё <ChevronDown size={12} className=\"ml-1\" />\r\n                      </>\r\n                    )}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-xs text-gray-500 text-center py-2\">\r\n                Нет элементов\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Кнопки */}\r\n        <div className=\"flex justify-end space-x-3 p-4 border-t border-gray-200\">\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"px-4 py-2 text-sm text-gray-600 hover:text-gray-800 transition-colors\"\r\n            disabled={isExporting}\r\n          >\r\n            Отмена\r\n          </button>\r\n          <button\r\n            onClick={handleExport}\r\n            disabled={isExporting || !timelineItems || timelineItems.length === 0}\r\n            className={`px-4 py-2 text-sm rounded-lg font-medium transition-all flex items-center ${\r\n              isExporting || !timelineItems || timelineItems.length === 0\r\n                ? \"bg-gray-300 text-gray-500 cursor-not-allowed\"\r\n                : \"bg-blue-600 text-white hover:bg-blue-700\"\r\n            }`}\r\n          >\r\n            {isExporting ? (\r\n              <>\r\n                <div className=\"animate-spin rounded-full h-3 w-3 border-b-2 border-white mr-2\"></div>\r\n                Экспорт...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Download size={14} className=\"mr-2\" />\r\n                Экспортировать\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Полностью переписанный VideoExporter класс для правильного экспорта\r\nclass VideoExporter {\r\n  constructor({ timelineItems, tracks, videoDuration, settings, onProgress }) {\r\n    this.timelineItems = timelineItems;\r\n    this.tracks = tracks;\r\n    this.videoDuration = videoDuration;\r\n    this.settings = settings;\r\n    this.onProgress = onProgress;\r\n\r\n    // Создаем основной canvas для композиции\r\n    this.canvas = document.createElement(\"canvas\");\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n\r\n    const [width, height] = settings.resolution.split(\"x\").map(Number);\r\n    this.canvas.width = width;\r\n    this.canvas.height = height;\r\n\r\n    // Создаем аудио контекст для работы со звуком\r\n    this.audioContext = null;\r\n    this.audioSources = [];\r\n    this.audioBuffers = new Map();\r\n    this.audioDestination = null;\r\n    \r\n    // Подготовленные элементы\r\n    this.preparedElements = new Map();\r\n  }\r\n\r\n  async render() {\r\n    try {\r\n      console.log('🎬 СТАРТ ЭКСПОРТА ВИДЕО');\r\n      console.log('📊 Параметры:', {\r\n        элементов: this.timelineItems.length,\r\n        длительность: this.videoDuration,\r\n        разрешение: this.settings.resolution,\r\n        fps: this.settings.fps\r\n      });\r\n\r\n      // Проверяем базовые требования\r\n      if (!this.timelineItems || this.timelineItems.length === 0) {\r\n        throw new Error('Нет элементов для экспорта');\r\n      }\r\n\r\n      if (!this.videoDuration || this.videoDuration <= 0) {\r\n        throw new Error('Неверная длительность видео');\r\n      }\r\n\r\n      // Подготавливаем все элементы\r\n      await this.prepareAllElements();\r\n\r\n      // Настраиваем аудио (опционально)\r\n      await this.setupAudio();\r\n\r\n      // Создаем видео поток\r\n      const stream = this.canvas.captureStream(this.settings.fps);\r\n      console.log('🎥 Canvas stream создан:', stream);\r\n      \r\n      // Добавляем аудио к потоку (если есть)\r\n      if (this.audioContext && this.audioDestination) {\r\n        const audioTracks = this.audioDestination.stream.getAudioTracks();\r\n        audioTracks.forEach(track => {\r\n          stream.addTrack(track);\r\n        });\r\n        console.log(`🔊 Добавлено ${audioTracks.length} аудио треков`);\r\n      }\r\n\r\n      // Проверяем поддерживаемые форматы\r\n      const mimeType = this.getMimeType();\r\n      console.log('🎞️ Используемый MIME тип:', mimeType);\r\n\r\n      // Настраиваем запись\r\n      const options = {\r\n        mimeType: mimeType,\r\n        videoBitsPerSecond: this.settings.bitrate * 1000,\r\n      };\r\n\r\n      // Добавляем аудио битрейт только если есть аудио\r\n      if (this.audioDestination) {\r\n        options.audioBitsPerSecond = 128000;\r\n      }\r\n\r\n      console.log('⚙️ Опции MediaRecorder:', options);\r\n\r\n      // Проверяем поддержку MediaRecorder\r\n      if (!MediaRecorder.isTypeSupported(mimeType)) {\r\n        console.warn('⚠️ MIME тип не поддерживается, используем базовый');\r\n        options.mimeType = 'video/webm';\r\n      }\r\n\r\n      const mediaRecorder = new MediaRecorder(stream, options);\r\n      const chunks = [];\r\n      let recordedSize = 0;\r\n\r\n      mediaRecorder.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          chunks.push(event.data);\r\n          recordedSize += event.data.size;\r\n          console.log(`📦 Получен чанк: ${event.data.size} байт (всего: ${recordedSize})`);\r\n        }\r\n      };\r\n\r\n      return new Promise((resolve, reject) => {\r\n        mediaRecorder.onstop = () => {\r\n          console.log(`✅ Запись завершена. Чанков: ${chunks.length}, размер: ${recordedSize} байт`);\r\n          \r\n          if (chunks.length === 0 || recordedSize === 0) {\r\n            reject(new Error('Не удалось записать видео - нет данных'));\r\n            return;\r\n          }\r\n\r\n          const blob = new Blob(chunks, {\r\n            type: `video/${this.settings.format}`,\r\n          });\r\n          \r\n          console.log(`🎉 Финальный файл: ${(blob.size / 1024 / 1024).toFixed(2)} МБ`);\r\n          \r\n          // Очистка ресурсов\r\n          this.cleanup();\r\n          \r\n          resolve(blob);\r\n        };\r\n\r\n        mediaRecorder.onerror = (error) => {\r\n          console.error('❌ Ошибка MediaRecorder:', error);\r\n          this.cleanup();\r\n          reject(new Error(`Ошибка записи: ${error.message || error}`));\r\n        };\r\n\r\n        // Начинаем запись\r\n        mediaRecorder.start(1000);\r\n        console.log('🔴 MediaRecorder запущен');\r\n\r\n        // Запускаем рендеринг кадров\r\n        this.renderFrames()\r\n          .then(() => {\r\n            console.log('🎯 Рендеринг завершен, останавливаем запись...');\r\n            setTimeout(() => {\r\n              if (mediaRecorder.state === 'recording') {\r\n                mediaRecorder.stop();\r\n              }\r\n            }, 1000); // Даем время на финализацию\r\n          })\r\n          .catch((error) => {\r\n            console.error('💥 Ошибка рендеринга:', error);\r\n            if (mediaRecorder.state === 'recording') {\r\n              mediaRecorder.stop();\r\n            }\r\n            reject(error);\r\n          });\r\n      });\r\n    } catch (error) {\r\n      console.error('💥 КРИТИЧЕСКАЯ ОШИБКА render():', error);\r\n      this.cleanup();\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async prepareAllElements() {\r\n    console.log('📦 Подготовка элементов...');\r\n    this.onProgress?.(10);\r\n\r\n    const preparationPromises = this.timelineItems.map(async (item, index) => {\r\n      try {\r\n        console.log(`📄 Подготавливаем [${index}]: ${item.name}`);\r\n        \r\n        const elementType = this.determineElementType(item);\r\n        console.log(`🎯 Тип элемента ${item.name}: ${elementType}`);\r\n        \r\n        if (elementType === 'video') {\r\n          console.log(`🎬 Подготавливаем видео: ${item.name}`);\r\n          await this.prepareVideoElement(item);\r\n        } else if (elementType === 'image') {\r\n          console.log(`🖼️ Подготавливаем изображение: ${item.name}`);\r\n          await this.prepareImageElement(item);\r\n        } else if (elementType === 'audio') {\r\n          console.log(`🎵 Подготавливаем аудио: ${item.name}`);\r\n          await this.prepareAudioElement(item);\r\n        } else if (elementType === 'text') {\r\n          console.log(`📝 Текстовый элемент: ${item.name}`);\r\n        } else {\r\n          console.log(`❓ Неизвестный тип элемента: ${item.name}`);\r\n        }\r\n        \r\n        this.preparedElements.set(item.id, item);\r\n        console.log(`✅ Элемент подготовлен: ${item.name}`);\r\n      } catch (error) {\r\n        console.warn(`⚠️ Ошибка подготовки ${item.name}:`, error);\r\n      }\r\n    });\r\n\r\n    await Promise.all(preparationPromises);\r\n    this.onProgress?.(30);\r\n    console.log('✅ Все элементы подготовлены');\r\n  }\r\n\r\n  isVideoElement(item) {\r\n    return (\r\n      item.type === \"video\" || \r\n      item.trackType === \"main\" ||\r\n      (item.file && item.file.type?.startsWith('video/')) ||\r\n      (item.src && /\\.(mp4|webm|mov|avi)$/i.test(item.src)) ||\r\n      (item.url && /\\.(mp4|webm|mov|avi)$/i.test(item.url))\r\n    );\r\n  }\r\n\r\n  isImageElement(item) {\r\n    return (\r\n      item.type === \"image\" ||\r\n      (item.file && item.file.type?.startsWith('image/')) ||\r\n      (item.src && /\\.(jpg|jpeg|png|gif|webp)$/i.test(item.src)) ||\r\n      (item.url && /\\.(jpg|jpeg|png|gif|webp)$/i.test(item.url))\r\n    );\r\n  }\r\n\r\n  isAudioElement(item) {\r\n    return (\r\n      item.type === \"audio\" || \r\n      item.trackType === \"audio\" ||\r\n      (item.file && item.file.type?.startsWith('audio/')) ||\r\n      (item.src && /\\.(mp3|wav|ogg|m4a)$/i.test(item.src)) ||\r\n      (item.url && /\\.(mp3|wav|ogg|m4a)$/i.test(item.url))\r\n    );\r\n  }\r\n\r\n  async prepareVideoElement(item) {\r\n    if (item.videoElement) return;\r\n\r\n    const video = document.createElement(\"video\");\r\n    video.crossOrigin = \"anonymous\";\r\n    video.muted = true;\r\n    video.preload = \"metadata\";\r\n    \r\n    // Получаем URL\r\n    let videoUrl = this.getElementUrl(item);\r\n    if (!videoUrl) {\r\n      console.warn(`❌ Не найден URL для видео: ${item.name}`);\r\n      return;\r\n    }\r\n\r\n    video.src = videoUrl;\r\n    item.videoElement = video;\r\n    \r\n    await new Promise((resolve, reject) => {\r\n      const timeout = setTimeout(() => {\r\n        console.warn(`⏰ Таймаут загрузки видео: ${item.name}`);\r\n        resolve();\r\n      }, 10000);\r\n\r\n      video.onloadedmetadata = () => {\r\n        clearTimeout(timeout);\r\n        console.log(`🎥 Видео загружено: ${item.name} (${video.duration.toFixed(1)}с)`);\r\n        resolve();\r\n      };\r\n      \r\n      video.onerror = (e) => {\r\n        clearTimeout(timeout);\r\n        console.error(`❌ Ошибка загрузки видео: ${item.name}`, e);\r\n        resolve(); // Не блокируем весь процесс\r\n      };\r\n    });\r\n  }\r\n\r\n  async prepareImageElement(item) {\r\n    if (item.imageElement) return;\r\n\r\n    const img = new Image();\r\n    img.crossOrigin = \"anonymous\";\r\n    \r\n    let imageUrl = this.getElementUrl(item);\r\n    if (!imageUrl) {\r\n      console.warn(`❌ Не найден URL для изображения: ${item.name}`);\r\n      return;\r\n    }\r\n\r\n    img.src = imageUrl;\r\n    item.imageElement = img;\r\n    \r\n    await new Promise((resolve) => {\r\n      const timeout = setTimeout(() => {\r\n        console.warn(`⏰ Таймаут загрузки изображения: ${item.name}`);\r\n        resolve();\r\n      }, 5000);\r\n\r\n      img.onload = () => {\r\n        clearTimeout(timeout);\r\n        console.log(`🖼️ Изображение загружено: ${item.name} (${img.naturalWidth}x${img.naturalHeight})`);\r\n        resolve();\r\n      };\r\n      \r\n      img.onerror = (e) => {\r\n        clearTimeout(timeout);\r\n        console.error(`❌ Ошибка загрузки изображения: ${item.name}`, e);\r\n        resolve();\r\n      };\r\n    });\r\n  }\r\n\r\n  async prepareAudioElement(item) {\r\n    if (!this.audioContext) {\r\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n    }\r\n\r\n    let audioUrl = this.getElementUrl(item);\r\n    if (!audioUrl) {\r\n      console.warn(`❌ Не найден URL для аудио: ${item.name}`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(`🎵 Загружаем аудио: ${item.name}`);\r\n      \r\n      let arrayBuffer;\r\n      if (item.file && item.file instanceof File) {\r\n        arrayBuffer = await item.file.arrayBuffer();\r\n      } else {\r\n        const response = await fetch(audioUrl);\r\n        arrayBuffer = await response.arrayBuffer();\r\n      }\r\n\r\n      const audioBuffer = await this.audioContext.decodeAudioData(arrayBuffer);\r\n      this.audioBuffers.set(item.id, audioBuffer);\r\n      \r\n      console.log(`🎵 Аудио подготовлено: ${item.name} (${audioBuffer.duration.toFixed(1)}с)`);\r\n    } catch (error) {\r\n      console.error(`❌ Ошибка подготовки аудио ${item.name}:`, error);\r\n    }\r\n  }\r\n\r\n  getElementUrl(item) {\r\n    if (item.file && item.file instanceof File) {\r\n      return URL.createObjectURL(item.file);\r\n    }\r\n    return item.src || item.url || item.data;\r\n  }\r\n\r\n  async setupAudio() {\r\n    if (!this.audioContext || this.audioBuffers.size === 0) return;\r\n\r\n    console.log('🔊 Настраиваем аудио...');\r\n    \r\n    // Создаем destination для микширования аудио\r\n    this.audioDestination = this.audioContext.createMediaStreamDestination();\r\n    \r\n    // Создаем источники для каждого аудио элемента\r\n    for (const [itemId, audioBuffer] of this.audioBuffers) {\r\n      const item = this.timelineItems.find(i => i.id === itemId);\r\n      if (!item) continue;\r\n\r\n      // Создаем источник и подключаем к destination\r\n      const source = this.audioContext.createBufferSource();\r\n      source.buffer = audioBuffer;\r\n      source.connect(this.audioDestination);\r\n      \r\n      // Добавляем в список источников\r\n      this.audioSources.push({\r\n        source,\r\n        item,\r\n        startTime: item.startTime || 0,\r\n        duration: item.duration || audioBuffer.duration\r\n      });\r\n    }\r\n\r\n    console.log(`🔊 Подготовлено ${this.audioSources.length} аудио источников`);\r\n  }\r\n\r\n  async renderFrames() {\r\n    const frameCount = Math.ceil(this.videoDuration * this.settings.fps);\r\n    const frameDuration = 1000 / this.settings.fps;\r\n    \r\n    console.log(`🎞️ Начинаем рендеринг ${frameCount} кадров (${this.settings.fps} FPS)`);\r\n    console.log(`⏱️ Длительность кадра: ${frameDuration.toFixed(2)}мс`);\r\n\r\n    // Запускаем аудио источники\r\n    this.startAudioSources();\r\n\r\n    // Рендерим тестовый кадр для проверки\r\n    console.log('🧪 Рендерим тестовый кадр...');\r\n    await this.renderFrame(0);\r\n    console.log('✅ Тестовый кадр отрендерен');\r\n\r\n    for (let frame = 0; frame < frameCount; frame++) {\r\n      const currentTime = frame / this.settings.fps;\r\n      \r\n      try {\r\n        await this.renderFrame(currentTime);\r\n        \r\n        // Обновляем прогресс\r\n        const progress = 30 + Math.round((frame / frameCount) * 60);\r\n        this.onProgress?.(progress);\r\n        \r\n        // Логируем прогресс каждые 30 кадров\r\n        if (frame % 30 === 0) {\r\n          console.log(`🎬 Кадр ${frame}/${frameCount} (${currentTime.toFixed(1)}с) - ${progress}%`);\r\n          await new Promise(resolve => setTimeout(resolve, 1));\r\n        }\r\n      } catch (error) {\r\n        console.error(`❌ Ошибка рендеринга кадра ${frame} (время ${currentTime.toFixed(2)}с):`, error);\r\n        // Рендерим заглушку вместо ошибочного кадра\r\n        this.renderErrorFrame(currentTime, error.message);\r\n      }\r\n    }\r\n\r\n    this.onProgress?.(90);\r\n    console.log('🎉 Все кадры отрендерены успешно!');\r\n  }\r\n\r\n  startAudioSources() {\r\n    if (!this.audioContext || this.audioSources.length === 0) return;\r\n\r\n    console.log('▶️ Запускаем аудио источники...');\r\n    \r\n    // Возобновляем аудио контекст если он приостановлен\r\n    if (this.audioContext.state === 'suspended') {\r\n      this.audioContext.resume();\r\n    }\r\n    \r\n    this.audioSources.forEach(({ source, item, startTime, duration }) => {\r\n      try {\r\n        // Планируем воспроизведение аудио согласно таймлайну\r\n        const when = this.audioContext.currentTime + startTime;\r\n        const offset = 0;\r\n        const sourceDuration = Math.min(duration, source.buffer.duration);\r\n        \r\n        source.start(when, offset, sourceDuration);\r\n        console.log(`🎵 Запущено аудио: ${item.name} в ${startTime}с на ${sourceDuration}с`);\r\n      } catch (error) {\r\n        console.warn(`⚠️ Ошибка запуска аудио ${item.name}:`, error);\r\n      }\r\n    });\r\n  }\r\n\r\n  async renderFrame(currentTime) {\r\n    console.log(`🖼️ Рендерим кадр на времени ${currentTime.toFixed(2)}с`);\r\n    \r\n    // Очищаем canvas черным фоном\r\n    this.ctx.fillStyle = \"#000000\";\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    // Получаем активные элементы для текущего времени\r\n    const activeItems = this.getActiveItems(currentTime);\r\n    console.log(`📋 Активных элементов на ${currentTime.toFixed(2)}с: ${activeItems.length}`);\r\n\r\n    if (activeItems.length === 0) {\r\n      console.log('⚠️ Нет активных элементов, рендерим временную метку');\r\n      this.renderTimestamp(currentTime);\r\n      return;\r\n    }\r\n\r\n    // Выводим список активных элементов\r\n    activeItems.forEach((item, index) => {\r\n      console.log(`  ${index + 1}. ${item.name} (${item.type || item.trackType}) - ${item.startTime}с-${(item.startTime || 0) + (item.duration || 0)}с`);\r\n    });\r\n\r\n    // Сортируем элементы по слоям (z-index)\r\n    const sortedItems = this.sortItemsByLayer(activeItems);\r\n\r\n    // Рендерим каждый активный элемент\r\n    for (let i = 0; i < sortedItems.length; i++) {\r\n      const item = sortedItems[i];\r\n      const relativeTime = currentTime - (item.startTime || 0);\r\n      \r\n      console.log(`🎨 Рендерим элемент ${i + 1}/${sortedItems.length}: ${item.name} (относительное время: ${relativeTime.toFixed(2)}с)`);\r\n      \r\n      try {\r\n        await this.renderItem(item, relativeTime, currentTime);\r\n        console.log(`✅ Элемент ${item.name} отрендерен`);\r\n      } catch (error) {\r\n        console.error(`❌ Ошибка рендеринга элемента ${item.name}:`, error);\r\n        this.renderPlaceholderItem(`Ошибка: ${item.name}`);\r\n      }\r\n    }\r\n    \r\n    console.log(`✅ Кадр ${currentTime.toFixed(2)}с завершен`);\r\n  }\r\n\r\n  getActiveItems(currentTime) {\r\n    return this.timelineItems.filter(item => {\r\n      const startTime = item.startTime || 0;\r\n      const duration = item.duration || this.videoDuration;\r\n      const endTime = startTime + duration;\r\n      \r\n      return currentTime >= startTime && currentTime < endTime;\r\n    });\r\n  }\r\n\r\n  sortItemsByLayer(items) {\r\n    const layerOrder = {\r\n      audio: 0,      // Аудио не рендерится визуально\r\n      background: 1,\r\n      main: 2,\r\n      video: 2, \r\n      image: 3,\r\n      overlay: 4,\r\n      text: 5,\r\n      title: 5\r\n    };\r\n\r\n    return [...items].sort((a, b) => {\r\n      const typeA = this.determineElementType(a);\r\n      const typeB = this.determineElementType(b);\r\n      \r\n      // Аудио элементы всегда в конец (хотя они не рендерятся)\r\n      if (typeA === 'audio' && typeB !== 'audio') return 1;\r\n      if (typeB === 'audio' && typeA !== 'audio') return -1;\r\n      \r\n      const orderA = layerOrder[a.trackType] || layerOrder[a.type] || layerOrder[typeA] || 3;\r\n      const orderB = layerOrder[b.trackType] || layerOrder[b.type] || layerOrder[typeB] || 3;\r\n      \r\n      return orderA - orderB;\r\n    });\r\n  }\r\n\r\n  async renderItem(item, relativeTime, currentTime) {\r\n    try {\r\n      this.ctx.save();\r\n\r\n      console.log(`🔍 Анализируем элемент: ${item.name}`);\r\n      console.log(`📝 Тип: ${item.type}, TrackType: ${item.trackType}`);\r\n      console.log(`📂 HasFile: ${!!item.file}, FileType: ${item.file?.type}`);\r\n      console.log(`🔗 HasSrc: ${!!item.src}, HasUrl: ${!!item.url}`);\r\n\r\n      // Определяем тип элемента более точно\r\n      const elementType = this.determineElementType(item);\r\n      console.log(`🎯 Определенный тип: ${elementType}`);\r\n\r\n      // Пропускаем аудио элементы - они не рендерятся визуально\r\n      if (elementType === 'audio') {\r\n        console.log(`🎵 Пропускаем аудио элемент: ${item.name}`);\r\n        return;\r\n      }\r\n\r\n      if (elementType === 'video') {\r\n        if (!item.videoElement) {\r\n          console.warn(`❌ Видео элемент не подготовлен: ${item.name}`);\r\n          this.renderPlaceholderItem(`Видео не загружено: ${item.name}`);\r\n          return;\r\n        }\r\n        await this.renderVideoItem(item, relativeTime);\r\n      } else if (elementType === 'image') {\r\n        if (!item.imageElement) {\r\n          console.warn(`❌ Изображение не подготовлено: ${item.name}`);\r\n          this.renderPlaceholderItem(`Изображение не загружено: ${item.name}`);\r\n          return;\r\n        }\r\n        this.renderImageItem(item);\r\n      } else if (elementType === 'text') {\r\n        this.renderTextItem(item);\r\n      } else {\r\n        console.warn(`❓ Неизвестный тип элемента: ${item.name}`);\r\n        this.renderPlaceholderItem(item.name || 'Неизвестный элемент');\r\n      }\r\n    } catch (error) {\r\n      console.warn(`⚠️ Ошибка рендеринга элемента ${item.name}:`, error);\r\n      this.renderPlaceholderItem(`Ошибка: ${item.name}`);\r\n    } finally {\r\n      this.ctx.restore();\r\n    }\r\n  }\r\n\r\n  determineElementType(item) {\r\n    // Сначала проверяем по типу файла (самый надежный способ)\r\n    if (item.file?.type) {\r\n      if (item.file.type.startsWith('video/')) return 'video';\r\n      if (item.file.type.startsWith('image/')) return 'image';\r\n      if (item.file.type.startsWith('audio/')) return 'audio';\r\n    }\r\n\r\n    // Проверяем по расширению файла в названии\r\n    const fileName = item.name || item.src || item.url || '';\r\n    const lowerName = fileName.toLowerCase();\r\n    \r\n    // Аудио расширения\r\n    if (/\\.(mp3|wav|ogg|m4a|aac|flac)$/i.test(lowerName)) {\r\n      return 'audio';\r\n    }\r\n    \r\n    // Видео расширения\r\n    if (/\\.(mp4|webm|mov|avi|mkv)$/i.test(lowerName)) {\r\n      return 'video';\r\n    }\r\n    \r\n    // Изображения\r\n    if (/\\.(jpg|jpeg|png|gif|webp|svg)$/i.test(lowerName)) {\r\n      return 'image';\r\n    }\r\n\r\n    // Проверяем по типу элемента\r\n    if (item.type === 'video' || item.trackType === 'main') return 'video';\r\n    if (item.type === 'image') return 'image';\r\n    if (item.type === 'audio' || item.trackType === 'audio' || item.trackType === 'audios') return 'audio';\r\n    if (item.type === 'text' || item.trackType === 'text' || item.text || item.content || item.title) return 'text';\r\n\r\n    // По умолчанию считаем текстом, если есть текстовое содержимое\r\n    if (item.text || item.content || item.title) return 'text';\r\n\r\n    // Если ничего не определили, возвращаем неизвестный тип\r\n    return 'unknown';\r\n  }\r\n\r\n  async renderVideoItem(item, relativeTime) {\r\n    const video = item.videoElement;\r\n    if (!video || video.readyState < 2) {\r\n      this.renderPlaceholderItem(`Загрузка: ${item.name}`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Устанавливаем время видео\r\n      const targetTime = Math.max(0, Math.min(relativeTime, video.duration));\r\n      \r\n      if (Math.abs(video.currentTime - targetTime) > 0.1) {\r\n        video.currentTime = targetTime;\r\n        \r\n        // Ждем готовности кадра\r\n        let attempts = 0;\r\n        while (video.readyState < 2 && attempts < 20) {\r\n          await new Promise(resolve => setTimeout(resolve, 5));\r\n          attempts++;\r\n        }\r\n      }\r\n\r\n      // Рендерим видео кадр\r\n      this.drawScaledElement(video);\r\n    } catch (error) {\r\n      console.warn(`⚠️ Ошибка рендеринга видео ${item.name}:`, error);\r\n      this.renderPlaceholderItem(`Видео: ${item.name}`);\r\n    }\r\n  }\r\n\r\n  renderImageItem(item) {\r\n    const img = item.imageElement;\r\n    if (!img || !img.complete || img.naturalWidth === 0) {\r\n      this.renderPlaceholderItem(`Изображение: ${item.name}`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.drawScaledElement(img);\r\n    } catch (error) {\r\n      console.warn(`⚠️ Ошибка рендеринга изображения ${item.name}:`, error);\r\n      this.renderPlaceholderItem(`Изображение: ${item.name}`);\r\n    }\r\n  }\r\n\r\n  renderTextItem(item) {\r\n    const text = item.text || item.content || item.title || item.name;\r\n    \r\n    // Настройка текста\r\n    this.ctx.fillStyle = item.color || \"#ffffff\";\r\n    this.ctx.font = `${item.fontSize || Math.min(48, this.canvas.width / 20)}px ${item.fontFamily || 'Arial'}`;\r\n    this.ctx.textAlign = item.textAlign || \"center\";\r\n    this.ctx.textBaseline = \"middle\";\r\n    \r\n    // Позиция текста\r\n    const x = item.x !== undefined ? item.x : this.canvas.width / 2;\r\n    const y = item.y !== undefined ? item.y : this.canvas.height / 2;\r\n    \r\n    // Обводка текста для лучшей читаемости\r\n    this.ctx.strokeStyle = \"#000000\";\r\n    this.ctx.lineWidth = 2;\r\n    this.ctx.strokeText(text, x, y);\r\n    this.ctx.fillText(text, x, y);\r\n  }\r\n\r\n  renderPlaceholderItem(text) {\r\n    // Полупрозрачный фон\r\n    this.ctx.fillStyle = \"rgba(64, 64, 64, 0.8)\";\r\n    this.ctx.fillRect(10, 10, this.canvas.width - 20, 40);\r\n    \r\n    // Текст\r\n    this.ctx.fillStyle = \"#ffffff\";\r\n    this.ctx.font = `${Math.min(16, this.canvas.width / 60)}px Arial`;\r\n    this.ctx.textAlign = \"left\";\r\n    this.ctx.textBaseline = \"middle\";\r\n    this.ctx.fillText(text, 20, 30);\r\n  }\r\n\r\n  renderTimestamp(currentTime) {\r\n    // Показываем время при отсутствии элементов\r\n    this.ctx.fillStyle = \"#333333\";\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    \r\n    this.ctx.fillStyle = \"#ffffff\";\r\n    this.ctx.font = `${Math.min(24, this.canvas.width / 40)}px Arial`;\r\n    this.ctx.textAlign = \"center\";\r\n    this.ctx.textBaseline = \"middle\";\r\n    this.ctx.fillText(\r\n      `Время: ${currentTime.toFixed(1)}с`, \r\n      this.canvas.width / 2, \r\n      this.canvas.height / 2\r\n    );\r\n  }\r\n\r\n  renderErrorFrame(currentTime, errorMessage) {\r\n    // Красный фон для ошибки\r\n    this.ctx.fillStyle = \"#ff0000\";\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    \r\n    // Белый текст с ошибкой\r\n    this.ctx.fillStyle = \"#ffffff\";\r\n    this.ctx.font = `${Math.min(32, this.canvas.width / 30)}px Arial`;\r\n    this.ctx.textAlign = \"center\";\r\n    this.ctx.textBaseline = \"middle\";\r\n    \r\n    const x = this.canvas.width / 2;\r\n    const y = this.canvas.height / 2;\r\n    \r\n    this.ctx.fillText(`ОШИБКА КАДРА`, x, y - 40);\r\n    this.ctx.fillText(`Время: ${currentTime.toFixed(1)}с`, x, y);\r\n    this.ctx.fillText(errorMessage.substring(0, 50), x, y + 40);\r\n  }\r\n\r\n  drawScaledElement(element) {\r\n    const elementWidth = element.videoWidth || element.naturalWidth || element.width;\r\n    const elementHeight = element.videoHeight || element.naturalHeight || element.height;\r\n    \r\n    if (!elementWidth || !elementHeight) {\r\n      console.warn('⚠️ Элемент не имеет размеров:', element);\r\n      return;\r\n    }\r\n    \r\n    const canvasRatio = this.canvas.width / this.canvas.height;\r\n    const elementRatio = elementWidth / elementHeight;\r\n    \r\n    let drawWidth, drawHeight, drawX, drawY;\r\n\r\n    // Масштабируем с сохранением пропорций (cover)\r\n    if (elementRatio > canvasRatio) {\r\n      // Элемент шире canvas\r\n      drawHeight = this.canvas.height;\r\n      drawWidth = this.canvas.height * elementRatio;\r\n      drawX = (this.canvas.width - drawWidth) / 2;\r\n      drawY = 0;\r\n    } else {\r\n      // Элемент выше canvas\r\n      drawWidth = this.canvas.width;\r\n      drawHeight = this.canvas.width / elementRatio;\r\n      drawX = 0;\r\n      drawY = (this.canvas.height - drawHeight) / 2;\r\n    }\r\n\r\n    try {\r\n      this.ctx.drawImage(element, drawX, drawY, drawWidth, drawHeight);\r\n    } catch (error) {\r\n      console.error('💥 Критическая ошибка отрисовки:', error);\r\n      this.renderPlaceholderItem('Ошибка отрисовки');\r\n    }\r\n  }\r\n\r\n  getMimeType() {\r\n    // Проверяем поддерживаемые форматы\r\n    const formats = [\r\n      'video/webm;codecs=vp9,opus',\r\n      'video/webm;codecs=vp8,opus', \r\n      'video/mp4;codecs=h264,aac',\r\n      'video/webm;codecs=vp9',\r\n      'video/webm;codecs=vp8',\r\n      'video/webm'\r\n    ];\r\n    \r\n    for (const format of formats) {\r\n      if (MediaRecorder.isTypeSupported(format)) {\r\n        console.log(`🎬 Используем формат: ${format}`);\r\n        return format;\r\n      }\r\n    }\r\n    \r\n    console.warn('⚠️ Используем базовый формат: video/webm');\r\n    return 'video/webm';\r\n  }\r\n\r\n  cleanup() {\r\n    console.log('🧹 Очистка ресурсов...');\r\n    \r\n    // Останавливаем аудио источники\r\n    this.audioSources.forEach(({ source }) => {\r\n      try {\r\n        if (source.buffer) {\r\n          source.stop();\r\n        }\r\n      } catch (error) {\r\n        // Источник уже остановлен\r\n      }\r\n    });\r\n    \r\n    // Очищаем URL объекты\r\n    this.timelineItems.forEach(item => {\r\n      if (item.videoElement?.src.startsWith('blob:')) {\r\n        URL.revokeObjectURL(item.videoElement.src);\r\n      }\r\n      if (item.imageElement?.src.startsWith('blob:')) {\r\n        URL.revokeObjectURL(item.imageElement.src);\r\n      }\r\n    });\r\n\r\n    // Закрываем аудио контекст\r\n    if (this.audioContext && this.audioContext.state !== 'closed') {\r\n      this.audioContext.close();\r\n    }\r\n\r\n    // Очищаем массивы\r\n    this.audioSources = [];\r\n    this.audioBuffers.clear();\r\n    this.preparedElements.clear();\r\n    this.audioDestination = null;\r\n  }\r\n}\r\n\r\nexport const useVideoExporter = () => {\r\n  const [isExportModalOpen, setIsExportModalOpen] = useState(false);\r\n\r\n  const openExportModal = () => setIsExportModalOpen(true);\r\n  const closeExportModal = () => setIsExportModalOpen(false);\r\n\r\n  return {\r\n    isExportModalOpen,\r\n    openExportModal,\r\n    closeExportModal,\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Scriptify\\\\ai-content-studio\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const apiCall = async (endpoint, options = {}) => {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const token = localStorage.getItem(\"authToken\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(token && {\n          Authorization: `Bearer ${token}`\n        }),\n        ...options.headers\n      },\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || \"Something went wrong\");\n      }\n      return data;\n    } catch (error) {\n      console.error(\"API call error:\", error);\n      throw error;\n    }\n  };\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await apiCall(\"/api/auth/me\");\n        if (response.success) {\n          setUser(response.data.user);\n          setIsAuthenticated(true);\n          localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\n        } else {\n          localStorage.removeItem(\"authToken\");\n          localStorage.removeItem(\"userData\");\n        }\n      } catch (error) {\n        console.error(\"Auth check failed:\", error);\n        localStorage.removeItem(\"authToken\");\n        localStorage.removeItem(\"userData\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkPaymentSuccess();\n    checkAuth();\n  }, []);\n  const checkPaymentSuccess = async () => {\n    try {\n      const urlParams = new URLSearchParams(window.location.search);\n      const sessionId = urlParams.get(\"session_id\");\n      const success = urlParams.get(\"success\");\n      if (sessionId && success === \"true\") {\n        const token = localStorage.getItem(\"authToken\");\n        if (!token) {\n          console.log(\"❌ No auth token found\");\n          return;\n        }\n        try {\n          const response = await apiCall(`/api/payments/session/${sessionId}`);\n          if (response.success && response.data.user) {\n            setUser(response.data.user);\n            localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\n          }\n        } catch (error) {\n          console.error(\"❌ Payment verification failed:\", error);\n        }\n        window.history.replaceState({}, document.title, window.location.pathname);\n      }\n    } catch (error) {\n      console.error(\"❌ Payment check error:\", error);\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      setLoading(true);\n      const response = await apiCall(\"/api/auth/register\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      if (response.success) {\n        const {\n          user: userData,\n          token\n        } = response.data;\n        localStorage.setItem(\"authToken\", token);\n        localStorage.setItem(\"userData\", JSON.stringify(userData));\n        setUser(userData);\n        setIsAuthenticated(true);\n        return {\n          success: true,\n          user: userData\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Registration failed. Please try again.\"\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await apiCall(\"/api/auth/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.success) {\n        const {\n          user: userData,\n          token\n        } = response.data;\n        localStorage.setItem(\"authToken\", token);\n        localStorage.setItem(\"userData\", JSON.stringify(userData));\n        setUser(userData);\n        setIsAuthenticated(true);\n        return {\n          success: true,\n          user: userData\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Login failed. Please try again.\"\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      await apiCall(\"/api/auth/logout\", {\n        method: \"POST\"\n      });\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"userData\");\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const generateScript = async (topic, duration = \"medium\", keyPoints = [], contentType = \"Лайфстайл\") => {\n    try {\n      const response = await apiCall(\"/api/script/generate\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          topic,\n          duration,\n          keyPoints,\n          contentType\n        })\n      });\n      if (response.success) {\n        return {\n          success: true,\n          script: response.data.script\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Script generation error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Script generation failed. Please try again.\"\n      };\n    }\n  };\n  const generateKeyPoints = async (topic, contentType = \"Лайфстайл\") => {\n    try {\n      const response = await apiCall(\"/api/script/key-points\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          topic,\n          contentType\n        })\n      });\n      if (response.success) {\n        return {\n          success: true,\n          points: response.data.points\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Key points generation error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Key points generation failed. Please try again.\"\n      };\n    }\n  };\n  const improveScript = async (selectedText, improvementCommand, script) => {\n    try {\n      const response = await apiCall(\"/api/script/improve\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          selectedText,\n          improvementCommand,\n          script\n        })\n      });\n      if (response.success) {\n        return {\n          success: true,\n          improvedText: response.data.improvedText\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Script improvement error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Script improvement failed. Please try again.\"\n      };\n    }\n  };\n  const analyzeScriptQuality = async script => {\n    try {\n      const response = await apiCall(\"/api/script/quality\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          script\n        })\n      });\n      if (response.success) {\n        return {\n          success: true,\n          quality: response.data.quality\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Script quality analysis error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Script quality analysis failed. Please try again.\"\n      };\n    }\n  };\n  const extendScript = async (script, topic, contentType = \"Лайфстайл\") => {\n    try {\n      const response = await apiCall(\"/api/script/extend\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          script,\n          topic,\n          contentType\n        })\n      });\n      if (response.success) {\n        return {\n          success: true,\n          extension: response.data.extension\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Script extension error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Script extension failed. Please try again.\"\n      };\n    }\n  };\n  const generateAudio = async (text, voiceId = \"JBFqnCBsd6RMkjVDRZzb\") => {\n    try {\n      const response = await apiCall(\"/api/audio/generate\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          text,\n          voiceId\n        })\n      });\n      if (response.success) {\n        return {\n          success: true,\n          audio: response.data\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Audio generation error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Audio generation failed. Please try again.\"\n      };\n    }\n  };\n  const getAvailableVoices = async () => {\n    try {\n      const response = await apiCall(\"/api/audio/voices\");\n      if (response.success) {\n        return {\n          success: true,\n          voices: response.data.voices\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Get voices error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Failed to fetch available voices.\"\n      };\n    }\n  };\n  const createProject = async projectData => {\n    try {\n      const response = await apiCall(\"/api/projects\", {\n        method: \"POST\",\n        body: JSON.stringify(projectData)\n      });\n      if (response.success) {\n        return {\n          success: true,\n          project: response.data.project\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Create project error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Failed to create project.\"\n      };\n    }\n  };\n  const getProjects = async () => {\n    try {\n      const response = await apiCall(\"/api/projects\");\n      if (response.success) {\n        return {\n          success: true,\n          projects: response.data.projects\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Get projects error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Failed to fetch projects.\"\n      };\n    }\n  };\n  const updateProject = async (projectId, updateData) => {\n    try {\n      const response = await apiCall(`/api/projects/${projectId}`, {\n        method: \"PUT\",\n        body: JSON.stringify(updateData)\n      });\n      if (response.success) {\n        return {\n          success: true,\n          project: response.data.project\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Update project error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Failed to update project.\"\n      };\n    }\n  };\n  const deleteProject = async projectId => {\n    try {\n      const response = await apiCall(`/api/projects/${projectId}`, {\n        method: \"DELETE\"\n      });\n      if (response.success) {\n        return {\n          success: true,\n          message: response.message\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Delete project error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Failed to delete project.\"\n      };\n    }\n  };\n  const refreshUser = async () => {\n    try {\n      const response = await apiCall(\"/api/auth/me\");\n      if (response.success) {\n        setUser(response.data.user);\n        return {\n          success: true,\n          user: response.data.user\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error(\"Refresh user error:\", error);\n      return {\n        success: false,\n        error: error.message || \"Failed to refresh user data.\"\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    register,\n    login,\n    logout,\n    generateScript,\n    generateKeyPoints,\n    improveScript,\n    analyzeScriptQuality,\n    extendScript,\n    generateAudio,\n    getAvailableVoices,\n    createProject,\n    getProjects,\n    updateProject,\n    deleteProject,\n    refreshUser,\n    apiCall,\n    API_BASE_URL\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 467,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","API_BASE_URL","process","env","REACT_APP_API_URL","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","apiCall","endpoint","options","url","token","localStorage","getItem","config","headers","Authorization","response","fetch","data","json","ok","error","console","checkAuth","success","setItem","JSON","stringify","removeItem","checkPaymentSuccess","urlParams","URLSearchParams","window","location","search","sessionId","get","log","history","replaceState","document","title","pathname","register","name","email","password","method","body","userData","message","login","logout","generateScript","topic","duration","keyPoints","contentType","script","generateKeyPoints","points","improveScript","selectedText","improvementCommand","improvedText","analyzeScriptQuality","quality","extendScript","extension","generateAudio","text","voiceId","audio","getAvailableVoices","voices","createProject","projectData","project","getProjects","projects","updateProject","projectId","updateData","deleteProject","refreshUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Scriptify/ai-content-studio/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const apiCall = async (endpoint, options = {}) => {\r\n    const url = `${API_BASE_URL}${endpoint}`;\r\n    const token = localStorage.getItem(\"authToken\");\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...(token && { Authorization: `Bearer ${token}` }),\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || \"Something went wrong\");\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error(\"API call error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem(\"authToken\");\r\n\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await apiCall(\"/api/auth/me\");\r\n\r\n        if (response.success) {\r\n          setUser(response.data.user);\r\n          setIsAuthenticated(true);\r\n          localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\r\n        } else {\r\n          localStorage.removeItem(\"authToken\");\r\n          localStorage.removeItem(\"userData\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Auth check failed:\", error);\r\n        localStorage.removeItem(\"authToken\");\r\n        localStorage.removeItem(\"userData\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    checkPaymentSuccess();\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const checkPaymentSuccess = async () => {\r\n    try {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const sessionId = urlParams.get(\"session_id\");\r\n      const success = urlParams.get(\"success\");\r\n\r\n      if (sessionId && success === \"true\") {\r\n        const token = localStorage.getItem(\"authToken\");\r\n\r\n        if (!token) {\r\n          console.log(\"❌ No auth token found\");\r\n          return;\r\n        }\r\n\r\n        try {\r\n          const response = await apiCall(`/api/payments/session/${sessionId}`);\r\n\r\n          if (response.success && response.data.user) {\r\n            setUser(response.data.user);\r\n            localStorage.setItem(\r\n              \"userData\",\r\n              JSON.stringify(response.data.user)\r\n            );\r\n          }\r\n        } catch (error) {\r\n          console.error(\"❌ Payment verification failed:\", error);\r\n        }\r\n        window.history.replaceState(\r\n          {},\r\n          document.title,\r\n          window.location.pathname\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Payment check error:\", error);\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const response = await apiCall(\"/api/auth/register\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n\r\n      if (response.success) {\r\n        const { user: userData, token } = response.data;\r\n\r\n        localStorage.setItem(\"authToken\", token);\r\n        localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n\r\n        return { success: true, user: userData };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Registration error:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.message || \"Registration failed. Please try again.\",\r\n      };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const response = await apiCall(\"/api/auth/login\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (response.success) {\r\n        const { user: userData, token } = response.data;\r\n\r\n        localStorage.setItem(\"authToken\", token);\r\n        localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n\r\n        return { success: true, user: userData };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.message || \"Login failed. Please try again.\",\r\n      };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await apiCall(\"/api/auth/logout\", { method: \"POST\" });\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n    } finally {\r\n      localStorage.removeItem(\"authToken\");\r\n      localStorage.removeItem(\"userData\");\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n  const generateScript = async (\r\n    topic,\r\n    duration = \"medium\",\r\n    keyPoints = [],\r\n    contentType = \"Лайфстайл\"\r\n  ) => {\r\n    try {\r\n      const response = await apiCall(\"/api/script/generate\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ topic, duration, keyPoints, contentType }),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, script: response.data.script };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Script generation error:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.message || \"Script generation failed. Please try again.\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const generateKeyPoints = async (topic, contentType = \"Лайфстайл\") => {\r\n    try {\r\n      const response = await apiCall(\"/api/script/key-points\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ topic, contentType }),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, points: response.data.points };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Key points generation error:\", error);\r\n      return {\r\n        success: false,\r\n        error:\r\n          error.message || \"Key points generation failed. Please try again.\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const improveScript = async (selectedText, improvementCommand, script) => {\r\n    try {\r\n      const response = await apiCall(\"/api/script/improve\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ selectedText, improvementCommand, script }),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, improvedText: response.data.improvedText };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Script improvement error:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.message || \"Script improvement failed. Please try again.\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const analyzeScriptQuality = async (script) => {\r\n    try {\r\n      const response = await apiCall(\"/api/script/quality\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ script }),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, quality: response.data.quality };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Script quality analysis error:\", error);\r\n      return {\r\n        success: false,\r\n        error:\r\n          error.message || \"Script quality analysis failed. Please try again.\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const extendScript = async (script, topic, contentType = \"Лайфстайл\") => {\r\n    try {\r\n      const response = await apiCall(\"/api/script/extend\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ script, topic, contentType }),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, extension: response.data.extension };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Script extension error:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.message || \"Script extension failed. Please try again.\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const generateAudio = async (text, voiceId = \"JBFqnCBsd6RMkjVDRZzb\") => {\r\n    try {\r\n      const response = await apiCall(\"/api/audio/generate\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ text, voiceId }),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, audio: response.data };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Audio generation error:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.message || \"Audio generation failed. Please try again.\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const getAvailableVoices = async () => {\r\n    try {\r\n      const response = await apiCall(\"/api/audio/voices\");\r\n\r\n      if (response.success) {\r\n        return { success: true, voices: response.data.voices };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Get voices error:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.message || \"Failed to fetch available voices.\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const createProject = async (projectData) => {\r\n    try {\r\n      const response = await apiCall(\"/api/projects\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(projectData),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, project: response.data.project };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Create project error:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.message || \"Failed to create project.\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const getProjects = async () => {\r\n    try {\r\n      const response = await apiCall(\"/api/projects\");\r\n\r\n      if (response.success) {\r\n        return { success: true, projects: response.data.projects };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Get projects error:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.message || \"Failed to fetch projects.\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const updateProject = async (projectId, updateData) => {\r\n    try {\r\n      const response = await apiCall(`/api/projects/${projectId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updateData),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, project: response.data.project };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Update project error:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.message || \"Failed to update project.\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const deleteProject = async (projectId) => {\r\n    try {\r\n      const response = await apiCall(`/api/projects/${projectId}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, message: response.message };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Delete project error:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.message || \"Failed to delete project.\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const refreshUser = async () => {\r\n    try {\r\n      const response = await apiCall(\"/api/auth/me\");\r\n\r\n      if (response.success) {\r\n        setUser(response.data.user);\r\n        return { success: true, user: response.data.user };\r\n      }\r\n\r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error(\"Refresh user error:\", error);\r\n      return {\r\n        success: false,\r\n        error: error.message || \"Failed to refresh user data.\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    isAuthenticated,\r\n    register,\r\n    login,\r\n    logout,\r\n    generateScript,\r\n    generateKeyPoints,\r\n    improveScript,\r\n    analyzeScriptQuality,\r\n    extendScript,\r\n    generateAudio,\r\n    getAvailableVoices,\r\n    createProject,\r\n    getProjects,\r\n    updateProject,\r\n    deleteProject,\r\n    refreshUser,\r\n    apiCall,\r\n    API_BASE_URL,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
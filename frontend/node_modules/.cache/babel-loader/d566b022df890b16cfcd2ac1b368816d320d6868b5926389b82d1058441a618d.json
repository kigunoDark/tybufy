{"ast":null,"code":"var _jsxFileName = \"C:\\\\Scriptify\\\\ai-content-studio\\\\frontend\\\\src\\\\components\\\\FFmpegVideoExporter\\\\index.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { X, Download, Check, AlertCircle, Play, Film, Zap, Settings, Volume2 } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FFmpegVideoExporter = ({\n  isOpen,\n  onClose,\n  timelineItems = [],\n  videoDuration = 60\n}) => {\n  _s();\n  const [ffmpeg, setFfmpeg] = useState(null);\n  const [isExporting, setIsExporting] = useState(false);\n  const [exportProgress, setExportProgress] = useState(0);\n  const [exportStage, setExportStage] = useState(\"idle\");\n  const [error, setError] = useState(null);\n  const [exportedBlob, setExportedBlob] = useState(null);\n  const [exportSettings, setExportSettings] = useState({\n    resolution: \"1280x720\",\n    fps: 24,\n    quality: \"fast\",\n    duration: Math.min(videoDuration, 30),\n    includeAudio: true // Простой переключатель\n  });\n  const canvasRef = useRef(null);\n  const mediaCache = useRef(new Map());\n\n  // Быстрая инициализация (БЕЗ ИЗМЕНЕНИЙ)\n  useEffect(() => {\n    const initFFmpeg = async () => {\n      if (!isOpen || ffmpeg) return;\n      try {\n        setExportStage(\"loading\");\n        console.log(\"🚀 Быстрая инициализация FFmpeg...\");\n        const {\n          FFmpeg\n        } = await import(\"@ffmpeg/ffmpeg\");\n        const {\n          fetchFile\n        } = await import(\"@ffmpeg/util\");\n        const ffmpegInstance = new FFmpeg();\n        await ffmpegInstance.load({\n          coreURL: \"https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd/ffmpeg-core.js\",\n          wasmURL: \"https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd/ffmpeg-core.wasm\"\n        });\n        ffmpegInstance.on(\"progress\", ({\n          progress\n        }) => {\n          if (isExporting) {\n            setExportProgress(Math.min(90, Math.round(progress * 85) + 70));\n          }\n        });\n        window.fetchFile = fetchFile;\n        setFfmpeg(ffmpegInstance);\n        setExportStage(\"ready\");\n        console.log(\"✅ FFmpeg готов к быстрому экспорту\");\n      } catch (error) {\n        console.error(\"❌ Ошибка FFmpeg:\", error);\n        setError(error.message);\n        setExportStage(\"error\");\n      }\n    };\n    initFFmpeg();\n  }, [isOpen]);\n\n  // Быстрое кэширование (БЕЗ ИЗМЕНЕНИЙ)\n  const loadMediaWithCache = async item => {\n    const cacheKey = `${item.id}_${item.url}`;\n    if (mediaCache.current.has(cacheKey)) {\n      return mediaCache.current.get(cacheKey);\n    }\n    return new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => reject(new Error(\"Timeout\")), 3000);\n      const isVideo = item.type === \"videos\" || item.trackType === \"main\";\n      if (isVideo) {\n        const video = document.createElement(\"video\");\n        video.crossOrigin = \"anonymous\";\n        video.muted = true;\n        video.preload = \"metadata\";\n        video.onloadedmetadata = () => {\n          clearTimeout(timeout);\n          mediaCache.current.set(cacheKey, video);\n          resolve(video);\n        };\n        video.onerror = () => {\n          clearTimeout(timeout);\n          reject(new Error(\"Video load failed\"));\n        };\n        video.src = item.url;\n      } else {\n        const img = new Image();\n        img.crossOrigin = \"anonymous\";\n        img.onload = () => {\n          clearTimeout(timeout);\n          mediaCache.current.set(cacheKey, img);\n          resolve(img);\n        };\n        img.onerror = () => {\n          clearTimeout(timeout);\n          reject(new Error(\"Image load failed\"));\n        };\n        img.src = item.url;\n      }\n    });\n  };\n\n  // ИСПРАВЛЕННЫЙ рендеринг с правильными overlay\n  const renderFrameFast = async (ctx, currentTime, width, height) => {\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRect(0, 0, width, height);\n    const activeItems = timelineItems.filter(item => {\n      const start = item.startTime || 0;\n      const end = start + (item.duration || 0);\n      return currentTime >= start && currentTime <= end && item.trackType !== \"audio\";\n    });\n\n    // Правильная сортировка: сначала main видео, потом overlay поверх\n    const sortedItems = activeItems.sort((a, b) => {\n      const order = {\n        main: 1,\n        overlay: 2\n      };\n      return (order[a.trackType] || 1) - (order[b.trackType] || 1);\n    });\n    console.log(`🎬 Рендерим ${sortedItems.length} активных элементов на времени ${currentTime.toFixed(1)}s`);\n    for (const item of sortedItems) {\n      try {\n        const element = await loadMediaWithCache(item);\n        if (!element) continue;\n        ctx.save();\n\n        // Обработка видео элементов\n        if (element.tagName === \"VIDEO\") {\n          const relativeTime = currentTime - (item.startTime || 0);\n          const targetTime = Math.max(0, relativeTime);\n          if (Math.abs(element.currentTime - targetTime) > 0.2) {\n            element.currentTime = targetTime;\n          }\n        }\n\n        // Определяем позиции и размеры\n        let x, y, w, h;\n        if (item.trackType === \"main\") {\n          // Основное видео - на весь экран\n          x = 0;\n          y = 0;\n          w = width;\n          h = height;\n          console.log(`📺 Основное видео: ${item.name} (${w}x${h})`);\n        } else if (item.trackType === \"overlay\") {\n          // Overlay элементы - используем сохраненные координаты из timeline\n          const baseX = item.x || 200; // Базовая позиция из VideoEditor\n          const baseY = item.y || 50;\n          const baseWidth = item.width || 128;\n          const baseHeight = item.height || 96;\n          const scale = item.scale || 1;\n          const opacity = item.opacity || 1;\n\n          // Масштабируем координаты под размер экспорта\n          // В VideoEditor превью может быть другого размера\n          const scaleX = width / 1920; // Предполагаем что в превью размер 1920x1080\n          const scaleY = height / 1080;\n          x = baseX * scaleX;\n          y = baseY * scaleY;\n          w = baseWidth * scale * scaleX;\n          h = baseHeight * scale * scaleY;\n          ctx.globalAlpha = opacity;\n          console.log(`🖼️ Overlay: ${item.name} pos(${x.toFixed(0)}, ${y.toFixed(0)}) size(${w.toFixed(0)}x${h.toFixed(0)}) opacity(${opacity})`);\n        }\n\n        // Рисуем элемент\n        if (w > 0 && h > 0) {\n          ctx.drawImage(element, x, y, w, h);\n        }\n        ctx.restore();\n      } catch (error) {\n        console.warn(`⚠️ Пропускаем ${item.name}:`, error);\n      }\n    }\n  };\n\n  // УЛУЧШЕННАЯ подготовка аудио (все треки)\n  const prepareOneAudioFile = async () => {\n    if (!exportSettings.includeAudio) {\n      return null;\n    }\n    try {\n      // Ищем ВСЕ аудио треки\n      const audioItems = timelineItems.filter(item => item.trackType === \"audio\" || item.type === \"videos\" && item.trackType === \"main\");\n      if (audioItems.length === 0) {\n        console.log(\"🔇 Аудио треков не найдено\");\n        return null;\n      }\n      console.log(`🎵 Найдено ${audioItems.length} аудио треков:`, audioItems.map(item => item.name));\n\n      // Берем первый доступный аудио трек\n      for (const audioItem of audioItems) {\n        try {\n          console.log(`📥 Пробуем загрузить аудио: ${audioItem.name} (тип: ${audioItem.type}, трек: ${audioItem.trackType})`);\n          const response = await fetch(audioItem.url);\n          if (!response.ok) {\n            console.warn(`⚠️ HTTP ошибка ${response.status} для ${audioItem.name}`);\n            continue;\n          }\n          const blob = await response.blob();\n          if (blob.size === 0) {\n            console.warn(`⚠️ Пустой файл: ${audioItem.name}`);\n            continue;\n          }\n          console.log(`✅ Аудио загружено: ${audioItem.name} (${(blob.size / 1024).toFixed(1)}KB)`);\n          return {\n            blob,\n            name: audioItem.name,\n            type: audioItem.type\n          };\n        } catch (error) {\n          console.warn(`⚠️ Ошибка загрузки ${audioItem.name}:`, error);\n          continue;\n        }\n      }\n      console.log(\"❌ Не удалось загрузить ни одного аудио файла\");\n      return null;\n    } catch (error) {\n      console.warn(`⚠️ Общая ошибка подготовки аудио:`, error);\n      return null;\n    }\n  };\n\n  // Быстрое создание кадров (БЕЗ ИЗМЕНЕНИЙ)\n  const createFramesBatch = async duration => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\", {\n      alpha: false\n    });\n    const [width, height] = exportSettings.resolution.split(\"x\").map(Number);\n    canvas.width = width;\n    canvas.height = height;\n    const maxFrames = Math.min(Math.ceil(duration * exportSettings.fps), 300);\n    const frames = [];\n    const batchSize = 10;\n    for (let i = 0; i < maxFrames; i += batchSize) {\n      const batch = [];\n      for (let j = 0; j < batchSize && i + j < maxFrames; j++) {\n        const frameIndex = i + j;\n        const currentTime = frameIndex / exportSettings.fps;\n        await renderFrameFast(ctx, currentTime, width, height);\n        const blob = await new Promise(resolve => {\n          canvas.toBlob(resolve, \"image/jpeg\", 0.7);\n        });\n        if (blob) batch.push(blob);\n      }\n      frames.push(...batch);\n      const progress = Math.round(i / maxFrames * 50);\n      setExportProgress(progress);\n      await new Promise(resolve => setTimeout(resolve, 10));\n    }\n    return frames;\n  };\n\n  // БЫСТРОЕ кодирование (возврат к ultrafast + минимальное аудио)\n  const encodeVideoFast = async (frames, audioFile, duration) => {\n    if (!window.fetchFile || frames.length === 0) {\n      throw new Error(\"Нет кадров для кодирования\");\n    }\n    try {\n      setExportProgress(50);\n      console.log(`🎬 Быстрое кодирование ${frames.length} кадров...`);\n\n      // Записываем кадры\n      for (let i = 0; i < frames.length; i++) {\n        const frameData = await window.fetchFile(frames[i]);\n        const filename = `f${i.toString().padStart(4, \"0\")}.jpg`;\n        await ffmpeg.writeFile(filename, frameData);\n        if (i % 20 === 0) {\n          setExportProgress(50 + Math.round(i / frames.length * 20));\n        }\n      }\n      setExportProgress(70);\n\n      // Простейшая команда FFmpeg (возврат к оригиналу)\n      const args = [\"-framerate\", exportSettings.fps.toString(), \"-i\", \"f%04d.jpg\", \"-t\", Math.min(duration, frames.length / exportSettings.fps).toString()];\n\n      // ТОЛЬКО если есть аудио - добавляем его просто\n      if (audioFile) {\n        const audioData = await window.fetchFile(audioFile.blob);\n        await ffmpeg.writeFile(\"audio.mp3\", audioData);\n        args.push(\"-i\", \"audio.mp3\");\n        args.push(\"-c:a\", \"aac\");\n        args.push(\"-b:a\", \"128k\");\n        args.push(\"-shortest\");\n      }\n\n      // БЫСТРЫЕ настройки (как было)\n      args.push(\"-c:v\", \"libx264\", \"-preset\", \"ultrafast\",\n      // ВЕРНУЛИ ultrafast\n      \"-crf\", \"28\", \"-pix_fmt\", \"yuv420p\", \"-vf\", \"scale=trunc(iw/2)*2:trunc(ih/2)*2\", \"-movflags\", \"+faststart\", \"output.mp4\");\n      console.log(\"🔧 Быстрая команда FFmpeg:\", args.join(\" \"));\n      await ffmpeg.exec(args);\n      setExportProgress(90);\n      const data = await ffmpeg.readFile(\"output.mp4\");\n      const videoBlob = new Blob([data.buffer], {\n        type: \"video/mp4\"\n      });\n\n      // Быстрая очистка\n      for (let i = 0; i < frames.length; i++) {\n        try {\n          await ffmpeg.deleteFile(`f${i.toString().padStart(4, \"0\")}.jpg`);\n        } catch (e) {}\n      }\n      if (audioFile) {\n        try {\n          await ffmpeg.deleteFile(\"audio.mp3\");\n        } catch (e) {}\n      }\n      try {\n        await ffmpeg.deleteFile(\"output.mp4\");\n      } catch (e) {}\n      return videoBlob;\n    } catch (error) {\n      throw new Error(`Ошибка кодирования: ${error.message}`);\n    }\n  };\n\n  // УЛУЧШЕННАЯ основная функция с диагностикой\n  const startFastExport = async () => {\n    if (!ffmpeg || isExporting || timelineItems.length === 0) return;\n    setIsExporting(true);\n    setExportProgress(0);\n    setExportStage(\"processing\");\n    setError(null);\n    setExportedBlob(null);\n    try {\n      console.log(\"🚀 Начинаем быстрый экспорт...\");\n      console.log(`📊 Timeline содержит ${timelineItems.length} элементов:`);\n\n      // Диагностика элементов timeline\n      timelineItems.forEach((item, index) => {\n        console.log(`  ${index + 1}. ${item.name} (тип: ${item.type}, трек: ${item.trackType}, время: ${item.startTime}s-${(item.startTime + item.duration).toFixed(1)}s)`);\n      });\n      const actualDuration = Math.min(exportSettings.duration, 30);\n      console.log(`⏱️ Экспортируем ${actualDuration}s из ${videoDuration}s`);\n      setExportStage(\"rendering\");\n      const frames = await createFramesBatch(actualDuration);\n      if (frames.length === 0) {\n        throw new Error(\"Не удалось создать кадры\");\n      }\n      console.log(`🎞️ Создано ${frames.length} кадров`);\n\n      // Подготовка аудио с диагностикой\n      const audioFile = await prepareOneAudioFile();\n      if (audioFile) {\n        console.log(`🎵 Аудио подготовлено: ${audioFile.name}`);\n      } else {\n        console.log(`🔇 Экспорт без аудио`);\n      }\n      setExportStage(\"encoding\");\n      const videoBlob = await encodeVideoFast(frames, audioFile, actualDuration);\n      setExportProgress(100);\n      setExportStage(\"completed\");\n      setExportedBlob(videoBlob);\n      console.log(`✅ Быстрый экспорт завершен! Размер: ${(videoBlob.size / 1024 / 1024).toFixed(2)}MB`);\n      console.log(`📦 Содержимое: видео + ${audioFile ? 'аудио' : 'без аудио'} + overlay элементы`);\n    } catch (error) {\n      console.error(\"❌ Ошибка быстрого экспорта:\", error);\n      setError(error.message);\n      setExportStage(\"error\");\n    } finally {\n      setIsExporting(false);\n    }\n  };\n  const downloadVideo = () => {\n    if (!exportedBlob) return;\n    const url = URL.createObjectURL(exportedBlob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `fast_export_${Date.now()}.mp4`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  const getStageText = () => {\n    switch (exportStage) {\n      case \"loading\":\n        return \"Загрузка FFmpeg...\";\n      case \"processing\":\n        return \"Подготовка...\";\n      case \"rendering\":\n        return \"Рендеринг кадров...\";\n      case \"encoding\":\n        return \"Быстрое кодирование...\";\n      case \"completed\":\n        return \"✅ Готово!\";\n      case \"error\":\n        return \"❌ Ошибка\";\n      default:\n        return \"Готов к быстрому экспорту\";\n    }\n  };\n  const audioTracksCount = timelineItems.filter(item => item.trackType === \"audio\" || item.type === \"videos\" && item.trackType === \"main\").length;\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-2xl shadow-xl max-w-lg w-full p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Zap, {\n          size: 24,\n          className: \"mr-3 text-yellow-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), \"\\u26A1 \\u0411\\u044B\\u0441\\u0442\\u0440\\u044B\\u0439 \\u044D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442 + \\u0430\\u0443\\u0434\\u0438\\u043E\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-yellow-50 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-yellow-800 mb-2 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Settings, {\n              size: 16,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this), \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u0441\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u0438\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-xs font-medium mb-1\",\n                children: \"\\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: exportSettings.resolution,\n                onChange: e => setExportSettings(prev => ({\n                  ...prev,\n                  resolution: e.target.value\n                })),\n                className: \"w-full p-2 text-sm border rounded\",\n                disabled: isExporting,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"640x480\",\n                  children: \"480p (\\u0431\\u044B\\u0441\\u0442\\u0440\\u043E)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1280x720\",\n                  children: \"720p (\\u0441\\u0440\\u0435\\u0434\\u043D\\u0435)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-xs font-medium mb-1\",\n                children: \"\\u0414\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: exportSettings.duration,\n                onChange: e => setExportSettings(prev => ({\n                  ...prev,\n                  duration: parseInt(e.target.value)\n                })),\n                className: \"w-full p-2 text-sm border rounded\",\n                disabled: isExporting,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"10\",\n                  children: \"10 \\u0441\\u0435\\u043A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"20\",\n                  children: \"20 \\u0441\\u0435\\u043A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"30\",\n                  children: \"30 \\u0441\\u0435\\u043A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: exportSettings.includeAudio,\n                onChange: e => setExportSettings(prev => ({\n                  ...prev,\n                  includeAudio: e.target.checked\n                })),\n                disabled: isExporting,\n                className: \"rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm\",\n                children: [\"\\u0412\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u0430\\u0443\\u0434\\u0438\\u043E (\\u043F\\u0435\\u0440\\u0432\\u044B\\u0439 \\u0442\\u0440\\u0435\\u043A: \", audioTracksCount > 0 ? \"есть\" : \"нет\", \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 rounded-lg ${exportStage === \"error\" ? \"bg-red-50\" : exportStage === \"completed\" ? \"bg-green-50\" : \"bg-blue-50\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: getStageText()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this), isExporting && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: [exportProgress, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), isExporting && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full bg-gray-200 rounded-full h-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-600 h-2 rounded-full transition-all\",\n              style: {\n                width: `${exportProgress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-50 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-800 font-medium\",\n            children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-600 text-sm\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this), exportedBlob && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-50 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green-800 font-medium mb-2\",\n            children: [\"\\u2705 \\u0412\\u0438\\u0434\\u0435\\u043E \\u0433\\u043E\\u0442\\u043E\\u0432\\u043E! \\u0420\\u0430\\u0437\\u043C\\u0435\\u0440: \", (exportedBlob.size / 1024 / 1024).toFixed(2), \"MB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: downloadVideo,\n            className: \"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              size: 16,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this), \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-600 bg-gray-50 p-3 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432 timeline: \", timelineItems.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u0414\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C: \", exportSettings.duration, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u0412\\u0438\\u0434\\u0435\\u043E \\u0442\\u0440\\u0435\\u043A\\u043E\\u0432: \", timelineItems.filter(item => item.trackType === \"main\").length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Overlay \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432: \", timelineItems.filter(item => item.trackType === \"overlay\").length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u0410\\u0443\\u0434\\u0438\\u043E \\u0442\\u0440\\u0435\\u043A\\u043E\\u0432: \", timelineItems.filter(item => item.trackType === \"audio\").length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u0410\\u0443\\u0434\\u0438\\u043E: \", exportSettings.includeAudio ? \"включено\" : \"выключено\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-center\",\n            children: \"\\u041A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E: \\u0411\\u044B\\u0441\\u0442\\u0440\\u043E\\u0435 (ultrafast preset) + overlay \\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"px-4 py-2 text-gray-600 hover:text-gray-800\",\n          disabled: isExporting,\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startFastExport,\n          disabled: !ffmpeg || isExporting || timelineItems.length === 0,\n          className: \"bg-yellow-600 text-white px-6 py-2 rounded hover:bg-yellow-700 flex items-center disabled:bg-gray-400\",\n          children: [/*#__PURE__*/_jsxDEV(Zap, {\n            size: 16,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this), isExporting ? `${exportProgress}%` : \"Быстрый экспорт\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 478,\n    columnNumber: 5\n  }, this);\n};\n_s(FFmpegVideoExporter, \"xscHu/5W9rw3/i4NpFmYP9WIGUk=\");\n_c = FFmpegVideoExporter;\nexport const useFFmpegExporter = () => {\n  _s2();\n  const [isExportModalOpen, setIsExportModalOpen] = useState(false);\n  const openExportModal = () => setIsExportModalOpen(true);\n  const closeExportModal = () => setIsExportModalOpen(false);\n  return {\n    isExportModalOpen,\n    openExportModal,\n    closeExportModal\n  };\n};\n_s2(useFFmpegExporter, \"Wfaj4kprhDIijrMYdBElG6JtIdM=\");\nexport default FFmpegVideoExporter;\nvar _c;\n$RefreshReg$(_c, \"FFmpegVideoExporter\");","map":{"version":3,"names":["React","useState","useRef","useEffect","X","Download","Check","AlertCircle","Play","Film","Zap","Settings","Volume2","jsxDEV","_jsxDEV","FFmpegVideoExporter","isOpen","onClose","timelineItems","videoDuration","_s","ffmpeg","setFfmpeg","isExporting","setIsExporting","exportProgress","setExportProgress","exportStage","setExportStage","error","setError","exportedBlob","setExportedBlob","exportSettings","setExportSettings","resolution","fps","quality","duration","Math","min","includeAudio","canvasRef","mediaCache","Map","initFFmpeg","console","log","FFmpeg","fetchFile","ffmpegInstance","load","coreURL","wasmURL","on","progress","round","window","message","loadMediaWithCache","item","cacheKey","id","url","current","has","get","Promise","resolve","reject","timeout","setTimeout","Error","isVideo","type","trackType","video","document","createElement","crossOrigin","muted","preload","onloadedmetadata","clearTimeout","set","onerror","src","img","Image","onload","renderFrameFast","ctx","currentTime","width","height","fillStyle","fillRect","activeItems","filter","start","startTime","end","sortedItems","sort","a","b","order","main","overlay","length","toFixed","element","save","tagName","relativeTime","targetTime","max","abs","x","y","w","h","name","baseX","baseY","baseWidth","baseHeight","scale","opacity","scaleX","scaleY","globalAlpha","drawImage","restore","warn","prepareOneAudioFile","audioItems","map","audioItem","response","fetch","ok","status","blob","size","createFramesBatch","canvas","getContext","alpha","split","Number","maxFrames","ceil","frames","batchSize","i","batch","j","frameIndex","toBlob","push","encodeVideoFast","audioFile","frameData","filename","toString","padStart","writeFile","args","audioData","join","exec","data","readFile","videoBlob","Blob","buffer","deleteFile","e","startFastExport","forEach","index","actualDuration","downloadVideo","URL","createObjectURL","href","download","Date","now","body","appendChild","click","removeChild","revokeObjectURL","getStageText","audioTracksCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","prev","target","disabled","parseInt","checked","style","onClick","ref","display","_c","useFFmpegExporter","_s2","isExportModalOpen","setIsExportModalOpen","openExportModal","closeExportModal","$RefreshReg$"],"sources":["C:/Scriptify/ai-content-studio/frontend/src/components/FFmpegVideoExporter/index.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  X,\r\n  Download,\r\n  Check,\r\n  AlertCircle,\r\n  Play,\r\n  Film,\r\n  Zap,\r\n  Settings,\r\n  Volume2,\r\n} from \"lucide-react\";\r\n\r\nconst FFmpegVideoExporter = ({\r\n  isOpen,\r\n  onClose,\r\n  timelineItems = [],\r\n  videoDuration = 60,\r\n}) => {\r\n  const [ffmpeg, setFfmpeg] = useState(null);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [exportProgress, setExportProgress] = useState(0);\r\n  const [exportStage, setExportStage] = useState(\"idle\");\r\n  const [error, setError] = useState(null);\r\n  const [exportedBlob, setExportedBlob] = useState(null);\r\n\r\n  const [exportSettings, setExportSettings] = useState({\r\n    resolution: \"1280x720\",\r\n    fps: 24,\r\n    quality: \"fast\",\r\n    duration: Math.min(videoDuration, 30),\r\n    includeAudio: true, // Простой переключатель\r\n  });\r\n\r\n  const canvasRef = useRef(null);\r\n  const mediaCache = useRef(new Map());\r\n\r\n  // Быстрая инициализация (БЕЗ ИЗМЕНЕНИЙ)\r\n  useEffect(() => {\r\n    const initFFmpeg = async () => {\r\n      if (!isOpen || ffmpeg) return;\r\n\r\n      try {\r\n        setExportStage(\"loading\");\r\n        console.log(\"🚀 Быстрая инициализация FFmpeg...\");\r\n\r\n        const { FFmpeg } = await import(\"@ffmpeg/ffmpeg\");\r\n        const { fetchFile } = await import(\"@ffmpeg/util\");\r\n\r\n        const ffmpegInstance = new FFmpeg();\r\n\r\n        await ffmpegInstance.load({\r\n          coreURL: \"https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd/ffmpeg-core.js\",\r\n          wasmURL: \"https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd/ffmpeg-core.wasm\",\r\n        });\r\n\r\n        ffmpegInstance.on(\"progress\", ({ progress }) => {\r\n          if (isExporting) {\r\n            setExportProgress(Math.min(90, Math.round(progress * 85) + 70));\r\n          }\r\n        });\r\n\r\n        window.fetchFile = fetchFile;\r\n        setFfmpeg(ffmpegInstance);\r\n        setExportStage(\"ready\");\r\n        console.log(\"✅ FFmpeg готов к быстрому экспорту\");\r\n      } catch (error) {\r\n        console.error(\"❌ Ошибка FFmpeg:\", error);\r\n        setError(error.message);\r\n        setExportStage(\"error\");\r\n      }\r\n    };\r\n\r\n    initFFmpeg();\r\n  }, [isOpen]);\r\n\r\n  // Быстрое кэширование (БЕЗ ИЗМЕНЕНИЙ)\r\n  const loadMediaWithCache = async (item) => {\r\n    const cacheKey = `${item.id}_${item.url}`;\r\n\r\n    if (mediaCache.current.has(cacheKey)) {\r\n      return mediaCache.current.get(cacheKey);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const timeout = setTimeout(() => reject(new Error(\"Timeout\")), 3000);\r\n\r\n      const isVideo = item.type === \"videos\" || item.trackType === \"main\";\r\n\r\n      if (isVideo) {\r\n        const video = document.createElement(\"video\");\r\n        video.crossOrigin = \"anonymous\";\r\n        video.muted = true;\r\n        video.preload = \"metadata\";\r\n\r\n        video.onloadedmetadata = () => {\r\n          clearTimeout(timeout);\r\n          mediaCache.current.set(cacheKey, video);\r\n          resolve(video);\r\n        };\r\n\r\n        video.onerror = () => {\r\n          clearTimeout(timeout);\r\n          reject(new Error(\"Video load failed\"));\r\n        };\r\n\r\n        video.src = item.url;\r\n      } else {\r\n        const img = new Image();\r\n        img.crossOrigin = \"anonymous\";\r\n\r\n        img.onload = () => {\r\n          clearTimeout(timeout);\r\n          mediaCache.current.set(cacheKey, img);\r\n          resolve(img);\r\n        };\r\n\r\n        img.onerror = () => {\r\n          clearTimeout(timeout);\r\n          reject(new Error(\"Image load failed\"));\r\n        };\r\n\r\n        img.src = item.url;\r\n      }\r\n    });\r\n  };\r\n\r\n  // ИСПРАВЛЕННЫЙ рендеринг с правильными overlay\r\n  const renderFrameFast = async (ctx, currentTime, width, height) => {\r\n    ctx.fillStyle = \"#000000\";\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    const activeItems = timelineItems.filter((item) => {\r\n      const start = item.startTime || 0;\r\n      const end = start + (item.duration || 0);\r\n      return currentTime >= start && currentTime <= end && item.trackType !== \"audio\";\r\n    });\r\n\r\n    // Правильная сортировка: сначала main видео, потом overlay поверх\r\n    const sortedItems = activeItems.sort((a, b) => {\r\n      const order = { main: 1, overlay: 2 };\r\n      return (order[a.trackType] || 1) - (order[b.trackType] || 1);\r\n    });\r\n\r\n    console.log(`🎬 Рендерим ${sortedItems.length} активных элементов на времени ${currentTime.toFixed(1)}s`);\r\n\r\n    for (const item of sortedItems) {\r\n      try {\r\n        const element = await loadMediaWithCache(item);\r\n        if (!element) continue;\r\n\r\n        ctx.save();\r\n\r\n        // Обработка видео элементов\r\n        if (element.tagName === \"VIDEO\") {\r\n          const relativeTime = currentTime - (item.startTime || 0);\r\n          const targetTime = Math.max(0, relativeTime);\r\n\r\n          if (Math.abs(element.currentTime - targetTime) > 0.2) {\r\n            element.currentTime = targetTime;\r\n          }\r\n        }\r\n\r\n        // Определяем позиции и размеры\r\n        let x, y, w, h;\r\n\r\n        if (item.trackType === \"main\") {\r\n          // Основное видео - на весь экран\r\n          x = 0;\r\n          y = 0;\r\n          w = width;\r\n          h = height;\r\n          console.log(`📺 Основное видео: ${item.name} (${w}x${h})`);\r\n        } else if (item.trackType === \"overlay\") {\r\n          // Overlay элементы - используем сохраненные координаты из timeline\r\n          const baseX = item.x || 200; // Базовая позиция из VideoEditor\r\n          const baseY = item.y || 50;\r\n          const baseWidth = item.width || 128;\r\n          const baseHeight = item.height || 96;\r\n          const scale = item.scale || 1;\r\n          const opacity = item.opacity || 1;\r\n\r\n          // Масштабируем координаты под размер экспорта\r\n          // В VideoEditor превью может быть другого размера\r\n          const scaleX = width / 1920; // Предполагаем что в превью размер 1920x1080\r\n          const scaleY = height / 1080;\r\n\r\n          x = baseX * scaleX;\r\n          y = baseY * scaleY;\r\n          w = baseWidth * scale * scaleX;\r\n          h = baseHeight * scale * scaleY;\r\n\r\n          ctx.globalAlpha = opacity;\r\n          console.log(`🖼️ Overlay: ${item.name} pos(${x.toFixed(0)}, ${y.toFixed(0)}) size(${w.toFixed(0)}x${h.toFixed(0)}) opacity(${opacity})`);\r\n        }\r\n\r\n        // Рисуем элемент\r\n        if (w > 0 && h > 0) {\r\n          ctx.drawImage(element, x, y, w, h);\r\n        }\r\n\r\n        ctx.restore();\r\n      } catch (error) {\r\n        console.warn(`⚠️ Пропускаем ${item.name}:`, error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // УЛУЧШЕННАЯ подготовка аудио (все треки)\r\n  const prepareOneAudioFile = async () => {\r\n    if (!exportSettings.includeAudio) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      // Ищем ВСЕ аудио треки\r\n      const audioItems = timelineItems.filter(\r\n        (item) => item.trackType === \"audio\" || (item.type === \"videos\" && item.trackType === \"main\")\r\n      );\r\n\r\n      if (audioItems.length === 0) {\r\n        console.log(\"🔇 Аудио треков не найдено\");\r\n        return null;\r\n      }\r\n\r\n      console.log(`🎵 Найдено ${audioItems.length} аудио треков:`, audioItems.map(item => item.name));\r\n\r\n      // Берем первый доступный аудио трек\r\n      for (const audioItem of audioItems) {\r\n        try {\r\n          console.log(`📥 Пробуем загрузить аудио: ${audioItem.name} (тип: ${audioItem.type}, трек: ${audioItem.trackType})`);\r\n          \r\n          const response = await fetch(audioItem.url);\r\n          if (!response.ok) {\r\n            console.warn(`⚠️ HTTP ошибка ${response.status} для ${audioItem.name}`);\r\n            continue;\r\n          }\r\n\r\n          const blob = await response.blob();\r\n          if (blob.size === 0) {\r\n            console.warn(`⚠️ Пустой файл: ${audioItem.name}`);\r\n            continue;\r\n          }\r\n\r\n          console.log(`✅ Аудио загружено: ${audioItem.name} (${(blob.size / 1024).toFixed(1)}KB)`);\r\n          return { blob, name: audioItem.name, type: audioItem.type };\r\n        } catch (error) {\r\n          console.warn(`⚠️ Ошибка загрузки ${audioItem.name}:`, error);\r\n          continue;\r\n        }\r\n      }\r\n\r\n      console.log(\"❌ Не удалось загрузить ни одного аудио файла\");\r\n      return null;\r\n    } catch (error) {\r\n      console.warn(`⚠️ Общая ошибка подготовки аудио:`, error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Быстрое создание кадров (БЕЗ ИЗМЕНЕНИЙ)\r\n  const createFramesBatch = async (duration) => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\", { alpha: false });\r\n\r\n    const [width, height] = exportSettings.resolution.split(\"x\").map(Number);\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    const maxFrames = Math.min(\r\n      Math.ceil(duration * exportSettings.fps),\r\n      300\r\n    );\r\n\r\n    const frames = [];\r\n    const batchSize = 10;\r\n\r\n    for (let i = 0; i < maxFrames; i += batchSize) {\r\n      const batch = [];\r\n\r\n      for (let j = 0; j < batchSize && i + j < maxFrames; j++) {\r\n        const frameIndex = i + j;\r\n        const currentTime = frameIndex / exportSettings.fps;\r\n\r\n        await renderFrameFast(ctx, currentTime, width, height);\r\n\r\n        const blob = await new Promise((resolve) => {\r\n          canvas.toBlob(resolve, \"image/jpeg\", 0.7);\r\n        });\r\n\r\n        if (blob) batch.push(blob);\r\n      }\r\n\r\n      frames.push(...batch);\r\n\r\n      const progress = Math.round((i / maxFrames) * 50);\r\n      setExportProgress(progress);\r\n\r\n      await new Promise((resolve) => setTimeout(resolve, 10));\r\n    }\r\n\r\n    return frames;\r\n  };\r\n\r\n  // БЫСТРОЕ кодирование (возврат к ultrafast + минимальное аудио)\r\n  const encodeVideoFast = async (frames, audioFile, duration) => {\r\n    if (!window.fetchFile || frames.length === 0) {\r\n      throw new Error(\"Нет кадров для кодирования\");\r\n    }\r\n\r\n    try {\r\n      setExportProgress(50);\r\n      console.log(`🎬 Быстрое кодирование ${frames.length} кадров...`);\r\n\r\n      // Записываем кадры\r\n      for (let i = 0; i < frames.length; i++) {\r\n        const frameData = await window.fetchFile(frames[i]);\r\n        const filename = `f${i.toString().padStart(4, \"0\")}.jpg`;\r\n        await ffmpeg.writeFile(filename, frameData);\r\n\r\n        if (i % 20 === 0) {\r\n          setExportProgress(50 + Math.round((i / frames.length) * 20));\r\n        }\r\n      }\r\n\r\n      setExportProgress(70);\r\n\r\n      // Простейшая команда FFmpeg (возврат к оригиналу)\r\n      const args = [\r\n        \"-framerate\", exportSettings.fps.toString(),\r\n        \"-i\", \"f%04d.jpg\",\r\n        \"-t\", Math.min(duration, frames.length / exportSettings.fps).toString(),\r\n      ];\r\n\r\n      // ТОЛЬКО если есть аудио - добавляем его просто\r\n      if (audioFile) {\r\n        const audioData = await window.fetchFile(audioFile.blob);\r\n        await ffmpeg.writeFile(\"audio.mp3\", audioData);\r\n        \r\n        args.push(\"-i\", \"audio.mp3\");\r\n        args.push(\"-c:a\", \"aac\");\r\n        args.push(\"-b:a\", \"128k\");\r\n        args.push(\"-shortest\");\r\n      }\r\n\r\n      // БЫСТРЫЕ настройки (как было)\r\n      args.push(\r\n        \"-c:v\", \"libx264\",\r\n        \"-preset\", \"ultrafast\", // ВЕРНУЛИ ultrafast\r\n        \"-crf\", \"28\",\r\n        \"-pix_fmt\", \"yuv420p\",\r\n        \"-vf\", \"scale=trunc(iw/2)*2:trunc(ih/2)*2\",\r\n        \"-movflags\", \"+faststart\",\r\n        \"output.mp4\"\r\n      );\r\n\r\n      console.log(\"🔧 Быстрая команда FFmpeg:\", args.join(\" \"));\r\n\r\n      await ffmpeg.exec(args);\r\n\r\n      setExportProgress(90);\r\n\r\n      const data = await ffmpeg.readFile(\"output.mp4\");\r\n      const videoBlob = new Blob([data.buffer], { type: \"video/mp4\" });\r\n\r\n      // Быстрая очистка\r\n      for (let i = 0; i < frames.length; i++) {\r\n        try {\r\n          await ffmpeg.deleteFile(`f${i.toString().padStart(4, \"0\")}.jpg`);\r\n        } catch (e) {}\r\n      }\r\n      \r\n      if (audioFile) {\r\n        try {\r\n          await ffmpeg.deleteFile(\"audio.mp3\");\r\n        } catch (e) {}\r\n      }\r\n\r\n      try {\r\n        await ffmpeg.deleteFile(\"output.mp4\");\r\n      } catch (e) {}\r\n\r\n      return videoBlob;\r\n    } catch (error) {\r\n      throw new Error(`Ошибка кодирования: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // УЛУЧШЕННАЯ основная функция с диагностикой\r\n  const startFastExport = async () => {\r\n    if (!ffmpeg || isExporting || timelineItems.length === 0) return;\r\n\r\n    setIsExporting(true);\r\n    setExportProgress(0);\r\n    setExportStage(\"processing\");\r\n    setError(null);\r\n    setExportedBlob(null);\r\n\r\n    try {\r\n      console.log(\"🚀 Начинаем быстрый экспорт...\");\r\n      console.log(`📊 Timeline содержит ${timelineItems.length} элементов:`);\r\n      \r\n      // Диагностика элементов timeline\r\n      timelineItems.forEach((item, index) => {\r\n        console.log(`  ${index + 1}. ${item.name} (тип: ${item.type}, трек: ${item.trackType}, время: ${item.startTime}s-${(item.startTime + item.duration).toFixed(1)}s)`);\r\n      });\r\n\r\n      const actualDuration = Math.min(exportSettings.duration, 30);\r\n      console.log(`⏱️ Экспортируем ${actualDuration}s из ${videoDuration}s`);\r\n\r\n      setExportStage(\"rendering\");\r\n      const frames = await createFramesBatch(actualDuration);\r\n\r\n      if (frames.length === 0) {\r\n        throw new Error(\"Не удалось создать кадры\");\r\n      }\r\n\r\n      console.log(`🎞️ Создано ${frames.length} кадров`);\r\n\r\n      // Подготовка аудио с диагностикой\r\n      const audioFile = await prepareOneAudioFile();\r\n      if (audioFile) {\r\n        console.log(`🎵 Аудио подготовлено: ${audioFile.name}`);\r\n      } else {\r\n        console.log(`🔇 Экспорт без аудио`);\r\n      }\r\n\r\n      setExportStage(\"encoding\");\r\n      const videoBlob = await encodeVideoFast(frames, audioFile, actualDuration);\r\n\r\n      setExportProgress(100);\r\n      setExportStage(\"completed\");\r\n      setExportedBlob(videoBlob);\r\n\r\n      console.log(`✅ Быстрый экспорт завершен! Размер: ${(videoBlob.size / 1024 / 1024).toFixed(2)}MB`);\r\n      console.log(`📦 Содержимое: видео + ${audioFile ? 'аудио' : 'без аудио'} + overlay элементы`);\r\n    } catch (error) {\r\n      console.error(\"❌ Ошибка быстрого экспорта:\", error);\r\n      setError(error.message);\r\n      setExportStage(\"error\");\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const downloadVideo = () => {\r\n    if (!exportedBlob) return;\r\n\r\n    const url = URL.createObjectURL(exportedBlob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = `fast_export_${Date.now()}.mp4`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const getStageText = () => {\r\n    switch (exportStage) {\r\n      case \"loading\": return \"Загрузка FFmpeg...\";\r\n      case \"processing\": return \"Подготовка...\";\r\n      case \"rendering\": return \"Рендеринг кадров...\";\r\n      case \"encoding\": return \"Быстрое кодирование...\";\r\n      case \"completed\": return \"✅ Готово!\";\r\n      case \"error\": return \"❌ Ошибка\";\r\n      default: return \"Готов к быстрому экспорту\";\r\n    }\r\n  };\r\n\r\n  const audioTracksCount = timelineItems.filter(\r\n    (item) => item.trackType === \"audio\" || (item.type === \"videos\" && item.trackType === \"main\")\r\n  ).length;\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-2xl shadow-xl max-w-lg w-full p-6\">\r\n        <h2 className=\"text-xl font-bold mb-4 flex items-center\">\r\n          <Zap size={24} className=\"mr-3 text-yellow-600\" />\r\n          ⚡ Быстрый экспорт + аудио\r\n        </h2>\r\n\r\n        <div className=\"space-y-4\">\r\n          {/* Простые настройки */}\r\n          <div className=\"bg-yellow-50 p-4 rounded-lg\">\r\n            <h3 className=\"font-medium text-yellow-800 mb-2 flex items-center\">\r\n              <Settings size={16} className=\"mr-2\" />\r\n              Настройки скорости\r\n            </h3>\r\n            <div className=\"grid grid-cols-2 gap-3\">\r\n              <div>\r\n                <label className=\"block text-xs font-medium mb-1\">Разрешение</label>\r\n                <select\r\n                  value={exportSettings.resolution}\r\n                  onChange={(e) => setExportSettings(prev => ({ ...prev, resolution: e.target.value }))}\r\n                  className=\"w-full p-2 text-sm border rounded\"\r\n                  disabled={isExporting}\r\n                >\r\n                  <option value=\"640x480\">480p (быстро)</option>\r\n                  <option value=\"1280x720\">720p (средне)</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-xs font-medium mb-1\">Длительность</label>\r\n                <select\r\n                  value={exportSettings.duration}\r\n                  onChange={(e) => setExportSettings(prev => ({ ...prev, duration: parseInt(e.target.value) }))}\r\n                  className=\"w-full p-2 text-sm border rounded\"\r\n                  disabled={isExporting}\r\n                >\r\n                  <option value=\"10\">10 сек</option>\r\n                  <option value=\"20\">20 сек</option>\r\n                  <option value=\"30\">30 сек</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Простой переключатель аудио */}\r\n            <div className=\"mt-3\">\r\n              <label className=\"flex items-center space-x-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={exportSettings.includeAudio}\r\n                  onChange={(e) => setExportSettings(prev => ({ ...prev, includeAudio: e.target.checked }))}\r\n                  disabled={isExporting}\r\n                  className=\"rounded\"\r\n                />\r\n                <span className=\"text-sm\">\r\n                  Включить аудио (первый трек: {audioTracksCount > 0 ? \"есть\" : \"нет\"})\r\n                </span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Статус */}\r\n          <div className={`p-4 rounded-lg ${\r\n            exportStage === \"error\" ? \"bg-red-50\" :\r\n            exportStage === \"completed\" ? \"bg-green-50\" : \"bg-blue-50\"\r\n          }`}>\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <span className=\"font-medium\">{getStageText()}</span>\r\n              {isExporting && <span className=\"text-sm\">{exportProgress}%</span>}\r\n            </div>\r\n            {isExporting && (\r\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                <div\r\n                  className=\"bg-blue-600 h-2 rounded-full transition-all\"\r\n                  style={{ width: `${exportProgress}%` }}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Ошибка */}\r\n          {error && (\r\n            <div className=\"bg-red-50 p-4 rounded-lg\">\r\n              <div className=\"text-red-800 font-medium\">Ошибка</div>\r\n              <div className=\"text-red-600 text-sm\">{error}</div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Результат */}\r\n          {exportedBlob && (\r\n            <div className=\"bg-green-50 p-4 rounded-lg\">\r\n              <div className=\"text-green-800 font-medium mb-2\">\r\n                ✅ Видео готово! Размер: {(exportedBlob.size / 1024 / 1024).toFixed(2)}MB\r\n              </div>\r\n              <button\r\n                onClick={downloadVideo}\r\n                className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 flex items-center\"\r\n              >\r\n                <Download size={16} className=\"mr-2\" />\r\n                Скачать\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Подробная статистика */}\r\n          <div className=\"text-xs text-gray-600 bg-gray-50 p-3 rounded\">\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              <div>Элементов timeline: {timelineItems.length}</div>\r\n              <div>Длительность: {exportSettings.duration}s</div>\r\n              <div>Видео треков: {timelineItems.filter(item => item.trackType === \"main\").length}</div>\r\n              <div>Overlay элементов: {timelineItems.filter(item => item.trackType === \"overlay\").length}</div>\r\n              <div>Аудио треков: {timelineItems.filter(item => item.trackType === \"audio\").length}</div>\r\n              <div>Аудио: {exportSettings.includeAudio ? \"включено\" : \"выключено\"}</div>\r\n            </div>\r\n            <div className=\"mt-2 text-center\">\r\n              Качество: Быстрое (ultrafast preset) + overlay позиционирование\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-between mt-6\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\r\n            disabled={isExporting}\r\n          >\r\n            Закрыть\r\n          </button>\r\n\r\n          <button\r\n            onClick={startFastExport}\r\n            disabled={!ffmpeg || isExporting || timelineItems.length === 0}\r\n            className=\"bg-yellow-600 text-white px-6 py-2 rounded hover:bg-yellow-700 flex items-center disabled:bg-gray-400\"\r\n          >\r\n            <Zap size={16} className=\"mr-2\" />\r\n            {isExporting ? `${exportProgress}%` : \"Быстрый экспорт\"}\r\n          </button>\r\n        </div>\r\n\r\n        <canvas ref={canvasRef} style={{ display: \"none\" }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const useFFmpegExporter = () => {\r\n  const [isExportModalOpen, setIsExportModalOpen] = useState(false);\r\n\r\n  const openExportModal = () => setIsExportModalOpen(true);\r\n  const closeExportModal = () => setIsExportModalOpen(false);\r\n\r\n  return {\r\n    isExportModalOpen,\r\n    openExportModal,\r\n    closeExportModal,\r\n  };\r\n};\r\n\r\nexport default FFmpegVideoExporter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
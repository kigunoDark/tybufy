{"ast":null,"code":"class JWTService {\n  decodeToken(token) {\n    try {\n      if (!token || typeof token !== \"string\") return null;\n      const parts = token.split(\".\");\n      if (parts.length !== 3) return null;\n      const payload = JSON.parse(atob(parts[1]));\n      return payload;\n    } catch (error) {\n      console.error(\"Error decoding token:\", error);\n      return null;\n    }\n  }\n  isTokenExpired(token) {\n    if (!token) return true;\n    const decoded = this.decodeToken(token);\n    if (!decoded || !decoded.exp) return true;\n    const bufferTime = 30 * 1000;\n    return decoded.exp * 1000 < Date.now() + bufferTime;\n  }\n  getTimeUntilExpiry(token) {\n    if (!token) return 0;\n    const decoded = this.decodeToken(token);\n    if (!decoded || !decoded.exp) return 0;\n    return Math.max(0, decoded.exp * 1000 - Date.now());\n  }\n\n  /**\r\n   * Настройка автоматического обновления токена\r\n   * @param {Function} refreshCallback - Функция для обновления токена\r\n   * @param {string} token - JWT токен (опционально, если не передан - берется из localStorage)\r\n   */\n  setupTokenRefresh(refreshCallback, token = null) {\n    const authToken = token || localStorage.getItem(\"authToken\");\n    if (!authToken || !refreshCallback) return;\n    const timeUntilExpiry = this.getTimeUntilExpiry(authToken);\n    const refreshTime = timeUntilExpiry - 5 * 60 * 1000;\n    if (refreshTime > 0) {\n      setTimeout(() => {\n        refreshCallback();\n      }, refreshTime);\n    } else if (timeUntilExpiry > 0) {\n      refreshCallback();\n    }\n  }\n  clearAuth() {\n    try {\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"userData\");\n      localStorage.removeItem(\"refreshToken\");\n    } catch (error) {\n      console.error(\"Error clearing auth data:\", error);\n    }\n  }\n  getTokenInfo(token = null) {\n    const authToken = token || localStorage.getItem(\"authToken\");\n    if (!authToken) return null;\n    const decoded = this.decodeToken(authToken);\n    if (!decoded) return null;\n    return {\n      userId: decoded.userId,\n      email: decoded.email,\n      name: decoded.name,\n      subscription: decoded.subscription,\n      issuedAt: decoded.iat ? new Date(decoded.iat * 1000) : null,\n      expiresAt: decoded.exp ? new Date(decoded.exp * 1000) : null,\n      timeUntilExpiry: this.getTimeUntilExpiry(authToken),\n      isExpired: this.isTokenExpired(authToken)\n    };\n  }\n  isTokenValid(token = null) {\n    const authToken = token || localStorage.getItem(\"authToken\");\n    if (!authToken) return false;\n    const decoded = this.decodeToken(authToken);\n    if (!decoded) return false;\n    return !this.isTokenExpired(authToken);\n  }\n  getFormattedTimeUntilExpiry(token = null) {\n    const timeMs = this.getTimeUntilExpiry(token);\n    if (timeMs <= 0) return \"Expired\";\n    const minutes = Math.floor(timeMs / (1000 * 60));\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    if (days > 0) return `${days}d ${hours % 24}h`;\n    if (hours > 0) return `${hours}h ${minutes % 60}m`;\n    return `${minutes}m`;\n  }\n}\nexport default new JWTService();","map":{"version":3,"names":["JWTService","decodeToken","token","parts","split","length","payload","JSON","parse","atob","error","console","isTokenExpired","decoded","exp","bufferTime","Date","now","getTimeUntilExpiry","Math","max","setupTokenRefresh","refreshCallback","authToken","localStorage","getItem","timeUntilExpiry","refreshTime","setTimeout","clearAuth","removeItem","getTokenInfo","userId","email","name","subscription","issuedAt","iat","expiresAt","isExpired","isTokenValid","getFormattedTimeUntilExpiry","timeMs","minutes","floor","hours","days"],"sources":["C:/Scriptify/ai-content-studio/frontend/src/components/utils/jwt.js"],"sourcesContent":["class JWTService {\r\n  decodeToken(token) {\r\n    try {\r\n      if (!token || typeof token !== \"string\") return null;\r\n\r\n      const parts = token.split(\".\");\r\n      if (parts.length !== 3) return null;\r\n\r\n      const payload = JSON.parse(atob(parts[1]));\r\n      return payload;\r\n    } catch (error) {\r\n      console.error(\"Error decoding token:\", error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    if (!token) return true;\r\n\r\n    const decoded = this.decodeToken(token);\r\n    if (!decoded || !decoded.exp) return true;\r\n\r\n    const bufferTime = 30 * 1000;\r\n    return decoded.exp * 1000 < Date.now() + bufferTime;\r\n  }\r\n\r\n  getTimeUntilExpiry(token) {\r\n    if (!token) return 0;\r\n\r\n    const decoded = this.decodeToken(token);\r\n    if (!decoded || !decoded.exp) return 0;\r\n\r\n    return Math.max(0, decoded.exp * 1000 - Date.now());\r\n  }\r\n\r\n  /**\r\n   * Настройка автоматического обновления токена\r\n   * @param {Function} refreshCallback - Функция для обновления токена\r\n   * @param {string} token - JWT токен (опционально, если не передан - берется из localStorage)\r\n   */\r\n  setupTokenRefresh(refreshCallback, token = null) {\r\n    const authToken = token || localStorage.getItem(\"authToken\");\r\n    if (!authToken || !refreshCallback) return;\r\n\r\n    const timeUntilExpiry = this.getTimeUntilExpiry(authToken);\r\n\r\n    const refreshTime = timeUntilExpiry - 5 * 60 * 1000;\r\n\r\n    if (refreshTime > 0) {\r\n\r\n      setTimeout(() => {\r\n        refreshCallback();\r\n      }, refreshTime);\r\n    } else if (timeUntilExpiry > 0) {\r\n      refreshCallback();\r\n    }\r\n  }\r\n\r\n  clearAuth() {\r\n    try {\r\n      localStorage.removeItem(\"authToken\");\r\n      localStorage.removeItem(\"userData\");\r\n      localStorage.removeItem(\"refreshToken\");\r\n    } catch (error) {\r\n      console.error(\"Error clearing auth data:\", error);\r\n    }\r\n  }\r\n\r\n  getTokenInfo(token = null) {\r\n    const authToken = token || localStorage.getItem(\"authToken\");\r\n    if (!authToken) return null;\r\n\r\n    const decoded = this.decodeToken(authToken);\r\n    if (!decoded) return null;\r\n\r\n    return {\r\n      userId: decoded.userId,\r\n      email: decoded.email,\r\n      name: decoded.name,\r\n      subscription: decoded.subscription,\r\n      issuedAt: decoded.iat ? new Date(decoded.iat * 1000) : null,\r\n      expiresAt: decoded.exp ? new Date(decoded.exp * 1000) : null,\r\n      timeUntilExpiry: this.getTimeUntilExpiry(authToken),\r\n      isExpired: this.isTokenExpired(authToken),\r\n    };\r\n  }\r\n\r\n  isTokenValid(token = null) {\r\n    const authToken = token || localStorage.getItem(\"authToken\");\r\n    if (!authToken) return false;\r\n\r\n    const decoded = this.decodeToken(authToken);\r\n    if (!decoded) return false;\r\n\r\n    return !this.isTokenExpired(authToken);\r\n  }\r\n\r\n  getFormattedTimeUntilExpiry(token = null) {\r\n    const timeMs = this.getTimeUntilExpiry(token);\r\n    if (timeMs <= 0) return \"Expired\";\r\n\r\n    const minutes = Math.floor(timeMs / (1000 * 60));\r\n    const hours = Math.floor(minutes / 60);\r\n    const days = Math.floor(hours / 24);\r\n\r\n    if (days > 0) return `${days}d ${hours % 24}h`;\r\n    if (hours > 0) return `${hours}h ${minutes % 60}m`;\r\n    return `${minutes}m`;\r\n  }\r\n}\r\n\r\nexport default new JWTService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Scriptify\\\\ai-content-studio\\\\frontend\\\\src\\\\contexts\\\\AuthContex.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const API_BASE = 'http://localhost:5000/api';\n  useEffect(() => {\n    if (token) {\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const fetchUserProfile = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/auth/profile`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      } else {\n        // Токен недействителен\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n      }\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      localStorage.removeItem('token');\n      setToken(null);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await fetch(`${API_BASE}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        setToken(data.token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Network error'\n      };\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await fetch(`${API_BASE}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        setToken(data.token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Network error'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n  const updateProfile = async updates => {\n    try {\n      const response = await fetch(`${API_BASE}/auth/profile`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(updates)\n      });\n      if (response.ok) {\n        const updatedUser = await response.json();\n        setUser(updatedUser);\n        return {\n          success: true\n        };\n      } else {\n        const data = await response.json();\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Network error'\n      };\n    }\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","API_BASE","fetchUserProfile","response","fetch","headers","ok","userData","json","removeItem","error","console","login","email","password","method","body","JSON","stringify","data","setItem","success","register","name","logout","updateProfile","updates","updatedUser","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Scriptify/ai-content-studio/frontend/src/contexts/AuthContex.jsx"],"sourcesContent":["// src/contexts/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  const API_BASE = 'http://localhost:5000/api';\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetchUserProfile();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  const fetchUserProfile = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/auth/profile`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        setUser(userData);\r\n      } else {\r\n        // Токен недействителен\r\n        localStorage.removeItem('token');\r\n        setToken(null);\r\n        setUser(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error);\r\n      localStorage.removeItem('token');\r\n      setToken(null);\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        localStorage.setItem('token', data.token);\r\n        setToken(data.token);\r\n        setUser(data.user);\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, error: data.error };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Network error' };\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        localStorage.setItem('token', data.token);\r\n        setToken(data.token);\r\n        setUser(data.user);\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, error: data.error };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Network error' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const updateProfile = async (updates) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/auth/profile`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(updates),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const updatedUser = await response.json();\r\n        setUser(updatedUser);\r\n        return { success: true };\r\n      } else {\r\n        const data = await response.json();\r\n        return { success: false, error: data.error };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Network error' };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    isAuthenticated: !!user,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
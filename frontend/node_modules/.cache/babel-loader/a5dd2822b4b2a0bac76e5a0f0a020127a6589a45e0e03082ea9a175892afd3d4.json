{"ast":null,"code":"var _jsxFileName = \"C:\\\\Scriptify\\\\ai-content-studio\\\\frontend\\\\src\\\\components\\\\Timeline\\\\TimelineCanvas.jsx\";\nimport { DropPreview } from \"./DropPreview\";\nimport { TimelineItem } from \"./TimelineItem\";\nimport { TimelineRuler } from \"./TimelineRuler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TimelineCanvas = ({\n  timelineRef,\n  timelineScrollRef,\n  tracks,\n  timelineItems,\n  selectedTimelineItem,\n  draggedTimelineItem,\n  copiedItem,\n  dropPreview,\n  getTimelineWidth,\n  getPixelsPerSecond,\n  getTrackColor,\n  getTimelineItemStyle,\n  getDropPreviewStyle,\n  videoDuration,\n  timelineZoom,\n  currentTime,\n  formatTime,\n  onScroll,\n  onDragOver,\n  onDrop,\n  onDragLeave,\n  onClick,\n  onDoubleClick,\n  onTimelineItemSelect,\n  onTimelineItemDragStart,\n  onTimelineItemDragEnd,\n  onResizeStart,\n  onVolumeChange,\n  showVolumeControls = true\n}) => {\n  console.log(timelineItems);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: el => {\n      timelineRef.current = el;\n      timelineScrollRef.current = el;\n    },\n    className: \"flex-1 relative overflow-auto bg-white\",\n    onScroll: onScroll,\n    onDragOver: onDragOver,\n    onDrop: onDrop,\n    onDragLeave: onDragLeave,\n    style: {\n      overflowX: \"auto\",\n      overflowY: \"auto\",\n      scrollbarWidth: \"thin\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: `${getTimelineWidth()}px`,\n        minHeight: \"100%\",\n        position: \"relative\"\n      },\n      onClick: onClick,\n      onDoubleClick: onDoubleClick,\n      children: [/*#__PURE__*/_jsxDEV(TimelineRuler, {\n        videoDuration: videoDuration,\n        timelineZoom: timelineZoom,\n        currentTime: currentTime,\n        formatTime: formatTime,\n        getPixelsPerSecond: getPixelsPerSecond,\n        getTimelineWidth: getTimelineWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex-1\",\n        style: {\n          height: `${(tracks.overlays.length + tracks.main.length + tracks.audio.length) * 60}px`,\n          minHeight: \"100%\"\n        },\n        children: [timelineItems.map(item => /*#__PURE__*/_jsxDEV(TimelineItem, {\n          item: item,\n          isSelected: (selectedTimelineItem === null || selectedTimelineItem === void 0 ? void 0 : selectedTimelineItem.id) === item.id,\n          isDragged: (draggedTimelineItem === null || draggedTimelineItem === void 0 ? void 0 : draggedTimelineItem.id) === item.id,\n          isCopied: (copiedItem === null || copiedItem === void 0 ? void 0 : copiedItem.id) === item.id,\n          getTrackColor: getTrackColor,\n          getTimelineItemStyle: getTimelineItemStyle,\n          onSelect: onTimelineItemSelect,\n          onDragStart: onTimelineItemDragStart,\n          onDragEnd: onTimelineItemDragEnd,\n          onResizeStart: onResizeStart,\n          onVolumeChange: onVolumeChange,\n          showVolumeControls: showVolumeControls,\n          hasAudio: item.type === 'audios' || item.type === 'videos' || item.trackType === 'audio'\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(DropPreview, {\n          dropPreview: dropPreview,\n          getTrackColor: getTrackColor,\n          getDropPreviewStyle: getDropPreviewStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = TimelineCanvas;\nvar _c;\n$RefreshReg$(_c, \"TimelineCanvas\");","map":{"version":3,"names":["DropPreview","TimelineItem","TimelineRuler","jsxDEV","_jsxDEV","TimelineCanvas","timelineRef","timelineScrollRef","tracks","timelineItems","selectedTimelineItem","draggedTimelineItem","copiedItem","dropPreview","getTimelineWidth","getPixelsPerSecond","getTrackColor","getTimelineItemStyle","getDropPreviewStyle","videoDuration","timelineZoom","currentTime","formatTime","onScroll","onDragOver","onDrop","onDragLeave","onClick","onDoubleClick","onTimelineItemSelect","onTimelineItemDragStart","onTimelineItemDragEnd","onResizeStart","onVolumeChange","showVolumeControls","console","log","ref","el","current","className","style","overflowX","overflowY","scrollbarWidth","children","width","minHeight","position","fileName","_jsxFileName","lineNumber","columnNumber","height","overlays","length","main","audio","map","item","isSelected","id","isDragged","isCopied","onSelect","onDragStart","onDragEnd","hasAudio","type","trackType","_c","$RefreshReg$"],"sources":["C:/Scriptify/ai-content-studio/frontend/src/components/Timeline/TimelineCanvas.jsx"],"sourcesContent":["import { DropPreview } from \"./DropPreview\";\r\nimport { TimelineItem } from \"./TimelineItem\";\r\nimport { TimelineRuler } from \"./TimelineRuler\";\r\n\r\nexport const TimelineCanvas = ({\r\n  timelineRef,\r\n  timelineScrollRef,\r\n  tracks,\r\n  timelineItems,\r\n  selectedTimelineItem,\r\n  draggedTimelineItem,\r\n  copiedItem,\r\n  dropPreview,\r\n  getTimelineWidth,\r\n  getPixelsPerSecond,\r\n  getTrackColor,\r\n  getTimelineItemStyle,\r\n  getDropPreviewStyle,\r\n  videoDuration,\r\n  timelineZoom,\r\n  currentTime,\r\n  formatTime,\r\n  onScroll,\r\n  onDragOver,\r\n  onDrop,\r\n  onDragLeave,\r\n  onClick,\r\n  onDoubleClick,\r\n  onTimelineItemSelect,\r\n  onTimelineItemDragStart,\r\n  onTimelineItemDragEnd,\r\n  onResizeStart,\r\n  onVolumeChange,\r\n  showVolumeControls = true,\r\n}) => {\r\n  console.log( timelineItems   )\r\n  return (\r\n    <div\r\n      ref={(el) => {\r\n        timelineRef.current = el;\r\n        timelineScrollRef.current = el;\r\n      }}\r\n      className=\"flex-1 relative overflow-auto bg-white\"\r\n      onScroll={onScroll}\r\n      onDragOver={onDragOver}\r\n      onDrop={onDrop}\r\n      onDragLeave={onDragLeave}\r\n      style={{\r\n        overflowX: \"auto\",\r\n        overflowY: \"auto\",\r\n        scrollbarWidth: \"thin\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: `${getTimelineWidth()}px`,\r\n          minHeight: \"100%\",\r\n          position: \"relative\",\r\n        }}\r\n        onClick={onClick}\r\n        onDoubleClick={onDoubleClick}\r\n      >\r\n        <TimelineRuler\r\n          videoDuration={videoDuration}\r\n          timelineZoom={timelineZoom}\r\n          currentTime={currentTime}\r\n          formatTime={formatTime}\r\n          getPixelsPerSecond={getPixelsPerSecond}\r\n          getTimelineWidth={getTimelineWidth}\r\n        />\r\n\r\n        <div\r\n          className=\"relative flex-1\"\r\n          style={{\r\n            height: `${\r\n              (tracks.overlays.length +\r\n                tracks.main.length +\r\n                tracks.audio.length) *\r\n              60\r\n            }px`,\r\n            minHeight: \"100%\",\r\n          }}\r\n        >\r\n          {timelineItems.map((item) => (\r\n            <TimelineItem\r\n              key={item.id}\r\n              item={item}\r\n              isSelected={selectedTimelineItem?.id === item.id}\r\n              isDragged={draggedTimelineItem?.id === item.id}\r\n              isCopied={copiedItem?.id === item.id}\r\n              getTrackColor={getTrackColor}\r\n              getTimelineItemStyle={getTimelineItemStyle}\r\n              onSelect={onTimelineItemSelect}\r\n              onDragStart={onTimelineItemDragStart}\r\n              onDragEnd={onTimelineItemDragEnd}\r\n              onResizeStart={onResizeStart}\r\n              onVolumeChange={onVolumeChange}\r\n              showVolumeControls={showVolumeControls}\r\n              hasAudio={item.type === 'audios' || item.type === 'videos' || item.trackType === 'audio'}\r\n            />\r\n          ))}\r\n\r\n          <DropPreview\r\n            dropPreview={dropPreview}\r\n            getTrackColor={getTrackColor}\r\n            getDropPreviewStyle={getDropPreviewStyle}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
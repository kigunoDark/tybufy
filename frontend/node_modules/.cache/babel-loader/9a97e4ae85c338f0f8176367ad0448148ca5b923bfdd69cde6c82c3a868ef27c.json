{"ast":null,"code":"var _jsxFileName = \"C:\\\\Scriptify\\\\ai-content-studio\\\\frontend\\\\src\\\\components\\\\Timeline\\\\TimelineRuler.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TimelineRuler = ({\n  videoDuration,\n  timelineZoom,\n  currentTime,\n  formatTime,\n  getPixelsPerSecond\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-12 bg-gray-50 border-b border-gray-200 relative flex-shrink-0\",\n    children: [Array.from({\n      length: Math.ceil(videoDuration * timelineZoom / 5) + 1\n    }, (_, i) => {\n      const timeValue = i * 5 / timelineZoom;\n      const pixelsPerSecond = getPixelsPerSecond();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-0 h-full border-l border-gray-300\",\n        style: {\n          left: `${timeValue * pixelsPerSecond}px`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-600 ml-2 mt-2 inline-block font-medium\",\n          children: formatTime(timeValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    }), timelineZoom > 2 && Array.from({\n      length: Math.ceil(videoDuration * timelineZoom) + 1\n    }, (_, i) => {\n      const timeValue = i / timelineZoom;\n      const pixelsPerSecond = getPixelsPerSecond();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-8 w-0 h-4 border-l border-gray-200\",\n        style: {\n          left: `${timeValue * pixelsPerSecond}px`\n        }\n      }, `sub-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 w-0.5 h-full bg-red-500 z-20 shadow-sm\",\n      style: {\n        left: `${currentTime * getPixelsPerSecond()}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = TimelineRuler;\nvar _c;\n$RefreshReg$(_c, \"TimelineRuler\");","map":{"version":3,"names":["TimelineRuler","videoDuration","timelineZoom","currentTime","formatTime","getPixelsPerSecond","_jsxDEV","className","children","Array","from","length","Math","ceil","_","i","timeValue","pixelsPerSecond","style","left","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Scriptify/ai-content-studio/frontend/src/components/Timeline/TimelineRuler.jsx"],"sourcesContent":["export const TimelineRuler = ({\r\n  videoDuration,\r\n  timelineZoom,\r\n  currentTime,\r\n  formatTime,\r\n  getPixelsPerSecond,\r\n}) => {\r\n  return (\r\n    <div className=\"h-12 bg-gray-50 border-b border-gray-200 relative flex-shrink-0\">\r\n      {/* Основные отметки времени */}\r\n      {Array.from(\r\n        { length: Math.ceil((videoDuration * timelineZoom) / 5) + 1 },\r\n        (_, i) => {\r\n          const timeValue = (i * 5) / timelineZoom;\r\n          const pixelsPerSecond = getPixelsPerSecond();\r\n          return (\r\n            <div\r\n              key={i}\r\n              className=\"absolute top-0 h-full border-l border-gray-300\"\r\n              style={{ left: `${timeValue * pixelsPerSecond}px` }}\r\n            >\r\n              <span className=\"text-xs text-gray-600 ml-2 mt-2 inline-block font-medium\">\r\n                {formatTime(timeValue)}\r\n              </span>\r\n            </div>\r\n          );\r\n        }\r\n      )}\r\n\r\n      {/* Дополнительные отметки при большом зуме */}\r\n      {timelineZoom > 2 &&\r\n        Array.from(\r\n          { length: Math.ceil(videoDuration * timelineZoom) + 1 },\r\n          (_, i) => {\r\n            const timeValue = i / timelineZoom;\r\n            const pixelsPerSecond = getPixelsPerSecond();\r\n            return (\r\n              <div\r\n                key={`sub-${i}`}\r\n                className=\"absolute top-8 w-0 h-4 border-l border-gray-200\"\r\n                style={{ left: `${timeValue * pixelsPerSecond}px` }}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n\r\n      {/* Указатель текущего времени */}\r\n      <div\r\n        className=\"absolute top-0 w-0.5 h-full bg-red-500 z-20 shadow-sm\"\r\n        style={{\r\n          left: `${currentTime * getPixelsPerSecond()}px`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAO,MAAMA,aAAa,GAAGA,CAAC;EAC5BC,aAAa;EACbC,YAAY;EACZC,WAAW;EACXC,UAAU;EACVC;AACF,CAAC,KAAK;EACJ,oBACEC,OAAA;IAAKC,SAAS,EAAC,iEAAiE;IAAAC,QAAA,GAE7EC,KAAK,CAACC,IAAI,CACT;MAAEC,MAAM,EAAEC,IAAI,CAACC,IAAI,CAAEZ,aAAa,GAAGC,YAAY,GAAI,CAAC,CAAC,GAAG;IAAE,CAAC,EAC7D,CAACY,CAAC,EAAEC,CAAC,KAAK;MACR,MAAMC,SAAS,GAAID,CAAC,GAAG,CAAC,GAAIb,YAAY;MACxC,MAAMe,eAAe,GAAGZ,kBAAkB,CAAC,CAAC;MAC5C,oBACEC,OAAA;QAEEC,SAAS,EAAC,gDAAgD;QAC1DW,KAAK,EAAE;UAAEC,IAAI,EAAE,GAAGH,SAAS,GAAGC,eAAe;QAAK,CAAE;QAAAT,QAAA,eAEpDF,OAAA;UAAMC,SAAS,EAAC,0DAA0D;UAAAC,QAAA,EACvEJ,UAAU,CAACY,SAAS;QAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC,GANFR,CAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOH,CAAC;IAEV,CACF,CAAC,EAGArB,YAAY,GAAG,CAAC,IACfO,KAAK,CAACC,IAAI,CACR;MAAEC,MAAM,EAAEC,IAAI,CAACC,IAAI,CAACZ,aAAa,GAAGC,YAAY,CAAC,GAAG;IAAE,CAAC,EACvD,CAACY,CAAC,EAAEC,CAAC,KAAK;MACR,MAAMC,SAAS,GAAGD,CAAC,GAAGb,YAAY;MAClC,MAAMe,eAAe,GAAGZ,kBAAkB,CAAC,CAAC;MAC5C,oBACEC,OAAA;QAEEC,SAAS,EAAC,iDAAiD;QAC3DW,KAAK,EAAE;UAAEC,IAAI,EAAE,GAAGH,SAAS,GAAGC,eAAe;QAAK;MAAE,GAF/C,OAAOF,CAAC,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CAAC;IAEN,CACF,CAAC,eAGHjB,OAAA;MACEC,SAAS,EAAC,uDAAuD;MACjEW,KAAK,EAAE;QACLC,IAAI,EAAE,GAAGhB,WAAW,GAAGE,kBAAkB,CAAC,CAAC;MAC7C;IAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAvDWxB,aAAa;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
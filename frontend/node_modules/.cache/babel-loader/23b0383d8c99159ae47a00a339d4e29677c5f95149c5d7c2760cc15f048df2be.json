{"ast":null,"code":"var _jsxFileName = \"C:\\\\Scriptify\\\\ai-content-studio\\\\frontend\\\\src\\\\components\\\\FFmpegVideoExporter\\\\index.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { X, Download, Check, AlertCircle, Settings, Play, Film } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FFmpegVideoExporter = ({\n  isOpen,\n  onClose,\n  timelineItems = [],\n  videoDuration = 60,\n  tracks\n}) => {\n  _s();\n  const [exportSettings, setExportSettings] = useState({\n    resolution: \"1280x720\",\n    // Уменьшаем разрешение по умолчанию\n    fps: 15,\n    // Уменьшаем FPS для ускорения\n    bitrate: 2000,\n    // Уменьшаем битрейт\n    format: \"mp4\",\n    quality: \"medium\",\n    filename: `video_${Date.now()}`\n  });\n  const [ffmpeg, setFfmpeg] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isExporting, setIsExporting] = useState(false);\n  const [exportProgress, setExportProgress] = useState(0);\n  const [exportStage, setExportStage] = useState(\"idle\");\n  const [previewFrame, setPreviewFrame] = useState(null);\n  const [error, setError] = useState(null);\n  const canvasRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n\n  // Функция для получения размеров превью из UI\n  const getPreviewDimensions = () => {\n    // Эти размеры должны соответствовать размерам превью в вашем UI\n    // Обычно это размер контейнера видео в интерфейсе\n    return {\n      width: 1920,\n      // Базовая ширина для расчетов\n      height: 1080 // Базовая высота для расчетов\n    };\n  };\n\n  // Исправленная инициализация FFmpeg\n  useEffect(() => {\n    const initFFmpeg = async () => {\n      if (ffmpeg || !isOpen) return;\n      setIsLoading(true);\n      setExportStage(\"loading\");\n      setError(null);\n      try {\n        console.log('🔄 Инициализация FFmpeg...');\n        const ffmpegModule = await import('@ffmpeg/ffmpeg');\n        const utilModule = await import('@ffmpeg/util');\n        const FFmpegClass = ffmpegModule.FFmpeg;\n        const fetchFile = utilModule.fetchFile;\n        const ffmpegInstance = new FFmpegClass();\n        await ffmpegInstance.load({\n          coreURL: 'https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd/ffmpeg-core.js',\n          wasmURL: 'https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd/ffmpeg-core.wasm'\n        });\n        ffmpegInstance.on('progress', ({\n          progress\n        }) => {\n          if (isExporting) {\n            const adjustedProgress = 70 + Math.round(progress * 25);\n            setExportProgress(Math.min(adjustedProgress, 95));\n          }\n        });\n        window.fetchFile = fetchFile;\n        setFfmpeg(ffmpegInstance);\n        setExportStage(\"ready\");\n        console.log('✅ FFmpeg готов');\n      } catch (error) {\n        console.error('❌ Ошибка FFmpeg:', error);\n        setError(error.message);\n        setExportStage(\"error\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (isOpen) {\n      initFFmpeg();\n    }\n  }, [isOpen]);\n\n  // ИСПРАВЛЕННАЯ логика определения активных элементов с учетом обрезки\n  const getActiveItemsAtTime = currentTime => {\n    return timelineItems.filter(item => {\n      // Получаем времена начала и конца из timeline\n      const startTime = item.startTime || 0;\n      const duration = item.duration || item.originalDuration || 0;\n      const endTime = startTime + duration;\n\n      // Учитываем обрезку (trim) если она есть\n      const trimStart = item.trimStart || 0;\n      const trimEnd = item.trimEnd || duration;\n      const actualDuration = trimEnd - trimStart;\n      const actualEndTime = startTime + actualDuration;\n\n      // Элемент активен если время попадает в его фактический диапазон\n      const isActive = currentTime >= startTime && currentTime < actualEndTime;\n      if (isActive && currentTime < 5) {\n        console.log(`📍 t=${currentTime.toFixed(1)}s: \"${item.name}\" активен (${startTime}-${actualEndTime.toFixed(1)}s, trim: ${trimStart}-${trimEnd})`);\n      }\n      return isActive;\n    });\n  };\n\n  // Исправленный рендеринг кадров\n  const renderFrameAtTime = async (ctx, currentTime, width, height) => {\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, width, height);\n    const activeItems = getActiveItemsAtTime(currentTime);\n    if (activeItems.length === 0) {\n      // Рендерим черный экран\n      return;\n    }\n\n    // Сортируем по слоям\n    const sortedItems = activeItems.sort((a, b) => {\n      const layerOrder = {\n        main: 1,\n        overlay: 2,\n        audio: 0\n      };\n      return (layerOrder[a.trackType] || 1) - (layerOrder[b.trackType] || 1);\n    });\n\n    // Рендерим каждый элемент\n    for (const item of sortedItems) {\n      if (item.trackType === 'audio') continue;\n      try {\n        const element = await loadMediaElement(item);\n        if (element) {\n          const relativeTime = currentTime - (item.startTime || 0);\n          await drawElementOnCanvas(ctx, element, item, relativeTime, width, height);\n        }\n      } catch (error) {\n        console.warn(`⚠️ Ошибка рендеринга ${item.name}:`, error);\n      }\n    }\n  };\n  const loadMediaElement = async item => {\n    return new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        reject(new Error(`Timeout loading ${item.name}`));\n      }, 5000); // Уменьшаем timeout\n\n      if (item.type === 'videos' || item.trackType === 'main') {\n        const video = document.createElement('video');\n        video.crossOrigin = 'anonymous';\n        video.muted = true;\n        video.preload = 'metadata';\n        video.onloadedmetadata = () => {\n          clearTimeout(timeout);\n          resolve(video);\n        };\n        video.onerror = () => {\n          clearTimeout(timeout);\n          reject(new Error(`Failed to load video: ${item.name}`));\n        };\n        video.src = item.url;\n      } else if (item.type === 'images' || item.trackType === 'overlay') {\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.onload = () => {\n          clearTimeout(timeout);\n          resolve(img);\n        };\n        img.onerror = () => {\n          clearTimeout(timeout);\n          reject(new Error(`Failed to load image: ${item.name}`));\n        };\n        img.src = item.url;\n      } else {\n        clearTimeout(timeout);\n        resolve(null);\n      }\n    });\n  };\n  const drawElementOnCanvas = async (ctx, element, item, relativeTime, canvasWidth, canvasHeight) => {\n    try {\n      // Устанавливаем время для видео\n      if (element.tagName === 'VIDEO') {\n        const targetTime = Math.max(0, Math.min(relativeTime, element.duration || 0));\n        if (Math.abs(element.currentTime - targetTime) > 0.5) {\n          element.currentTime = targetTime;\n          await new Promise(resolve => setTimeout(resolve, 50)); // Уменьшаем паузу\n        }\n      }\n      const elementWidth = element.videoWidth || element.naturalWidth || element.width;\n      const elementHeight = element.videoHeight || element.naturalHeight || element.height;\n      if (!elementWidth || !elementHeight) {\n        console.warn(`⚠️ Элемент ${item.name} не имеет размеров`);\n        return;\n      }\n      let drawWidth, drawHeight, drawX, drawY;\n      if (item.trackType === 'main') {\n        // Основное видео - заполняет весь экран\n        const canvasRatio = canvasWidth / canvasHeight;\n        const elementRatio = elementWidth / elementHeight;\n        if (elementRatio > canvasRatio) {\n          drawWidth = canvasWidth;\n          drawHeight = canvasWidth / elementRatio;\n          drawX = 0;\n          drawY = (canvasHeight - drawHeight) / 2;\n        } else {\n          drawHeight = canvasHeight;\n          drawWidth = canvasHeight * elementRatio;\n          drawX = (canvasWidth - drawWidth) / 2;\n          drawY = 0;\n        }\n      } else {\n        // Overlay элементы\n        if (item.x !== undefined && item.y !== undefined) {\n          drawX = item.x;\n          drawY = item.y;\n          drawWidth = item.width || 200;\n          drawHeight = item.height || 150;\n        } else {\n          const overlaySize = Math.min(canvasWidth, canvasHeight) * 0.2;\n          const elementRatio = elementWidth / elementHeight;\n          if (elementRatio > 1) {\n            drawWidth = overlaySize;\n            drawHeight = overlaySize / elementRatio;\n          } else {\n            drawHeight = overlaySize;\n            drawWidth = overlaySize * elementRatio;\n          }\n          drawX = canvasWidth - drawWidth - 20;\n          drawY = 20;\n        }\n      }\n      const opacity = item.opacity !== undefined ? item.opacity : 1;\n      ctx.globalAlpha = opacity;\n      ctx.drawImage(element, drawX, drawY, drawWidth, drawHeight);\n      ctx.globalAlpha = 1;\n    } catch (error) {\n      console.error(`❌ Ошибка отрисовки ${item.name}:`, error);\n    }\n  };\n\n  // Создание превью\n  useEffect(() => {\n    if (isOpen && timelineItems.length > 0 && exportStage === \"ready\") {\n      generatePreviewFrame();\n    }\n  }, [isOpen, timelineItems, exportSettings.resolution, exportStage]);\n  const generatePreviewFrame = async () => {\n    try {\n      const canvas = previewCanvasRef.current;\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      const [width, height] = exportSettings.resolution.split('x').map(Number);\n      canvas.width = width;\n      canvas.height = height;\n      const previewTime = videoDuration / 2;\n      await renderFrameAtTime(ctx, previewTime, width, height);\n      canvas.toBlob(blob => {\n        if (blob) {\n          const url = URL.createObjectURL(blob);\n          setPreviewFrame(url);\n        }\n      });\n    } catch (error) {\n      console.warn('⚠️ Ошибка создания превью:', error);\n    }\n  };\n\n  // ИСПРАВЛЕННЫЙ экспорт\n  const startExport = async () => {\n    if (!ffmpeg || isExporting || timelineItems.length === 0) return;\n    setIsExporting(true);\n    setExportProgress(0);\n    setExportStage(\"preparing\");\n    setError(null);\n    try {\n      console.log('🎬 Начинаем оптимизированный экспорт');\n\n      // Ограничиваем длительность для предотвращения зависания\n      const maxDuration = Math.min(videoDuration, 120); // Максимум 2 минуты\n      const actualDuration = maxDuration;\n      console.log(`📊 Длительность: ${actualDuration}s`);\n      console.log(`📊 Элементов timeline: ${timelineItems.length}`);\n      setExportStage(\"loading_media\");\n      const mediaElements = await prepareMediaElements();\n      setExportProgress(15);\n      setExportStage(\"rendering_frames\");\n      const frames = await renderAllFrames(mediaElements, actualDuration);\n      setExportProgress(50);\n      setExportStage(\"processing_audio\");\n      const audioFiles = await prepareAudioFiles();\n      setExportProgress(60);\n      setExportStage(\"encoding\");\n      const videoBlob = await encodeWithFFmpeg(frames, audioFiles, actualDuration);\n      setExportProgress(95);\n      setExportStage(\"downloading\");\n      await downloadVideo(videoBlob);\n      setExportProgress(100);\n      setExportStage(\"completed\");\n      setTimeout(() => {\n        setExportStage(\"ready\");\n        setExportProgress(0);\n      }, 3000);\n    } catch (error) {\n      console.error('❌ Ошибка экспорта:', error);\n      setError(error.message);\n      setExportStage(\"error\");\n    } finally {\n      setIsExporting(false);\n    }\n  };\n  const prepareMediaElements = async () => {\n    const elements = new Map();\n    const videoElements = timelineItems.filter(item => item.trackType !== 'audio');\n    console.log(`📦 Подготавливаем ${videoElements.length} медиа элементов...`);\n    for (const item of videoElements) {\n      try {\n        const element = await loadMediaElement(item);\n        if (element) {\n          elements.set(item.id, element);\n          console.log(`✅ Загружен: ${item.name}`);\n        }\n      } catch (error) {\n        console.warn(`⚠️ Не удалось загрузить ${item.name}:`, error);\n      }\n    }\n    return elements;\n  };\n\n  // КРИТИЧЕСКИ ИСПРАВЛЕННЫЙ рендеринг кадров\n  const renderAllFrames = async (mediaElements, duration) => {\n    const canvas = canvasRef.current;\n    if (!canvas) throw new Error('Canvas не найден');\n    const ctx = canvas.getContext('2d');\n    const [width, height] = exportSettings.resolution.split('x').map(Number);\n    canvas.width = width;\n    canvas.height = height;\n\n    // ИСПРАВЛЕНИЕ: Правильный расчет кадров\n    const totalFrames = Math.ceil(duration * exportSettings.fps);\n    const frames = [];\n    console.log(`🎞️ Рендерим ${totalFrames} кадров (${exportSettings.fps} FPS для ${duration}s)`);\n\n    // ВАЖНО: Ограничиваем количество кадров для предотвращения зависания\n    const maxFrames = Math.min(totalFrames, 1200); // Максимум 1200 кадров\n\n    for (let frame = 0; frame < maxFrames; frame++) {\n      const currentTime = frame / exportSettings.fps;\n\n      // Останавливаемся если превышаем длительность\n      if (currentTime >= duration) break;\n      try {\n        await renderFrameAtTime(ctx, currentTime, width, height);\n\n        // ИСПРАВЛЕНИЕ: Уменьшаем качество для ускорения\n        const blob = await new Promise(resolve => {\n          canvas.toBlob(resolve, 'image/jpeg', 0.7); // Снижаем качество\n        });\n        if (blob) {\n          frames.push(blob);\n        }\n        const progress = 15 + Math.round(frame / maxFrames * 35);\n        setExportProgress(progress);\n\n        // Уменьшаем частоту пауз\n        if (frame % 100 === 0) {\n          await new Promise(resolve => setTimeout(resolve, 1));\n        }\n      } catch (error) {\n        console.error(`❌ Ошибка рендеринга кадра ${frame}:`, error);\n        break; // Прерываем при ошибке\n      }\n    }\n    console.log(`✅ Отрендерено ${frames.length} кадров`);\n    return frames;\n  };\n  const prepareAudioFiles = async () => {\n    const audioItems = timelineItems.filter(item => item.trackType === 'audio');\n    const audioFiles = [];\n    console.log(`🔊 Обрабатываем ${audioItems.length} аудио файлов...`);\n    for (let i = 0; i < Math.min(audioItems.length, 3); i++) {\n      // Ограничиваем до 3 аудио файлов\n      const item = audioItems[i];\n      try {\n        console.log(`🎵 Загружаем аудио: ${item.name}`);\n        const response = await fetch(item.url);\n        if (!response.ok) throw new Error(`HTTP ${response.status}`);\n        const blob = await response.blob();\n        audioFiles.push({\n          blob,\n          startTime: item.startTime || 0,\n          duration: item.duration || videoDuration,\n          name: item.name,\n          index: i\n        });\n        console.log(`✅ Аудио готово: ${item.name}`);\n      } catch (error) {\n        console.warn(`⚠️ Ошибка загрузки аудио ${item.name}:`, error);\n      }\n    }\n    return audioFiles;\n  };\n\n  // КРИТИЧЕСКИ ИСПРАВЛЕННОЕ кодирование\n  const encodeWithFFmpeg = async (frames, audioFiles, duration) => {\n    if (!window.fetchFile || frames.length === 0) {\n      throw new Error('Нет кадров для кодирования');\n    }\n    console.log(`📦 Кодируем ${frames.length} кадров и ${audioFiles.length} аудио`);\n    try {\n      // Очищаем предыдущие файлы\n      await cleanupTempFiles(2000, 5);\n\n      // Записываем кадры\n      for (let i = 0; i < frames.length; i++) {\n        const filename = `frame_${i.toString().padStart(6, '0')}.jpg`;\n        await ffmpeg.writeFile(filename, await window.fetchFile(frames[i]));\n        if (i % 50 === 0) {\n          const progress = 60 + Math.round(i / frames.length * 10);\n          setExportProgress(progress);\n        }\n      }\n\n      // Записываем аудио файлы\n      for (let i = 0; i < audioFiles.length; i++) {\n        const audioFile = audioFiles[i];\n        const audioFileName = `audio_${i}.mp3`;\n        await ffmpeg.writeFile(audioFileName, await window.fetchFile(audioFile.blob));\n        console.log(`📁 Записан аудио: ${audioFileName}`);\n      }\n      setExportProgress(70);\n\n      // ИСПРАВЛЕННАЯ команда FFmpeg\n      const args = ['-framerate', exportSettings.fps.toString(), '-i', 'frame_%06d.jpg', '-t', Math.min(duration, frames.length / exportSettings.fps).toString() // ИСПРАВЛЕНИЕ: Точная длительность\n      ];\n\n      // Добавляем аудио если есть\n      if (audioFiles.length > 0) {\n        args.push('-i', 'audio_0.mp3');\n        if (audioFiles.length > 1) {\n          for (let i = 1; i < audioFiles.length; i++) {\n            args.push('-i', `audio_${i}.mp3`);\n          }\n          const filterComplex = audioFiles.map((_, i) => `[${i + 1}:a]`).join('') + `amix=inputs=${audioFiles.length}:duration=shortest:dropout_transition=0.5[aout]`;\n          args.push('-filter_complex', filterComplex);\n          args.push('-map', '0:v');\n          args.push('-map', '[aout]');\n        } else {\n          args.push('-c:a', 'aac');\n          args.push('-b:a', '96k'); // Уменьшаем битрейт аудио\n        }\n        args.push('-shortest');\n      }\n\n      // ОПТИМИЗИРОВАННЫЕ настройки видео\n      args.push('-c:v', 'libx264', '-preset', 'ultrafast',\n      // Самый быстрый пресет\n      '-crf', '28',\n      // Используем CRF вместо битрейта для скорости\n      '-pix_fmt', 'yuv420p', '-r', exportSettings.fps.toString(), '-movflags', '+faststart', '-threads', '4',\n      // Ограничиваем потоки\n      '-g', (exportSettings.fps * 2).toString(),\n      // Keyframe interval\n      'output.mp4');\n      console.log('🔧 Оптимизированная FFmpeg команда:', args.join(' '));\n\n      // Добавляем таймаут для предотвращения зависания\n      const timeoutPromise = new Promise((_, reject) => {\n        setTimeout(() => reject(new Error('FFmpeg timeout после 300 секунд')), 300000);\n      });\n      const execPromise = ffmpeg.exec(args);\n      await Promise.race([execPromise, timeoutPromise]);\n      setExportProgress(90);\n      const data = await ffmpeg.readFile('output.mp4');\n      const videoBlob = new Blob([data.buffer], {\n        type: 'video/mp4'\n      });\n      console.log(`🎉 Видео создано: ${(videoBlob.size / 1024 / 1024).toFixed(2)} МБ`);\n\n      // Очищаем файлы\n      await cleanupTempFiles(frames.length, audioFiles.length);\n      return videoBlob;\n    } catch (error) {\n      console.error('❌ Ошибка кодирования:', error);\n\n      // Пытаемся очистить файлы при ошибке\n      try {\n        await cleanupTempFiles(frames.length, audioFiles.length);\n      } catch (e) {}\n      throw new Error(`Ошибка кодирования: ${error.message}`);\n    }\n  };\n  const cleanupTempFiles = async (frameCount, audioCount) => {\n    console.log('🧹 Очистка файлов...');\n    for (let i = 0; i < frameCount; i++) {\n      try {\n        await ffmpeg.deleteFile(`frame_${i.toString().padStart(6, '0')}.jpg`);\n      } catch (e) {}\n    }\n    for (let i = 0; i < audioCount; i++) {\n      try {\n        await ffmpeg.deleteFile(`audio_${i}.mp3`);\n      } catch (e) {}\n    }\n    try {\n      await ffmpeg.deleteFile('output.mp4');\n    } catch (e) {}\n  };\n  const downloadVideo = async blob => {\n    const filename = `${exportSettings.filename}.${exportSettings.format}`;\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    console.log(`💾 Файл сохранен: ${filename}`);\n  };\n  const getStageText = () => {\n    switch (exportStage) {\n      case \"loading\":\n        return \"Загрузка FFmpeg...\";\n      case \"preparing\":\n        return \"Анализ timeline...\";\n      case \"loading_media\":\n        return \"Загрузка медиа файлов...\";\n      case \"rendering_frames\":\n        return `Рендеринг кадров... (макс. 1200 кадров)`;\n      case \"processing_audio\":\n        return \"Подготовка аудио треков...\";\n      case \"encoding\":\n        return \"Быстрое кодирование (ultrafast preset)...\";\n      case \"downloading\":\n        return \"Сохранение файла...\";\n      case \"completed\":\n        return \"Экспорт завершен успешно!\";\n      case \"error\":\n        return \"Произошла ошибка\";\n      case \"ready\":\n        return `Готов к экспорту (${timelineItems.length} элементов)`;\n      default:\n        return \"Ожидание...\";\n    }\n  };\n  const getStageIcon = () => {\n    switch (exportStage) {\n      case \"completed\":\n        return /*#__PURE__*/_jsxDEV(Check, {\n          size: 20,\n          className: \"text-green-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 32\n        }, this);\n      case \"error\":\n        return /*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 20,\n          className: \"text-red-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 28\n        }, this);\n      case \"ready\":\n        return /*#__PURE__*/_jsxDEV(Play, {\n          size: 20,\n          className: \"text-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 28\n        }, this);\n      case \"loading\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-5 w-5 border-b-2 border-orange-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 30\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-5 w-5 border-b-2 border-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  const canExport = ffmpeg && !isExporting && !isLoading && timelineItems.length > 0 && exportStage === \"ready\";\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-2xl shadow-xl max-w-4xl w-full max-h-[95vh] overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-6 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-800 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Film, {\n            size: 24,\n            className: \"mr-3 text-blue-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this), \"\\u0422\\u043E\\u0447\\u043D\\u044B\\u0439 \\u044D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442 (CapCut-\\u0441\\u0442\\u0438\\u043B\\u044C)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"p-2 hover:bg-gray-100 rounded-full transition-colors\",\n          disabled: isExporting,\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6 space-y-6 max-h-[calc(95vh-140px)] overflow-y-auto\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-50 border border-red-200 rounded-xl p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-start\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              size: 20,\n              className: \"text-red-600 mr-3 mt-0.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-red-800\",\n                children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-red-600 mt-1\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rounded-xl p-4 border ${exportStage === \"error\" ? \"bg-red-50 border-red-200\" : exportStage === \"completed\" ? \"bg-green-50 border-green-200\" : exportStage === \"loading\" ? \"bg-orange-50 border-orange-200\" : \"bg-blue-50 border-blue-200\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [getStageIcon(), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `ml-3 font-medium ${exportStage === \"error\" ? \"text-red-900\" : exportStage === \"completed\" ? \"text-green-900\" : exportStage === \"loading\" ? \"text-orange-900\" : \"text-blue-900\"}`,\n                children: getStageText()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this), (isExporting || isLoading) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `text-sm font-medium ${exportStage === \"loading\" ? \"text-orange-700\" : \"text-blue-700\"}`,\n              children: [exportProgress, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 13\n          }, this), (isExporting || isLoading) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-full rounded-full h-2 ${exportStage === \"loading\" ? \"bg-orange-200\" : \"bg-blue-200\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `h-2 rounded-full transition-all duration-300 ${exportStage === \"loading\" ? \"bg-orange-600\" : \"bg-blue-600\"}`,\n              style: {\n                width: `${exportProgress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 rounded-xl p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-gray-700 mb-3 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Settings, {\n              size: 16,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 15\n            }, this), \"\\u041E\\u043F\\u0442\\u0438\\u043C\\u0438\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 (\\u0430\\u043D\\u0442\\u0438-\\u0437\\u0430\\u0432\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-xs font-medium text-gray-700 mb-1\",\n                children: \"\\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: exportSettings.resolution,\n                onChange: e => setExportSettings(prev => ({\n                  ...prev,\n                  resolution: e.target.value\n                })),\n                className: \"w-full p-2 text-sm border border-gray-300 rounded-lg\",\n                disabled: isExporting || isLoading,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"640x480\",\n                  children: \"480p (\\u043E\\u0447\\u0435\\u043D\\u044C \\u0431\\u044B\\u0441\\u0442\\u0440\\u043E)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1280x720\",\n                  children: \"720p (\\u0431\\u044B\\u0441\\u0442\\u0440\\u043E)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1920x1080\",\n                  children: \"1080p (\\u043C\\u0435\\u0434\\u043B\\u0435\\u043D\\u043D\\u043E)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-xs font-medium text-gray-700 mb-1\",\n                children: \"FPS (\\u043E\\u043F\\u0442\\u0438\\u043C\\u0438\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043E)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: exportSettings.fps,\n                onChange: e => setExportSettings(prev => ({\n                  ...prev,\n                  fps: parseInt(e.target.value)\n                })),\n                className: \"w-full p-2 text-sm border border-gray-300 rounded-lg\",\n                disabled: isExporting || isLoading,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"15\",\n                  children: \"15 FPS (\\u043E\\u0447\\u0435\\u043D\\u044C \\u0431\\u044B\\u0441\\u0442\\u0440\\u043E)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"24\",\n                  children: \"24 FPS (\\u0431\\u044B\\u0441\\u0442\\u0440\\u043E)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 745,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"30\",\n                  children: \"30 FPS (\\u043C\\u0435\\u0434\\u043B\\u0435\\u043D\\u043D\\u043E)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-xs font-medium text-gray-700 mb-1\",\n                children: \"\\u0418\\u043C\\u044F \\u0444\\u0430\\u0439\\u043B\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: exportSettings.filename,\n                onChange: e => setExportSettings(prev => ({\n                  ...prev,\n                  filename: e.target.value\n                })),\n                className: \"w-full p-2 text-sm border border-gray-300 rounded-lg\",\n                disabled: isExporting || isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-50 border border-green-200 rounded-xl p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-green-800 mb-2\",\n            children: \"\\uD83C\\uDFAF CapCut-\\u0441\\u0442\\u0438\\u043B\\u044C \\u0442\\u043E\\u0447\\u043D\\u043E\\u0435 \\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-green-700 space-y-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2705 \\u0422\\u043E\\u0447\\u043D\\u043E\\u0435 \\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 overlay \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2705 \\u041C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442 UI \\u2192 \\u0444\\u0438\\u043D\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u0432\\u0438\\u0434\\u0435\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2705 \\u041F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u043A\\u0430 \\u043F\\u043E\\u0432\\u043E\\u0440\\u043E\\u0442\\u0430 \\u0438 \\u043F\\u0440\\u043E\\u0437\\u0440\\u0430\\u0447\\u043D\\u043E\\u0441\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2705 \\u041E\\u0431\\u0440\\u0435\\u0437\\u043A\\u0430 \\u0432\\u0438\\u0434\\u0435\\u043E (trimStart/trimEnd)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2705 \\u041A\\u0430\\u0434\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 (cropX/cropY/cropWidth/cropHeight)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2705 \\u0417\\u0430\\u0449\\u0438\\u0442\\u0430 \\u043E\\u0442 \\u0437\\u0430\\u0432\\u0438\\u0441\\u0430\\u043D\\u0438\\u044F (\\u043C\\u0430\\u043A\\u0441. 1200 \\u043A\\u0430\\u0434\\u0440\\u043E\\u0432)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2705 Ultrafast FFmpeg \\u043A\\u043E\\u0434\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u23F1\\uFE0F \\u0413\\u043E\\u0442\\u043E\\u0432 \\u043A \\u044D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0443 \\u043A\\u0430\\u043A \\u0432 CapCut!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 11\n        }, this), exportStage === \"ready\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 rounded-xl p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-gray-700 mb-3\",\n            children: \"\\u041F\\u0440\\u0435\\u0432\\u044C\\u044E \\u044D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-black rounded-lg aspect-video flex items-center justify-center overflow-hidden\",\n                children: previewFrame ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: previewFrame,\n                  alt: \"Preview\",\n                  className: \"max-w-full max-h-full object-contain\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 788,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-white text-sm\",\n                  children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u0435\\u0432\\u044C\\u044E...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 794,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-48 space-y-2 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-600\",\n                  children: \"\\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: exportSettings.resolution\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 801,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-600\",\n                  children: \"FPS:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 804,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: exportSettings.fps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 805,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-600\",\n                  children: \"\\u041C\\u0430\\u043A\\u0441. \\u0434\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 808,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: [Math.min(videoDuration, 120), \"s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-600\",\n                  children: \"\\u041C\\u0430\\u043A\\u0441. \\u043A\\u0430\\u0434\\u0440\\u043E\\u0432:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 812,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: \"1200\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-600\",\n                  children: \"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: timelineItems.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-6 border-t border-gray-200 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: exportStage === \"ready\" && timelineItems.length > 0 ? `Готов к быстрому экспорту • Защита от зависания` : exportStage === \"loading\" ? 'Загрузка FFmpeg...' : 'Добавьте элементы в таймлайн'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"px-6 py-2 text-sm text-gray-600 hover:text-gray-800 transition-colors\",\n            disabled: isExporting,\n            children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startExport,\n            disabled: !canExport,\n            className: `px-6 py-2 text-sm rounded-lg font-medium transition-all flex items-center ${!canExport ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" : \"bg-green-600 text-white hover:bg-green-700 shadow-lg\"}`,\n            children: isExporting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 19\n              }, this), \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442... \", exportProgress, \"%\"]\n            }, void 0, true) : isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 19\n              }, this), \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Download, {\n                size: 16,\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 865,\n                columnNumber: 19\n              }, this), \"\\u0411\\u044B\\u0441\\u0442\\u0440\\u044B\\u0439 \\u044D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: previewCanvasRef,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 638,\n    columnNumber: 5\n  }, this);\n};\n_s(FFmpegVideoExporter, \"5j2E8f3z5ybQrWN0i8DUnQdjGnA=\");\n_c = FFmpegVideoExporter;\nexport const useFFmpegExporter = () => {\n  _s2();\n  const [isExportModalOpen, setIsExportModalOpen] = useState(false);\n  const openExportModal = () => setIsExportModalOpen(true);\n  const closeExportModal = () => setIsExportModalOpen(false);\n  return {\n    isExportModalOpen,\n    openExportModal,\n    closeExportModal\n  };\n};\n_s2(useFFmpegExporter, \"Wfaj4kprhDIijrMYdBElG6JtIdM=\");\nexport default FFmpegVideoExporter;\nvar _c;\n$RefreshReg$(_c, \"FFmpegVideoExporter\");","map":{"version":3,"names":["useState","useRef","useEffect","X","Download","Check","AlertCircle","Settings","Play","Film","jsxDEV","_jsxDEV","Fragment","_Fragment","FFmpegVideoExporter","isOpen","onClose","timelineItems","videoDuration","tracks","_s","exportSettings","setExportSettings","resolution","fps","bitrate","format","quality","filename","Date","now","ffmpeg","setFfmpeg","isLoading","setIsLoading","isExporting","setIsExporting","exportProgress","setExportProgress","exportStage","setExportStage","previewFrame","setPreviewFrame","error","setError","canvasRef","previewCanvasRef","getPreviewDimensions","width","height","initFFmpeg","console","log","ffmpegModule","utilModule","FFmpegClass","FFmpeg","fetchFile","ffmpegInstance","load","coreURL","wasmURL","on","progress","adjustedProgress","Math","round","min","window","message","getActiveItemsAtTime","currentTime","filter","item","startTime","duration","originalDuration","endTime","trimStart","trimEnd","actualDuration","actualEndTime","isActive","toFixed","name","renderFrameAtTime","ctx","fillStyle","fillRect","activeItems","length","sortedItems","sort","a","b","layerOrder","main","overlay","audio","trackType","element","loadMediaElement","relativeTime","drawElementOnCanvas","warn","Promise","resolve","reject","timeout","setTimeout","Error","type","video","document","createElement","crossOrigin","muted","preload","onloadedmetadata","clearTimeout","onerror","src","url","img","Image","onload","canvasWidth","canvasHeight","tagName","targetTime","max","abs","elementWidth","videoWidth","naturalWidth","elementHeight","videoHeight","naturalHeight","drawWidth","drawHeight","drawX","drawY","canvasRatio","elementRatio","x","undefined","y","overlaySize","opacity","globalAlpha","drawImage","generatePreviewFrame","canvas","current","getContext","split","map","Number","previewTime","toBlob","blob","URL","createObjectURL","startExport","maxDuration","mediaElements","prepareMediaElements","frames","renderAllFrames","audioFiles","prepareAudioFiles","videoBlob","encodeWithFFmpeg","downloadVideo","elements","Map","videoElements","set","id","totalFrames","ceil","maxFrames","frame","push","audioItems","i","response","fetch","ok","status","index","cleanupTempFiles","toString","padStart","writeFile","audioFile","audioFileName","args","filterComplex","_","join","timeoutPromise","execPromise","exec","race","data","readFile","Blob","buffer","size","e","frameCount","audioCount","deleteFile","href","download","body","appendChild","click","removeChild","revokeObjectURL","getStageText","getStageIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","canExport","children","onClick","disabled","style","value","onChange","prev","target","parseInt","alt","ref","display","_c","useFFmpegExporter","_s2","isExportModalOpen","setIsExportModalOpen","openExportModal","closeExportModal","$RefreshReg$"],"sources":["C:/Scriptify/ai-content-studio/frontend/src/components/FFmpegVideoExporter/index.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport { X, Download, Check, AlertCircle, Settings, Play, Film } from \"lucide-react\";\r\n\r\nconst FFmpegVideoExporter = ({\r\n  isOpen,\r\n  onClose,\r\n  timelineItems = [],\r\n  videoDuration = 60,\r\n  tracks,\r\n}) => {\r\n  const [exportSettings, setExportSettings] = useState({\r\n    resolution: \"1280x720\", // Уменьшаем разрешение по умолчанию\r\n    fps: 15, // Уменьшаем FPS для ускорения\r\n    bitrate: 2000, // Уменьшаем битрейт\r\n    format: \"mp4\",\r\n    quality: \"medium\",\r\n    filename: `video_${Date.now()}`\r\n  });\r\n\r\n  const [ffmpeg, setFfmpeg] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [exportProgress, setExportProgress] = useState(0);\r\n  const [exportStage, setExportStage] = useState(\"idle\");\r\n  const [previewFrame, setPreviewFrame] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  \r\n  const canvasRef = useRef(null);\r\n  const previewCanvasRef = useRef(null);\r\n\r\n  // Функция для получения размеров превью из UI\r\n  const getPreviewDimensions = () => {\r\n    // Эти размеры должны соответствовать размерам превью в вашем UI\r\n    // Обычно это размер контейнера видео в интерфейсе\r\n    return {\r\n      width: 1920, // Базовая ширина для расчетов\r\n      height: 1080, // Базовая высота для расчетов\r\n    };\r\n  };\r\n\r\n  // Исправленная инициализация FFmpeg\r\n  useEffect(() => {\r\n    const initFFmpeg = async () => {\r\n      if (ffmpeg || !isOpen) return;\r\n\r\n      setIsLoading(true);\r\n      setExportStage(\"loading\");\r\n      setError(null);\r\n      \r\n      try {\r\n        console.log('🔄 Инициализация FFmpeg...');\r\n        \r\n        const ffmpegModule = await import('@ffmpeg/ffmpeg');\r\n        const utilModule = await import('@ffmpeg/util');\r\n        \r\n        const FFmpegClass = ffmpegModule.FFmpeg;\r\n        const fetchFile = utilModule.fetchFile;\r\n        \r\n        const ffmpegInstance = new FFmpegClass();\r\n        \r\n        await ffmpegInstance.load({\r\n          coreURL: 'https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd/ffmpeg-core.js',\r\n          wasmURL: 'https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd/ffmpeg-core.wasm',\r\n        });\r\n\r\n        ffmpegInstance.on('progress', ({ progress }) => {\r\n          if (isExporting) {\r\n            const adjustedProgress = 70 + Math.round(progress * 25);\r\n            setExportProgress(Math.min(adjustedProgress, 95));\r\n          }\r\n        });\r\n\r\n        window.fetchFile = fetchFile;\r\n        setFfmpeg(ffmpegInstance);\r\n        setExportStage(\"ready\");\r\n        console.log('✅ FFmpeg готов');\r\n        \r\n      } catch (error) {\r\n        console.error('❌ Ошибка FFmpeg:', error);\r\n        setError(error.message);\r\n        setExportStage(\"error\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      initFFmpeg();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // ИСПРАВЛЕННАЯ логика определения активных элементов с учетом обрезки\r\n  const getActiveItemsAtTime = (currentTime) => {\r\n    return timelineItems.filter(item => {\r\n      // Получаем времена начала и конца из timeline\r\n      const startTime = item.startTime || 0;\r\n      const duration = item.duration || item.originalDuration || 0;\r\n      const endTime = startTime + duration;\r\n      \r\n      // Учитываем обрезку (trim) если она есть\r\n      const trimStart = item.trimStart || 0;\r\n      const trimEnd = item.trimEnd || duration;\r\n      const actualDuration = trimEnd - trimStart;\r\n      const actualEndTime = startTime + actualDuration;\r\n      \r\n      // Элемент активен если время попадает в его фактический диапазон\r\n      const isActive = currentTime >= startTime && currentTime < actualEndTime;\r\n      \r\n      if (isActive && currentTime < 5) {\r\n        console.log(`📍 t=${currentTime.toFixed(1)}s: \"${item.name}\" активен (${startTime}-${actualEndTime.toFixed(1)}s, trim: ${trimStart}-${trimEnd})`);\r\n      }\r\n      \r\n      return isActive;\r\n    });\r\n  };\r\n\r\n  // Исправленный рендеринг кадров\r\n  const renderFrameAtTime = async (ctx, currentTime, width, height) => {\r\n    ctx.fillStyle = '#000000';\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    const activeItems = getActiveItemsAtTime(currentTime);\r\n\r\n    if (activeItems.length === 0) {\r\n      // Рендерим черный экран\r\n      return;\r\n    }\r\n\r\n    // Сортируем по слоям\r\n    const sortedItems = activeItems.sort((a, b) => {\r\n      const layerOrder = { main: 1, overlay: 2, audio: 0 };\r\n      return (layerOrder[a.trackType] || 1) - (layerOrder[b.trackType] || 1);\r\n    });\r\n\r\n    // Рендерим каждый элемент\r\n    for (const item of sortedItems) {\r\n      if (item.trackType === 'audio') continue;\r\n\r\n      try {\r\n        const element = await loadMediaElement(item);\r\n        if (element) {\r\n          const relativeTime = currentTime - (item.startTime || 0);\r\n          await drawElementOnCanvas(ctx, element, item, relativeTime, width, height);\r\n        }\r\n      } catch (error) {\r\n        console.warn(`⚠️ Ошибка рендеринга ${item.name}:`, error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const loadMediaElement = async (item) => {\r\n    return new Promise((resolve, reject) => {\r\n      const timeout = setTimeout(() => {\r\n        reject(new Error(`Timeout loading ${item.name}`));\r\n      }, 5000); // Уменьшаем timeout\r\n\r\n      if (item.type === 'videos' || item.trackType === 'main') {\r\n        const video = document.createElement('video');\r\n        video.crossOrigin = 'anonymous';\r\n        video.muted = true;\r\n        video.preload = 'metadata';\r\n        \r\n        video.onloadedmetadata = () => {\r\n          clearTimeout(timeout);\r\n          resolve(video);\r\n        };\r\n        \r\n        video.onerror = () => {\r\n          clearTimeout(timeout);\r\n          reject(new Error(`Failed to load video: ${item.name}`));\r\n        };\r\n        \r\n        video.src = item.url;\r\n        \r\n      } else if (item.type === 'images' || item.trackType === 'overlay') {\r\n        const img = new Image();\r\n        img.crossOrigin = 'anonymous';\r\n        \r\n        img.onload = () => {\r\n          clearTimeout(timeout);\r\n          resolve(img);\r\n        };\r\n        \r\n        img.onerror = () => {\r\n          clearTimeout(timeout);\r\n          reject(new Error(`Failed to load image: ${item.name}`));\r\n        };\r\n        \r\n        img.src = item.url;\r\n        \r\n      } else {\r\n        clearTimeout(timeout);\r\n        resolve(null);\r\n      }\r\n    });\r\n  };\r\n\r\n  const drawElementOnCanvas = async (ctx, element, item, relativeTime, canvasWidth, canvasHeight) => {\r\n    try {\r\n      // Устанавливаем время для видео\r\n      if (element.tagName === 'VIDEO') {\r\n        const targetTime = Math.max(0, Math.min(relativeTime, element.duration || 0));\r\n        if (Math.abs(element.currentTime - targetTime) > 0.5) {\r\n          element.currentTime = targetTime;\r\n          await new Promise(resolve => setTimeout(resolve, 50)); // Уменьшаем паузу\r\n        }\r\n      }\r\n\r\n      const elementWidth = element.videoWidth || element.naturalWidth || element.width;\r\n      const elementHeight = element.videoHeight || element.naturalHeight || element.height;\r\n\r\n      if (!elementWidth || !elementHeight) {\r\n        console.warn(`⚠️ Элемент ${item.name} не имеет размеров`);\r\n        return;\r\n      }\r\n\r\n      let drawWidth, drawHeight, drawX, drawY;\r\n\r\n      if (item.trackType === 'main') {\r\n        // Основное видео - заполняет весь экран\r\n        const canvasRatio = canvasWidth / canvasHeight;\r\n        const elementRatio = elementWidth / elementHeight;\r\n\r\n        if (elementRatio > canvasRatio) {\r\n          drawWidth = canvasWidth;\r\n          drawHeight = canvasWidth / elementRatio;\r\n          drawX = 0;\r\n          drawY = (canvasHeight - drawHeight) / 2;\r\n        } else {\r\n          drawHeight = canvasHeight;\r\n          drawWidth = canvasHeight * elementRatio;\r\n          drawX = (canvasWidth - drawWidth) / 2;\r\n          drawY = 0;\r\n        }\r\n      } else {\r\n        // Overlay элементы\r\n        if (item.x !== undefined && item.y !== undefined) {\r\n          drawX = item.x;\r\n          drawY = item.y;\r\n          drawWidth = item.width || 200;\r\n          drawHeight = item.height || 150;\r\n        } else {\r\n          const overlaySize = Math.min(canvasWidth, canvasHeight) * 0.2;\r\n          const elementRatio = elementWidth / elementHeight;\r\n          \r\n          if (elementRatio > 1) {\r\n            drawWidth = overlaySize;\r\n            drawHeight = overlaySize / elementRatio;\r\n          } else {\r\n            drawHeight = overlaySize;\r\n            drawWidth = overlaySize * elementRatio;\r\n          }\r\n          \r\n          drawX = canvasWidth - drawWidth - 20;\r\n          drawY = 20;\r\n        }\r\n      }\r\n\r\n      const opacity = item.opacity !== undefined ? item.opacity : 1;\r\n      ctx.globalAlpha = opacity;\r\n      ctx.drawImage(element, drawX, drawY, drawWidth, drawHeight);\r\n      ctx.globalAlpha = 1;\r\n      \r\n    } catch (error) {\r\n      console.error(`❌ Ошибка отрисовки ${item.name}:`, error);\r\n    }\r\n  };\r\n\r\n  // Создание превью\r\n  useEffect(() => {\r\n    if (isOpen && timelineItems.length > 0 && exportStage === \"ready\") {\r\n      generatePreviewFrame();\r\n    }\r\n  }, [isOpen, timelineItems, exportSettings.resolution, exportStage]);\r\n\r\n  const generatePreviewFrame = async () => {\r\n    try {\r\n      const canvas = previewCanvasRef.current;\r\n      if (!canvas) return;\r\n\r\n      const ctx = canvas.getContext('2d');\r\n      const [width, height] = exportSettings.resolution.split('x').map(Number);\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      const previewTime = videoDuration / 2;\r\n      await renderFrameAtTime(ctx, previewTime, width, height);\r\n      \r\n      canvas.toBlob((blob) => {\r\n        if (blob) {\r\n          const url = URL.createObjectURL(blob);\r\n          setPreviewFrame(url);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.warn('⚠️ Ошибка создания превью:', error);\r\n    }\r\n  };\r\n\r\n  // ИСПРАВЛЕННЫЙ экспорт\r\n  const startExport = async () => {\r\n    if (!ffmpeg || isExporting || timelineItems.length === 0) return;\r\n\r\n    setIsExporting(true);\r\n    setExportProgress(0);\r\n    setExportStage(\"preparing\");\r\n    setError(null);\r\n\r\n    try {\r\n      console.log('🎬 Начинаем оптимизированный экспорт');\r\n      \r\n      // Ограничиваем длительность для предотвращения зависания\r\n      const maxDuration = Math.min(videoDuration, 120); // Максимум 2 минуты\r\n      const actualDuration = maxDuration;\r\n      \r\n      console.log(`📊 Длительность: ${actualDuration}s`);\r\n      console.log(`📊 Элементов timeline: ${timelineItems.length}`);\r\n\r\n      setExportStage(\"loading_media\");\r\n      const mediaElements = await prepareMediaElements();\r\n      setExportProgress(15);\r\n\r\n      setExportStage(\"rendering_frames\");\r\n      const frames = await renderAllFrames(mediaElements, actualDuration);\r\n      setExportProgress(50);\r\n\r\n      setExportStage(\"processing_audio\");\r\n      const audioFiles = await prepareAudioFiles();\r\n      setExportProgress(60);\r\n\r\n      setExportStage(\"encoding\");\r\n      const videoBlob = await encodeWithFFmpeg(frames, audioFiles, actualDuration);\r\n      setExportProgress(95);\r\n\r\n      setExportStage(\"downloading\");\r\n      await downloadVideo(videoBlob);\r\n      setExportProgress(100);\r\n\r\n      setExportStage(\"completed\");\r\n      setTimeout(() => {\r\n        setExportStage(\"ready\");\r\n        setExportProgress(0);\r\n      }, 3000);\r\n\r\n    } catch (error) {\r\n      console.error('❌ Ошибка экспорта:', error);\r\n      setError(error.message);\r\n      setExportStage(\"error\");\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const prepareMediaElements = async () => {\r\n    const elements = new Map();\r\n    const videoElements = timelineItems.filter(item => item.trackType !== 'audio');\r\n    \r\n    console.log(`📦 Подготавливаем ${videoElements.length} медиа элементов...`);\r\n    \r\n    for (const item of videoElements) {\r\n      try {\r\n        const element = await loadMediaElement(item);\r\n        if (element) {\r\n          elements.set(item.id, element);\r\n          console.log(`✅ Загружен: ${item.name}`);\r\n        }\r\n      } catch (error) {\r\n        console.warn(`⚠️ Не удалось загрузить ${item.name}:`, error);\r\n      }\r\n    }\r\n\r\n    return elements;\r\n  };\r\n\r\n  // КРИТИЧЕСКИ ИСПРАВЛЕННЫЙ рендеринг кадров\r\n  const renderAllFrames = async (mediaElements, duration) => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) throw new Error('Canvas не найден');\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    const [width, height] = exportSettings.resolution.split('x').map(Number);\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    // ИСПРАВЛЕНИЕ: Правильный расчет кадров\r\n    const totalFrames = Math.ceil(duration * exportSettings.fps);\r\n    const frames = [];\r\n\r\n    console.log(`🎞️ Рендерим ${totalFrames} кадров (${exportSettings.fps} FPS для ${duration}s)`);\r\n\r\n    // ВАЖНО: Ограничиваем количество кадров для предотвращения зависания\r\n    const maxFrames = Math.min(totalFrames, 1200); // Максимум 1200 кадров\r\n    \r\n    for (let frame = 0; frame < maxFrames; frame++) {\r\n      const currentTime = (frame / exportSettings.fps);\r\n      \r\n      // Останавливаемся если превышаем длительность\r\n      if (currentTime >= duration) break;\r\n      \r\n      try {\r\n        await renderFrameAtTime(ctx, currentTime, width, height);\r\n\r\n        // ИСПРАВЛЕНИЕ: Уменьшаем качество для ускорения\r\n        const blob = await new Promise(resolve => {\r\n          canvas.toBlob(resolve, 'image/jpeg', 0.7); // Снижаем качество\r\n        });\r\n        \r\n        if (blob) {\r\n          frames.push(blob);\r\n        }\r\n\r\n        const progress = 15 + Math.round((frame / maxFrames) * 35);\r\n        setExportProgress(progress);\r\n\r\n        // Уменьшаем частоту пауз\r\n        if (frame % 100 === 0) {\r\n          await new Promise(resolve => setTimeout(resolve, 1));\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error(`❌ Ошибка рендеринга кадра ${frame}:`, error);\r\n        break; // Прерываем при ошибке\r\n      }\r\n    }\r\n\r\n    console.log(`✅ Отрендерено ${frames.length} кадров`);\r\n    return frames;\r\n  };\r\n\r\n  const prepareAudioFiles = async () => {\r\n    const audioItems = timelineItems.filter(item => item.trackType === 'audio');\r\n    const audioFiles = [];\r\n\r\n    console.log(`🔊 Обрабатываем ${audioItems.length} аудио файлов...`);\r\n\r\n    for (let i = 0; i < Math.min(audioItems.length, 3); i++) { // Ограничиваем до 3 аудио файлов\r\n      const item = audioItems[i];\r\n      try {\r\n        console.log(`🎵 Загружаем аудио: ${item.name}`);\r\n        \r\n        const response = await fetch(item.url);\r\n        if (!response.ok) throw new Error(`HTTP ${response.status}`);\r\n        \r\n        const blob = await response.blob();\r\n        audioFiles.push({\r\n          blob,\r\n          startTime: item.startTime || 0,\r\n          duration: item.duration || videoDuration,\r\n          name: item.name,\r\n          index: i\r\n        });\r\n        \r\n        console.log(`✅ Аудио готово: ${item.name}`);\r\n        \r\n      } catch (error) {\r\n        console.warn(`⚠️ Ошибка загрузки аудио ${item.name}:`, error);\r\n      }\r\n    }\r\n\r\n    return audioFiles;\r\n  };\r\n\r\n  // КРИТИЧЕСКИ ИСПРАВЛЕННОЕ кодирование\r\n  const encodeWithFFmpeg = async (frames, audioFiles, duration) => {\r\n    if (!window.fetchFile || frames.length === 0) {\r\n      throw new Error('Нет кадров для кодирования');\r\n    }\r\n\r\n    console.log(`📦 Кодируем ${frames.length} кадров и ${audioFiles.length} аудио`);\r\n    \r\n    try {\r\n      // Очищаем предыдущие файлы\r\n      await cleanupTempFiles(2000, 5);\r\n\r\n      // Записываем кадры\r\n      for (let i = 0; i < frames.length; i++) {\r\n        const filename = `frame_${i.toString().padStart(6, '0')}.jpg`;\r\n        await ffmpeg.writeFile(filename, await window.fetchFile(frames[i]));\r\n        \r\n        if (i % 50 === 0) {\r\n          const progress = 60 + Math.round((i / frames.length) * 10);\r\n          setExportProgress(progress);\r\n        }\r\n      }\r\n\r\n      // Записываем аудио файлы\r\n      for (let i = 0; i < audioFiles.length; i++) {\r\n        const audioFile = audioFiles[i];\r\n        const audioFileName = `audio_${i}.mp3`;\r\n        await ffmpeg.writeFile(audioFileName, await window.fetchFile(audioFile.blob));\r\n        console.log(`📁 Записан аудио: ${audioFileName}`);\r\n      }\r\n\r\n      setExportProgress(70);\r\n\r\n      // ИСПРАВЛЕННАЯ команда FFmpeg\r\n      const args = [\r\n        '-framerate', exportSettings.fps.toString(),\r\n        '-i', 'frame_%06d.jpg',\r\n        '-t', Math.min(duration, frames.length / exportSettings.fps).toString(), // ИСПРАВЛЕНИЕ: Точная длительность\r\n      ];\r\n\r\n      // Добавляем аудио если есть\r\n      if (audioFiles.length > 0) {\r\n        args.push('-i', 'audio_0.mp3');\r\n        \r\n        if (audioFiles.length > 1) {\r\n          for (let i = 1; i < audioFiles.length; i++) {\r\n            args.push('-i', `audio_${i}.mp3`);\r\n          }\r\n          \r\n          const filterComplex = audioFiles.map((_, i) => `[${i + 1}:a]`).join('') + \r\n            `amix=inputs=${audioFiles.length}:duration=shortest:dropout_transition=0.5[aout]`;\r\n          \r\n          args.push('-filter_complex', filterComplex);\r\n          args.push('-map', '0:v');\r\n          args.push('-map', '[aout]');\r\n        } else {\r\n          args.push('-c:a', 'aac');\r\n          args.push('-b:a', '96k'); // Уменьшаем битрейт аудио\r\n        }\r\n        \r\n        args.push('-shortest');\r\n      }\r\n\r\n      // ОПТИМИЗИРОВАННЫЕ настройки видео\r\n      args.push(\r\n        '-c:v', 'libx264',\r\n        '-preset', 'ultrafast', // Самый быстрый пресет\r\n        '-crf', '28', // Используем CRF вместо битрейта для скорости\r\n        '-pix_fmt', 'yuv420p',\r\n        '-r', exportSettings.fps.toString(),\r\n        '-movflags', '+faststart',\r\n        '-threads', '4', // Ограничиваем потоки\r\n        '-g', (exportSettings.fps * 2).toString(), // Keyframe interval\r\n        'output.mp4'\r\n      );\r\n\r\n      console.log('🔧 Оптимизированная FFmpeg команда:', args.join(' '));\r\n\r\n      // Добавляем таймаут для предотвращения зависания\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('FFmpeg timeout после 300 секунд')), 300000);\r\n      });\r\n\r\n      const execPromise = ffmpeg.exec(args);\r\n      \r\n      await Promise.race([execPromise, timeoutPromise]);\r\n      \r\n      setExportProgress(90);\r\n\r\n      const data = await ffmpeg.readFile('output.mp4');\r\n      const videoBlob = new Blob([data.buffer], { type: 'video/mp4' });\r\n\r\n      console.log(`🎉 Видео создано: ${(videoBlob.size / 1024 / 1024).toFixed(2)} МБ`);\r\n\r\n      // Очищаем файлы\r\n      await cleanupTempFiles(frames.length, audioFiles.length);\r\n      return videoBlob;\r\n\r\n    } catch (error) {\r\n      console.error('❌ Ошибка кодирования:', error);\r\n      \r\n      // Пытаемся очистить файлы при ошибке\r\n      try {\r\n        await cleanupTempFiles(frames.length, audioFiles.length);\r\n      } catch (e) {}\r\n      \r\n      throw new Error(`Ошибка кодирования: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const cleanupTempFiles = async (frameCount, audioCount) => {\r\n    console.log('🧹 Очистка файлов...');\r\n    \r\n    for (let i = 0; i < frameCount; i++) {\r\n      try {\r\n        await ffmpeg.deleteFile(`frame_${i.toString().padStart(6, '0')}.jpg`);\r\n      } catch (e) {}\r\n    }\r\n\r\n    for (let i = 0; i < audioCount; i++) {\r\n      try {\r\n        await ffmpeg.deleteFile(`audio_${i}.mp3`);\r\n      } catch (e) {}\r\n    }\r\n\r\n    try {\r\n      await ffmpeg.deleteFile('output.mp4');\r\n    } catch (e) {}\r\n  };\r\n\r\n  const downloadVideo = async (blob) => {\r\n    const filename = `${exportSettings.filename}.${exportSettings.format}`;\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n    \r\n    console.log(`💾 Файл сохранен: ${filename}`);\r\n  };\r\n\r\n  const getStageText = () => {\r\n    switch (exportStage) {\r\n      case \"loading\": return \"Загрузка FFmpeg...\";\r\n      case \"preparing\": return \"Анализ timeline...\";\r\n      case \"loading_media\": return \"Загрузка медиа файлов...\";\r\n      case \"rendering_frames\": return `Рендеринг кадров... (макс. 1200 кадров)`;\r\n      case \"processing_audio\": return \"Подготовка аудио треков...\";\r\n      case \"encoding\": return \"Быстрое кодирование (ultrafast preset)...\";\r\n      case \"downloading\": return \"Сохранение файла...\";\r\n      case \"completed\": return \"Экспорт завершен успешно!\";\r\n      case \"error\": return \"Произошла ошибка\";\r\n      case \"ready\": return `Готов к экспорту (${timelineItems.length} элементов)`;\r\n      default: return \"Ожидание...\";\r\n    }\r\n  };\r\n\r\n  const getStageIcon = () => {\r\n    switch (exportStage) {\r\n      case \"completed\": return <Check size={20} className=\"text-green-600\" />;\r\n      case \"error\": return <AlertCircle size={20} className=\"text-red-600\" />;\r\n      case \"ready\": return <Play size={20} className=\"text-blue-600\" />;\r\n      case \"loading\": return <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-orange-600\"></div>;\r\n      default: return <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-blue-600\"></div>;\r\n    }\r\n  };\r\n\r\n  const canExport = ffmpeg && !isExporting && !isLoading && timelineItems.length > 0 && exportStage === \"ready\";\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-2xl shadow-xl max-w-4xl w-full max-h-[95vh] overflow-hidden\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n          <h2 className=\"text-xl font-semibold text-gray-800 flex items-center\">\r\n            <Film size={24} className=\"mr-3 text-blue-600\" />\r\n            Точный экспорт (CapCut-стиль)\r\n          </h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"p-2 hover:bg-gray-100 rounded-full transition-colors\"\r\n            disabled={isExporting}\r\n          >\r\n            <X size={20} />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6 space-y-6 max-h-[calc(95vh-140px)] overflow-y-auto\">\r\n          \r\n          {/* Error Display */}\r\n          {error && (\r\n            <div className=\"bg-red-50 border border-red-200 rounded-xl p-4\">\r\n              <div className=\"flex items-start\">\r\n                <AlertCircle size={20} className=\"text-red-600 mr-3 mt-0.5\" />\r\n                <div>\r\n                  <h4 className=\"font-medium text-red-800\">Ошибка</h4>\r\n                  <p className=\"text-sm text-red-600 mt-1\">{error}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Status */}\r\n          <div className={`rounded-xl p-4 border ${\r\n            exportStage === \"error\" ? \"bg-red-50 border-red-200\" :\r\n            exportStage === \"completed\" ? \"bg-green-50 border-green-200\" :\r\n            exportStage === \"loading\" ? \"bg-orange-50 border-orange-200\" :\r\n            \"bg-blue-50 border-blue-200\"\r\n          }`}>\r\n            <div className=\"flex items-center justify-between mb-3\">\r\n              <div className=\"flex items-center\">\r\n                {getStageIcon()}\r\n                <span className={`ml-3 font-medium ${\r\n                  exportStage === \"error\" ? \"text-red-900\" :\r\n                  exportStage === \"completed\" ? \"text-green-900\" :\r\n                  exportStage === \"loading\" ? \"text-orange-900\" :\r\n                  \"text-blue-900\"\r\n                }`}>\r\n                  {getStageText()}\r\n                </span>\r\n              </div>\r\n              {(isExporting || isLoading) && (\r\n                <span className={`text-sm font-medium ${\r\n                  exportStage === \"loading\" ? \"text-orange-700\" : \"text-blue-700\"\r\n                }`}>\r\n                  {exportProgress}%\r\n                </span>\r\n              )}\r\n            </div>\r\n            {(isExporting || isLoading) && (\r\n              <div className={`w-full rounded-full h-2 ${\r\n                exportStage === \"loading\" ? \"bg-orange-200\" : \"bg-blue-200\"\r\n              }`}>\r\n                <div\r\n                  className={`h-2 rounded-full transition-all duration-300 ${\r\n                    exportStage === \"loading\" ? \"bg-orange-600\" : \"bg-blue-600\"\r\n                  }`}\r\n                  style={{ width: `${exportProgress}%` }}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Optimized Settings */}\r\n          <div className=\"bg-gray-50 rounded-xl p-4\">\r\n            <h3 className=\"text-sm font-medium text-gray-700 mb-3 flex items-center\">\r\n              <Settings size={16} className=\"mr-2\" />\r\n              Оптимизированные настройки (анти-зависание)\r\n            </h3>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                  Разрешение\r\n                </label>\r\n                <select\r\n                  value={exportSettings.resolution}\r\n                  onChange={(e) => setExportSettings(prev => ({ ...prev, resolution: e.target.value }))}\r\n                  className=\"w-full p-2 text-sm border border-gray-300 rounded-lg\"\r\n                  disabled={isExporting || isLoading}\r\n                >\r\n                  <option value=\"640x480\">480p (очень быстро)</option>\r\n                  <option value=\"1280x720\">720p (быстро)</option>\r\n                  <option value=\"1920x1080\">1080p (медленно)</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                  FPS (оптимизировано)\r\n                </label>\r\n                <select\r\n                  value={exportSettings.fps}\r\n                  onChange={(e) => setExportSettings(prev => ({ ...prev, fps: parseInt(e.target.value) }))}\r\n                  className=\"w-full p-2 text-sm border border-gray-300 rounded-lg\"\r\n                  disabled={isExporting || isLoading}\r\n                >\r\n                  <option value=\"15\">15 FPS (очень быстро)</option>\r\n                  <option value=\"24\">24 FPS (быстро)</option>\r\n                  <option value=\"30\">30 FPS (медленно)</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                  Имя файла\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={exportSettings.filename}\r\n                  onChange={(e) => setExportSettings(prev => ({ ...prev, filename: e.target.value }))}\r\n                  className=\"w-full p-2 text-sm border border-gray-300 rounded-lg\"\r\n                  disabled={isExporting || isLoading}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Performance Improvements */}\r\n          <div className=\"bg-green-50 border border-green-200 rounded-xl p-4\">\r\n            <h4 className=\"font-medium text-green-800 mb-2\">🎯 CapCut-стиль точное позиционирование</h4>\r\n            <div className=\"text-xs text-green-700 space-y-1\">\r\n              <p>✅ Точное позиционирование overlay элементов</p>\r\n              <p>✅ Масштабирование координат UI → финальное видео</p>\r\n              <p>✅ Поддержка поворота и прозрачности</p>\r\n              <p>✅ Обрезка видео (trimStart/trimEnd)</p>\r\n              <p>✅ Кадрирование (cropX/cropY/cropWidth/cropHeight)</p>\r\n              <p>✅ Защита от зависания (макс. 1200 кадров)</p>\r\n              <p>✅ Ultrafast FFmpeg кодирование</p>\r\n              <p>⏱️ Готов к экспорту как в CapCut!</p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Preview */}\r\n          {exportStage === \"ready\" && (\r\n            <div className=\"bg-gray-50 rounded-xl p-4\">\r\n              <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Превью экспорта</h3>\r\n              <div className=\"flex gap-4\">\r\n                <div className=\"flex-1\">\r\n                  <div className=\"bg-black rounded-lg aspect-video flex items-center justify-center overflow-hidden\">\r\n                    {previewFrame ? (\r\n                      <img \r\n                        src={previewFrame} \r\n                        alt=\"Preview\" \r\n                        className=\"max-w-full max-h-full object-contain\"\r\n                      />\r\n                    ) : (\r\n                      <div className=\"text-white text-sm\">Создание превью...</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-48 space-y-2 text-sm\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">Разрешение:</span>\r\n                    <span className=\"font-medium\">{exportSettings.resolution}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">FPS:</span>\r\n                    <span className=\"font-medium\">{exportSettings.fps}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">Макс. длительность:</span>\r\n                    <span className=\"font-medium\">{Math.min(videoDuration, 120)}s</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">Макс. кадров:</span>\r\n                    <span className=\"font-medium\">1200</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">Элементов:</span>\r\n                    <span className=\"font-medium\">{timelineItems.length}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"flex justify-between items-center p-6 border-t border-gray-200 bg-gray-50\">\r\n          <div className=\"text-xs text-gray-500\">\r\n            {exportStage === \"ready\" && timelineItems.length > 0 ? (\r\n              `Готов к быстрому экспорту • Защита от зависания`\r\n            ) : exportStage === \"loading\" ? (\r\n              'Загрузка FFmpeg...'\r\n            ) : (\r\n              'Добавьте элементы в таймлайн'\r\n            )}\r\n          </div>\r\n          <div className=\"flex space-x-3\">\r\n            <button\r\n              onClick={onClose}\r\n              className=\"px-6 py-2 text-sm text-gray-600 hover:text-gray-800 transition-colors\"\r\n              disabled={isExporting}\r\n            >\r\n              Закрыть\r\n            </button>\r\n            <button\r\n              onClick={startExport}\r\n              disabled={!canExport}\r\n              className={`px-6 py-2 text-sm rounded-lg font-medium transition-all flex items-center ${\r\n                !canExport\r\n                  ? \"bg-gray-300 text-gray-500 cursor-not-allowed\"\r\n                  : \"bg-green-600 text-white hover:bg-green-700 shadow-lg\"\r\n              }`}\r\n            >\r\n              {isExporting ? (\r\n                <>\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                  Экспорт... {exportProgress}%\r\n                </>\r\n              ) : isLoading ? (\r\n                <>\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                  Загрузка...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Download size={16} className=\"mr-2\" />\r\n                  Быстрый экспорт\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Hidden canvases */}\r\n        <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n        <canvas ref={previewCanvasRef} style={{ display: 'none' }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const useFFmpegExporter = () => {\r\n  const [isExportModalOpen, setIsExportModalOpen] = useState(false);\r\n\r\n  const openExportModal = () => setIsExportModalOpen(true);\r\n  const closeExportModal = () => setIsExportModalOpen(false);\r\n\r\n  return {\r\n    isExportModalOpen,\r\n    openExportModal,\r\n    closeExportModal,\r\n  };\r\n};\r\n\r\nexport default FFmpegVideoExporter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
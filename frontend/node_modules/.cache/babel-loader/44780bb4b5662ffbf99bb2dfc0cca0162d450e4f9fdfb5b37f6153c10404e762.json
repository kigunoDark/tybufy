{"ast":null,"code":"// TimelineDataAdapter.js - –ê–¥–∞–ø—Ç–µ—Ä –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è timeline –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞\n\nexport class TimelineDataAdapter {\n  static convertToExportFormat(timelineItems, tracks) {\n    console.log('üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º timeline –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞...');\n    const exportItems = timelineItems.map(item => {\n      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ç—Ä–µ–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è\n      let trackType = 'main';\n      if (tracks.audio.some(track => track.id === item.trackId)) {\n        trackType = 'audio';\n      } else if (tracks.overlays.some(track => track.id === item.trackId)) {\n        trackType = 'overlay';\n      }\n\n      // –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞\n      const exportItem = {\n        id: item.id,\n        name: item.name || item.title || `item_${item.id}`,\n        type: this.determineMediaType(item),\n        trackType: trackType,\n        url: item.url || item.src,\n        // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n        startTime: item.startTime || 0,\n        duration: item.duration || 0,\n        trimStart: item.trimStart || 0,\n        // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (–¥–ª—è overlay)\n        x: item.x || 0,\n        y: item.y || 0,\n        width: item.width || 200,\n        height: item.height || 150,\n        scale: item.scale || 1,\n        rotation: item.rotation || 0,\n        opacity: item.opacity !== undefined ? item.opacity : 1,\n        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n        trackId: item.trackId,\n        layer: item.layer || 0,\n        // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ\n        originalItem: item // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n      };\n      console.log(`üìã –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —ç–ª–µ–º–µ–Ω—Ç: ${exportItem.name} (${trackType})`);\n      return exportItem;\n    });\n\n    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å–ª–æ—è–º\n    exportItems.sort((a, b) => {\n      if (a.startTime !== b.startTime) {\n        return a.startTime - b.startTime;\n      }\n\n      // –ü–æ—Ä—è–¥–æ–∫ —Å–ª–æ–µ–≤: audio -> main -> overlay\n      const layerOrder = {\n        audio: 0,\n        main: 1,\n        overlay: 2\n      };\n      return layerOrder[a.trackType] - layerOrder[b.trackType];\n    });\n    console.log(`‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${exportItems.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞`);\n    return exportItems;\n  }\n  static determineMediaType(item) {\n    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–∞\n    if (item.type) return item.type; // –ï—Å–ª–∏ —Ç–∏–ø —É–∂–µ —É–∫–∞–∑–∞–Ω\n\n    if (item.url || item.src) {\n      const url = item.url || item.src;\n      if (url.match(/\\.(mp4|webm|mov|avi)$/i)) return 'videos';\n      if (url.match(/\\.(jpg|jpeg|png|gif|webp)$/i)) return 'images';\n      if (url.match(/\\.(mp3|wav|aac|m4a)$/i)) return 'audio';\n    }\n\n    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ MIME —Ç–∏–ø—É –µ—Å–ª–∏ –µ—Å—Ç—å\n    if (item.mimeType) {\n      if (item.mimeType.startsWith('video/')) return 'videos';\n      if (item.mimeType.startsWith('image/')) return 'images';\n      if (item.mimeType.startsWith('audio/')) return 'audio';\n    }\n\n    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º\n    return 'images';\n  }\n  static validateExportData(exportItems) {\n    const errors = [];\n    const warnings = [];\n    exportItems.forEach((item, index) => {\n      // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è\n      if (!item.id) errors.push(`–≠–ª–µ–º–µ–Ω—Ç ${index}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ID`);\n      if (!item.url) errors.push(`–≠–ª–µ–º–µ–Ω—Ç ${item.name}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç URL`);\n      if (!item.trackType) errors.push(`–≠–ª–µ–º–µ–Ω—Ç ${item.name}: –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω —Ç–∏–ø —Ç—Ä–µ–∫–∞`);\n\n      // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏\n      if (item.startTime < 0) warnings.push(`–≠–ª–µ–º–µ–Ω—Ç ${item.name}: –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞`);\n      if (item.duration <= 0) warnings.push(`–≠–ª–µ–º–µ–Ω—Ç ${item.name}: –Ω—É–ª–µ–≤–∞—è –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å`);\n\n      // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è overlay\n      if (item.trackType === 'overlay') {\n        if (item.width <= 0 || item.height <= 0) {\n          warnings.push(`Overlay ${item.name}: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã`);\n        }\n      }\n    });\n    return {\n      errors,\n      warnings,\n      isValid: errors.length === 0\n    };\n  }\n  static calculateTimelineBounds(exportItems) {\n    if (exportItems.length === 0) {\n      return {\n        startTime: 0,\n        endTime: 0,\n        duration: 0\n      };\n    }\n    const startTime = Math.min(...exportItems.map(item => item.startTime));\n    const endTime = Math.max(...exportItems.map(item => item.startTime + item.duration));\n    const duration = endTime - startTime;\n    return {\n      startTime,\n      endTime,\n      duration\n    };\n  }\n  static optimizeForExport(exportItems, settings = {}) {\n    console.log('‚ö° –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞...');\n    const optimized = exportItems.map(item => {\n      const optimizedItem = {\n        ...item\n      };\n\n      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ç–æ—á–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏ (–∏–∑–±–µ–≥–∞–µ–º –ø—Ä–æ–±–ª–µ–º —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π)\n      optimizedItem.startTime = Math.round(optimizedItem.startTime * 1000) / 1000;\n      optimizedItem.duration = Math.round(optimizedItem.duration * 1000) / 1000;\n\n      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n      if (optimizedItem.trackType === 'overlay') {\n        optimizedItem.x = Math.round(optimizedItem.x);\n        optimizedItem.y = Math.round(optimizedItem.y);\n        optimizedItem.width = Math.round(optimizedItem.width);\n        optimizedItem.height = Math.round(optimizedItem.height);\n\n        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–æ–≤–æ—Ä–æ—Ç –¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π\n        optimizedItem.rotation = Math.round(optimizedItem.rotation * 100) / 100;\n\n        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π\n        optimizedItem.opacity = Math.round(optimizedItem.opacity * 100) / 100;\n      }\n      return optimizedItem;\n    });\n    console.log(`‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ ${optimized.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);\n    return optimized;\n  }\n\n  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ —Ç–∏–ø–∞–º –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏\n  static groupByMediaType(exportItems) {\n    const groups = {\n      videos: exportItems.filter(item => item.type === 'videos'),\n      images: exportItems.filter(item => item.type === 'images'),\n      audio: exportItems.filter(item => item.type === 'audio')\n    };\n    console.log('üìä –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ç–∏–ø–∞–º –º–µ–¥–∏–∞:', {\n      videos: groups.videos.length,\n      images: groups.images.length,\n      audio: groups.audio.length\n    });\n    return groups;\n  }\n\n  // –ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ timeline –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫\n  static analyzeComplexity(exportItems) {\n    const analysis = {\n      totalItems: exportItems.length,\n      overlayItems: exportItems.filter(item => item.trackType === 'overlay').length,\n      hasTransparency: exportItems.some(item => item.opacity < 1),\n      hasRotation: exportItems.some(item => item.rotation !== 0),\n      hasScaling: exportItems.some(item => item.scale !== 1),\n      maxConcurrentItems: 0,\n      timeSpan: 0\n    };\n\n    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\n    const bounds = this.calculateTimelineBounds(exportItems);\n    analysis.timeSpan = bounds.duration;\n    for (let time = 0; time <= bounds.duration; time += 0.1) {\n      const activeItems = exportItems.filter(item => time >= item.startTime && time <= item.startTime + item.duration);\n      analysis.maxConcurrentItems = Math.max(analysis.maxConcurrentItems, activeItems.length);\n    }\n\n    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏\n    let complexityLevel = 'simple';\n    if (analysis.overlayItems > 5 || analysis.maxConcurrentItems > 3) {\n      complexityLevel = 'medium';\n    }\n    if (analysis.overlayItems > 10 || analysis.maxConcurrentItems > 5 || analysis.hasTransparency || analysis.hasRotation) {\n      complexityLevel = 'complex';\n    }\n    analysis.complexityLevel = complexityLevel;\n    console.log('üîç –ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ timeline:', analysis);\n    return analysis;\n  }\n}\nexport default TimelineDataAdapter;","map":{"version":3,"names":["TimelineDataAdapter","convertToExportFormat","timelineItems","tracks","console","log","exportItems","map","item","trackType","audio","some","track","id","trackId","overlays","exportItem","name","title","type","determineMediaType","url","src","startTime","duration","trimStart","x","y","width","height","scale","rotation","opacity","undefined","layer","originalItem","sort","a","b","layerOrder","main","overlay","length","match","mimeType","startsWith","validateExportData","errors","warnings","forEach","index","push","isValid","calculateTimelineBounds","endTime","Math","min","max","optimizeForExport","settings","optimized","optimizedItem","round","groupByMediaType","groups","videos","filter","images","analyzeComplexity","analysis","totalItems","overlayItems","hasTransparency","hasRotation","hasScaling","maxConcurrentItems","timeSpan","bounds","time","activeItems","complexityLevel"],"sources":["C:/Scriptify/ai-content-studio/frontend/src/components/utils/timelineDataAdapter.js"],"sourcesContent":["// TimelineDataAdapter.js - –ê–¥–∞–ø—Ç–µ—Ä –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è timeline –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞\r\n\r\nexport class TimelineDataAdapter {\r\n  static convertToExportFormat(timelineItems, tracks) {\r\n    console.log('üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º timeline –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞...');\r\n    \r\n    const exportItems = timelineItems.map(item => {\r\n      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ç—Ä–µ–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è\r\n      let trackType = 'main';\r\n      \r\n      if (tracks.audio.some(track => track.id === item.trackId)) {\r\n        trackType = 'audio';\r\n      } else if (tracks.overlays.some(track => track.id === item.trackId)) {\r\n        trackType = 'overlay';\r\n      }\r\n\r\n      // –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞\r\n      const exportItem = {\r\n        id: item.id,\r\n        name: item.name || item.title || `item_${item.id}`,\r\n        type: this.determineMediaType(item),\r\n        trackType: trackType,\r\n        url: item.url || item.src,\r\n        \r\n        // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\r\n        startTime: item.startTime || 0,\r\n        duration: item.duration || 0,\r\n        trimStart: item.trimStart || 0,\r\n        \r\n        // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (–¥–ª—è overlay)\r\n        x: item.x || 0,\r\n        y: item.y || 0,\r\n        width: item.width || 200,\r\n        height: item.height || 150,\r\n        scale: item.scale || 1,\r\n        rotation: item.rotation || 0,\r\n        opacity: item.opacity !== undefined ? item.opacity : 1,\r\n        \r\n        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\r\n        trackId: item.trackId,\r\n        layer: item.layer || 0,\r\n        \r\n        // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ\r\n        originalItem: item // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\r\n      };\r\n\r\n      console.log(`üìã –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —ç–ª–µ–º–µ–Ω—Ç: ${exportItem.name} (${trackType})`);\r\n      return exportItem;\r\n    });\r\n\r\n    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å–ª–æ—è–º\r\n    exportItems.sort((a, b) => {\r\n      if (a.startTime !== b.startTime) {\r\n        return a.startTime - b.startTime;\r\n      }\r\n      \r\n      // –ü–æ—Ä—è–¥–æ–∫ —Å–ª–æ–µ–≤: audio -> main -> overlay\r\n      const layerOrder = { audio: 0, main: 1, overlay: 2 };\r\n      return layerOrder[a.trackType] - layerOrder[b.trackType];\r\n    });\r\n\r\n    console.log(`‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${exportItems.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞`);\r\n    return exportItems;\r\n  }\r\n\r\n  static determineMediaType(item) {\r\n    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–∞\r\n    if (item.type) return item.type; // –ï—Å–ª–∏ —Ç–∏–ø —É–∂–µ —É–∫–∞–∑–∞–Ω\r\n    \r\n    if (item.url || item.src) {\r\n      const url = item.url || item.src;\r\n      \r\n      if (url.match(/\\.(mp4|webm|mov|avi)$/i)) return 'videos';\r\n      if (url.match(/\\.(jpg|jpeg|png|gif|webp)$/i)) return 'images';\r\n      if (url.match(/\\.(mp3|wav|aac|m4a)$/i)) return 'audio';\r\n    }\r\n    \r\n    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ MIME —Ç–∏–ø—É –µ—Å–ª–∏ –µ—Å—Ç—å\r\n    if (item.mimeType) {\r\n      if (item.mimeType.startsWith('video/')) return 'videos';\r\n      if (item.mimeType.startsWith('image/')) return 'images';\r\n      if (item.mimeType.startsWith('audio/')) return 'audio';\r\n    }\r\n    \r\n    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—á–∏—Ç–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º\r\n    return 'images';\r\n  }\r\n\r\n  static validateExportData(exportItems) {\r\n    const errors = [];\r\n    const warnings = [];\r\n\r\n    exportItems.forEach((item, index) => {\r\n      // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è\r\n      if (!item.id) errors.push(`–≠–ª–µ–º–µ–Ω—Ç ${index}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ID`);\r\n      if (!item.url) errors.push(`–≠–ª–µ–º–µ–Ω—Ç ${item.name}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç URL`);\r\n      if (!item.trackType) errors.push(`–≠–ª–µ–º–µ–Ω—Ç ${item.name}: –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω —Ç–∏–ø —Ç—Ä–µ–∫–∞`);\r\n      \r\n      // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏\r\n      if (item.startTime < 0) warnings.push(`–≠–ª–µ–º–µ–Ω—Ç ${item.name}: –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞`);\r\n      if (item.duration <= 0) warnings.push(`–≠–ª–µ–º–µ–Ω—Ç ${item.name}: –Ω—É–ª–µ–≤–∞—è –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å`);\r\n      \r\n      // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è overlay\r\n      if (item.trackType === 'overlay') {\r\n        if (item.width <= 0 || item.height <= 0) {\r\n          warnings.push(`Overlay ${item.name}: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã`);\r\n        }\r\n      }\r\n    });\r\n\r\n    return { errors, warnings, isValid: errors.length === 0 };\r\n  }\r\n\r\n  static calculateTimelineBounds(exportItems) {\r\n    if (exportItems.length === 0) {\r\n      return { startTime: 0, endTime: 0, duration: 0 };\r\n    }\r\n\r\n    const startTime = Math.min(...exportItems.map(item => item.startTime));\r\n    const endTime = Math.max(...exportItems.map(item => item.startTime + item.duration));\r\n    const duration = endTime - startTime;\r\n\r\n    return { startTime, endTime, duration };\r\n  }\r\n\r\n  static optimizeForExport(exportItems, settings = {}) {\r\n    console.log('‚ö° –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞...');\r\n    \r\n    const optimized = exportItems.map(item => {\r\n      const optimizedItem = { ...item };\r\n      \r\n      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ç–æ—á–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏ (–∏–∑–±–µ–≥–∞–µ–º –ø—Ä–æ–±–ª–µ–º —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π)\r\n      optimizedItem.startTime = Math.round(optimizedItem.startTime * 1000) / 1000;\r\n      optimizedItem.duration = Math.round(optimizedItem.duration * 1000) / 1000;\r\n      \r\n      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\r\n      if (optimizedItem.trackType === 'overlay') {\r\n        optimizedItem.x = Math.round(optimizedItem.x);\r\n        optimizedItem.y = Math.round(optimizedItem.y);\r\n        optimizedItem.width = Math.round(optimizedItem.width);\r\n        optimizedItem.height = Math.round(optimizedItem.height);\r\n        \r\n        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–æ–≤–æ—Ä–æ—Ç –¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π\r\n        optimizedItem.rotation = Math.round(optimizedItem.rotation * 100) / 100;\r\n        \r\n        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π\r\n        optimizedItem.opacity = Math.round(optimizedItem.opacity * 100) / 100;\r\n      }\r\n      \r\n      return optimizedItem;\r\n    });\r\n    \r\n    console.log(`‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ ${optimized.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);\r\n    return optimized;\r\n  }\r\n\r\n  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ —Ç–∏–ø–∞–º –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏\r\n  static groupByMediaType(exportItems) {\r\n    const groups = {\r\n      videos: exportItems.filter(item => item.type === 'videos'),\r\n      images: exportItems.filter(item => item.type === 'images'),\r\n      audio: exportItems.filter(item => item.type === 'audio')\r\n    };\r\n\r\n    console.log('üìä –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ç–∏–ø–∞–º –º–µ–¥–∏–∞:', {\r\n      videos: groups.videos.length,\r\n      images: groups.images.length,\r\n      audio: groups.audio.length\r\n    });\r\n\r\n    return groups;\r\n  }\r\n\r\n  // –ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ timeline –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫\r\n  static analyzeComplexity(exportItems) {\r\n    const analysis = {\r\n      totalItems: exportItems.length,\r\n      overlayItems: exportItems.filter(item => item.trackType === 'overlay').length,\r\n      hasTransparency: exportItems.some(item => item.opacity < 1),\r\n      hasRotation: exportItems.some(item => item.rotation !== 0),\r\n      hasScaling: exportItems.some(item => item.scale !== 1),\r\n      maxConcurrentItems: 0,\r\n      timeSpan: 0\r\n    };\r\n\r\n    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤\r\n    const bounds = this.calculateTimelineBounds(exportItems);\r\n    analysis.timeSpan = bounds.duration;\r\n    \r\n    for (let time = 0; time <= bounds.duration; time += 0.1) {\r\n      const activeItems = exportItems.filter(item => \r\n        time >= item.startTime && time <= item.startTime + item.duration\r\n      );\r\n      analysis.maxConcurrentItems = Math.max(analysis.maxConcurrentItems, activeItems.length);\r\n    }\r\n\r\n    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏\r\n    let complexityLevel = 'simple';\r\n    if (analysis.overlayItems > 5 || analysis.maxConcurrentItems > 3) {\r\n      complexityLevel = 'medium';\r\n    }\r\n    if (analysis.overlayItems > 10 || analysis.maxConcurrentItems > 5 || analysis.hasTransparency || analysis.hasRotation) {\r\n      complexityLevel = 'complex';\r\n    }\r\n\r\n    analysis.complexityLevel = complexityLevel;\r\n\r\n    console.log('üîç –ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ timeline:', analysis);\r\n    return analysis;\r\n  }\r\n}\r\n\r\nexport default TimelineDataAdapter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Scriptify\\\\ai-content-studio\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const apiCall = async (endpoint, options = {}) => {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const token = localStorage.getItem('token');\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...(token && {\n          Authorization: `Bearer ${token}`\n        }),\n        ...options.headers\n      },\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Something went wrong');\n      }\n      return data;\n    } catch (error) {\n      console.error('API call error:', error);\n      throw error;\n    }\n  };\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await apiCall('/api/auth/me');\n        if (response.success) {\n          setUser(response.data.user);\n          setIsAuthenticated(true);\n        } else {\n          localStorage.removeItem('token');\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        localStorage.removeItem('token');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const register = async (name, email, password) => {\n    try {\n      setLoading(true);\n      const response = await apiCall('/api/auth/register', {\n        method: 'POST',\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      if (response.success) {\n        const {\n          user: userData,\n          token\n        } = response.data;\n        localStorage.setItem('token', token);\n        setUser(userData);\n        setIsAuthenticated(true);\n        return {\n          success: true,\n          user: userData\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        error: error.message || 'Registration failed. Please try again.'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await apiCall('/api/auth/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.success) {\n        const {\n          user: userData,\n          token\n        } = response.data;\n        localStorage.setItem('token', token);\n        setUser(userData);\n        setIsAuthenticated(true);\n        return {\n          success: true,\n          user: userData\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: error.message || 'Login failed. Please try again.'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      await apiCall('/api/auth/logout', {\n        method: 'POST'\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const generateScript = async (topic, duration = 'medium', keyPoints = [], contentType = 'Лайфстайл') => {\n    try {\n      const response = await apiCall('/api/script/generate', {\n        method: 'POST',\n        body: JSON.stringify({\n          topic,\n          duration,\n          keyPoints,\n          contentType\n        })\n      });\n      if (response.success) {\n        return {\n          success: true,\n          script: response.data.script\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Script generation error:', error);\n      return {\n        success: false,\n        error: error.message || 'Script generation failed. Please try again.'\n      };\n    }\n  };\n  const generateKeyPoints = async (topic, contentType = 'Лайфстайл') => {\n    try {\n      const response = await apiCall('/api/script/key-points', {\n        method: 'POST',\n        body: JSON.stringify({\n          topic,\n          contentType\n        })\n      });\n      if (response.success) {\n        return {\n          success: true,\n          points: response.data.points\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Key points generation error:', error);\n      return {\n        success: false,\n        error: error.message || 'Key points generation failed. Please try again.'\n      };\n    }\n  };\n  const improveScript = async (selectedText, improvementCommand, script) => {\n    try {\n      const response = await apiCall('/api/script/improve', {\n        method: 'POST',\n        body: JSON.stringify({\n          selectedText,\n          improvementCommand,\n          script\n        })\n      });\n      if (response.success) {\n        return {\n          success: true,\n          improvedText: response.data.improvedText\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Script improvement error:', error);\n      return {\n        success: false,\n        error: error.message || 'Script improvement failed. Please try again.'\n      };\n    }\n  };\n  const analyzeScriptQuality = async script => {\n    try {\n      const response = await apiCall('/api/script/quality', {\n        method: 'POST',\n        body: JSON.stringify({\n          script\n        })\n      });\n      if (response.success) {\n        return {\n          success: true,\n          quality: response.data.quality\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Script quality analysis error:', error);\n      return {\n        success: false,\n        error: error.message || 'Script quality analysis failed. Please try again.'\n      };\n    }\n  };\n  const extendScript = async (script, topic, contentType = 'Лайфстайл') => {\n    try {\n      const response = await apiCall('/api/script/extend', {\n        method: 'POST',\n        body: JSON.stringify({\n          script,\n          topic,\n          contentType\n        })\n      });\n      if (response.success) {\n        return {\n          success: true,\n          extension: response.data.extension\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Script extension error:', error);\n      return {\n        success: false,\n        error: error.message || 'Script extension failed. Please try again.'\n      };\n    }\n  };\n  const generateAudio = async (text, voiceId = 'JBFqnCBsd6RMkjVDRZzb') => {\n    try {\n      const response = await apiCall('/api/audio/generate', {\n        method: 'POST',\n        body: JSON.stringify({\n          text,\n          voiceId\n        })\n      });\n      if (response.success) {\n        return {\n          success: true,\n          audio: response.data\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Audio generation error:', error);\n      return {\n        success: false,\n        error: error.message || 'Audio generation failed. Please try again.'\n      };\n    }\n  };\n  const getAvailableVoices = async () => {\n    try {\n      const response = await apiCall('/api/audio/voices');\n      if (response.success) {\n        return {\n          success: true,\n          voices: response.data.voices\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Get voices error:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to fetch available voices.'\n      };\n    }\n  };\n  const createProject = async projectData => {\n    try {\n      const response = await apiCall('/api/projects', {\n        method: 'POST',\n        body: JSON.stringify(projectData)\n      });\n      if (response.success) {\n        return {\n          success: true,\n          project: response.data.project\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Create project error:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to create project.'\n      };\n    }\n  };\n  const getProjects = async () => {\n    try {\n      const response = await apiCall('/api/projects');\n      if (response.success) {\n        return {\n          success: true,\n          projects: response.data.projects\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Get projects error:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to fetch projects.'\n      };\n    }\n  };\n  const updateProject = async (projectId, updateData) => {\n    try {\n      const response = await apiCall(`/api/projects/${projectId}`, {\n        method: 'PUT',\n        body: JSON.stringify(updateData)\n      });\n      if (response.success) {\n        return {\n          success: true,\n          project: response.data.project\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Update project error:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to update project.'\n      };\n    }\n  };\n  const deleteProject = async projectId => {\n    try {\n      const response = await apiCall(`/api/projects/${projectId}`, {\n        method: 'DELETE'\n      });\n      if (response.success) {\n        return {\n          success: true,\n          message: response.message\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Delete project error:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to delete project.'\n      };\n    }\n  };\n  const refreshUser = async () => {\n    try {\n      const response = await apiCall('/api/auth/me');\n      if (response.success) {\n        setUser(response.data.user);\n        return {\n          success: true,\n          user: response.data.user\n        };\n      }\n      return {\n        success: false,\n        error: response.error\n      };\n    } catch (error) {\n      console.error('Refresh user error:', error);\n      return {\n        success: false,\n        error: error.message || 'Failed to refresh user data.'\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    register,\n    login,\n    logout,\n    generateScript,\n    generateKeyPoints,\n    improveScript,\n    analyzeScriptQuality,\n    extendScript,\n    generateAudio,\n    getAvailableVoices,\n    createProject,\n    getProjects,\n    updateProject,\n    deleteProject,\n    refreshUser,\n    apiCall\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 417,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","API_BASE_URL","process","env","REACT_APP_API_URL","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","apiCall","endpoint","options","url","token","localStorage","getItem","config","headers","Authorization","response","fetch","data","json","ok","error","console","checkAuth","success","removeItem","register","name","email","password","method","body","JSON","stringify","userData","setItem","message","login","logout","generateScript","topic","duration","keyPoints","contentType","script","generateKeyPoints","points","improveScript","selectedText","improvementCommand","improvedText","analyzeScriptQuality","quality","extendScript","extension","generateAudio","text","voiceId","audio","getAvailableVoices","voices","createProject","projectData","project","getProjects","projects","updateProject","projectId","updateData","deleteProject","refreshUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Scriptify/ai-content-studio/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const apiCall = async (endpoint, options = {}) => {\r\n    const url = `${API_BASE_URL}${endpoint}`;\r\n    const token = localStorage.getItem('token');\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(token && { Authorization: `Bearer ${token}` }),\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Something went wrong');\r\n      }\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      console.error('API call error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await apiCall('/api/auth/me');\r\n        \r\n        if (response.success) {\r\n          setUser(response.data.user);\r\n          setIsAuthenticated(true);\r\n        } else {\r\n          localStorage.removeItem('token');\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth check failed:', error);\r\n        localStorage.removeItem('token');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const response = await apiCall('/api/auth/register', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n\r\n      if (response.success) {\r\n        const { user: userData, token } = response.data;\r\n        \r\n        localStorage.setItem('token', token);\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n        \r\n        return { success: true, user: userData };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Registration failed. Please try again.' \r\n      };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const response = await apiCall('/api/auth/login', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (response.success) {\r\n        const { user: userData, token } = response.data;\r\n        \r\n        localStorage.setItem('token', token);\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n        \r\n        return { success: true, user: userData };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Login failed. Please try again.' \r\n      };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await apiCall('/api/auth/logout', { method: 'POST' });\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  const generateScript = async (topic, duration = 'medium', keyPoints = [], contentType = 'Лайфстайл') => {\r\n    try {\r\n      const response = await apiCall('/api/script/generate', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ topic, duration, keyPoints, contentType }),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, script: response.data.script };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Script generation error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Script generation failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const generateKeyPoints = async (topic, contentType = 'Лайфстайл') => {\r\n    try {\r\n      const response = await apiCall('/api/script/key-points', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ topic, contentType }),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, points: response.data.points };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Key points generation error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Key points generation failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const improveScript = async (selectedText, improvementCommand, script) => {\r\n    try {\r\n      const response = await apiCall('/api/script/improve', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ selectedText, improvementCommand, script }),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, improvedText: response.data.improvedText };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Script improvement error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Script improvement failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const analyzeScriptQuality = async (script) => {\r\n    try {\r\n      const response = await apiCall('/api/script/quality', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ script }),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, quality: response.data.quality };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Script quality analysis error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Script quality analysis failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const extendScript = async (script, topic, contentType = 'Лайфстайл') => {\r\n    try {\r\n      const response = await apiCall('/api/script/extend', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ script, topic, contentType }),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, extension: response.data.extension };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Script extension error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Script extension failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const generateAudio = async (text, voiceId = 'JBFqnCBsd6RMkjVDRZzb') => {\r\n    try {\r\n      const response = await apiCall('/api/audio/generate', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ text, voiceId }),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, audio: response.data };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Audio generation error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Audio generation failed. Please try again.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const getAvailableVoices = async () => {\r\n    try {\r\n      const response = await apiCall('/api/audio/voices');\r\n\r\n      if (response.success) {\r\n        return { success: true, voices: response.data.voices };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Get voices error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Failed to fetch available voices.' \r\n      };\r\n    }\r\n  };\r\n  \r\n  const createProject = async (projectData) => {\r\n    try {\r\n      const response = await apiCall('/api/projects', {\r\n        method: 'POST',\r\n        body: JSON.stringify(projectData),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, project: response.data.project };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Create project error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Failed to create project.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const getProjects = async () => {\r\n    try {\r\n      const response = await apiCall('/api/projects');\r\n\r\n      if (response.success) {\r\n        return { success: true, projects: response.data.projects };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Get projects error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Failed to fetch projects.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const updateProject = async (projectId, updateData) => {\r\n    try {\r\n      const response = await apiCall(`/api/projects/${projectId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updateData),\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, project: response.data.project };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Update project error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Failed to update project.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const deleteProject = async (projectId) => {\r\n    try {\r\n      const response = await apiCall(`/api/projects/${projectId}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (response.success) {\r\n        return { success: true, message: response.message };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Delete project error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Failed to delete project.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const refreshUser = async () => {\r\n    try {\r\n      const response = await apiCall('/api/auth/me');\r\n      \r\n      if (response.success) {\r\n        setUser(response.data.user);\r\n        return { success: true, user: response.data.user };\r\n      }\r\n      \r\n      return { success: false, error: response.error };\r\n    } catch (error) {\r\n      console.error('Refresh user error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.message || 'Failed to refresh user data.' \r\n      };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    isAuthenticated,\r\n    register,\r\n    login,\r\n    logout,\r\n    generateScript,\r\n    generateKeyPoints,\r\n    improveScript,\r\n    analyzeScriptQuality,\r\n    extendScript,\r\n    generateAudio,\r\n    getAvailableVoices,\r\n    createProject,\r\n    getProjects,\r\n    updateProject,\r\n    deleteProject,\r\n    refreshUser,\r\n    apiCall,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
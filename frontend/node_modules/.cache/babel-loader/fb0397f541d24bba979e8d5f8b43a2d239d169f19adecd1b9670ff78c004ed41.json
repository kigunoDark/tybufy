{"ast":null,"code":"var _jsxFileName = \"C:\\\\Scriptify\\\\ai-content-studio\\\\frontend\\\\src\\\\components\\\\MediaLibrary.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect, useState } from \"react\";\nimport { Upload, Video, Music, Trash2, Image, AlertTriangle, Loader2, Zap } from \"lucide-react\";\n\n// Симуляция MediaStorage для демонстрации\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass MediaStorage {\n  constructor() {\n    this.dbName = \"VideoEditorDB\";\n    this.version = 1;\n    this.db = null;\n    this.fallbackMode = false;\n    this.memoryStorage = new Map();\n    this.limits = {\n      videos: 5,\n      images: 10,\n      audios: 5,\n      maxFileSize: 100 * 1024 * 1024,\n      // 100MB\n      retentionDays: 7\n    };\n  }\n  isIndexedDBSupported() {\n    return \"indexedDB\" in window && indexedDB !== null;\n  }\n  async init() {\n    console.log(\"Initializing MediaStorage...\");\n    this.fallbackMode = true; // Используем fallback для демонстрации\n    this.memoryStorage.clear();\n    return true;\n  }\n  async saveFile(file, type) {\n    if (file.size > this.limits.maxFileSize) {\n      throw new Error(`File too large. Max size: ${this.limits.maxFileSize / (1024 * 1024)}MB`);\n    }\n    const currentFiles = await this.getFilesByType(type);\n    if (currentFiles.length >= this.limits[type]) {\n      throw new Error(`Storage limit reached. Max ${this.limits[type]} ${type} allowed.`);\n    }\n    const fileData = {\n      id: Date.now() + Math.random(),\n      name: file.name,\n      type: type,\n      mediaType: type,\n      // Добавляем mediaType\n      size: file.size,\n      mimetype: file.type,\n      blob: file,\n      url: URL.createObjectURL(file),\n      createdAt: new Date().toISOString(),\n      expiresAt: new Date(Date.now() + this.limits.retentionDays * 24 * 60 * 60 * 1000).toISOString()\n    };\n    try {\n      if (type === \"videos\") {\n        fileData.duration = await this.getVideoDuration(file);\n      } else if (type === \"audios\") {\n        fileData.duration = await this.getAudioDuration(file);\n      } else if (type === \"images\") {\n        const dimensions = await this.getImageDimensions(file);\n        fileData.width = dimensions.width;\n        fileData.height = dimensions.height;\n      }\n    } catch (metaError) {\n      console.warn(\"Failed to get file metadata:\", metaError);\n    }\n\n    // Сохраняем в память (fallback mode)\n    this.memoryStorage.set(fileData.id.toString(), fileData);\n    console.log(`Saved file ${fileData.name} to memory storage`);\n    return fileData;\n  }\n  async getFilesByType(type) {\n    const now = new Date();\n    const files = [];\n    for (const [key, file] of this.memoryStorage.entries()) {\n      if (file.type === type && new Date(file.expiresAt) > now) {\n        files.push(file);\n      }\n    }\n    return files;\n  }\n  async getAllFiles() {\n    try {\n      const videos = await this.getFilesByType(\"videos\");\n      const images = await this.getFilesByType(\"images\");\n      const audios = await this.getFilesByType(\"audios\");\n      return {\n        videos,\n        images,\n        audios\n      };\n    } catch (error) {\n      console.error(\"Get all files error:\", error);\n      return {\n        videos: [],\n        images: [],\n        audios: []\n      };\n    }\n  }\n  async deleteFile(id) {\n    try {\n      const file = this.memoryStorage.get(id.toString());\n      if (file && file.url) {\n        URL.revokeObjectURL(file.url);\n      }\n      this.memoryStorage.delete(id.toString());\n      return true;\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n      throw error;\n    }\n  }\n  async getStorageInfo() {\n    try {\n      const files = await this.getAllFiles();\n      const totalSize = [...files.videos, ...files.images, ...files.audios].reduce((sum, file) => sum + file.size, 0);\n      return {\n        usage: {\n          videos: files.videos.length,\n          images: files.images.length,\n          audios: files.audios.length,\n          totalSize: totalSize,\n          totalSizeMB: Math.round(totalSize / (1024 * 1024))\n        },\n        limits: this.limits,\n        files: files,\n        mode: this.fallbackMode ? \"fallback\" : \"indexeddb\"\n      };\n    } catch (error) {\n      console.error(\"Get storage info error:\", error);\n      return {\n        usage: {\n          videos: 0,\n          images: 0,\n          audios: 0,\n          totalSize: 0,\n          totalSizeMB: 0\n        },\n        limits: this.limits,\n        files: {\n          videos: [],\n          images: [],\n          audios: []\n        },\n        mode: this.fallbackMode ? \"fallback\" : \"indexeddb\"\n      };\n    }\n  }\n  async getVideoDuration(file) {\n    return new Promise(resolve => {\n      try {\n        const video = document.createElement(\"video\");\n        video.preload = \"metadata\";\n        const timeout = setTimeout(() => {\n          video.src = \"\";\n          resolve(10);\n        }, 5000);\n        video.onloadedmetadata = () => {\n          clearTimeout(timeout);\n          URL.revokeObjectURL(video.src);\n          resolve(video.duration || 10);\n        };\n        video.onerror = () => {\n          clearTimeout(timeout);\n          resolve(10);\n        };\n        video.src = URL.createObjectURL(file);\n      } catch (error) {\n        console.warn(\"Video duration error:\", error);\n        resolve(10);\n      }\n    });\n  }\n  async getAudioDuration(file) {\n    return new Promise(resolve => {\n      try {\n        const audio = document.createElement(\"audio\");\n        audio.preload = \"metadata\";\n        const timeout = setTimeout(() => {\n          audio.src = \"\";\n          resolve(10);\n        }, 5000);\n        audio.onloadedmetadata = () => {\n          clearTimeout(timeout);\n          URL.revokeObjectURL(audio.src);\n          resolve(audio.duration || 10);\n        };\n        audio.onerror = () => {\n          clearTimeout(timeout);\n          resolve(10);\n        };\n        audio.src = URL.createObjectURL(file);\n      } catch (error) {\n        console.warn(\"Audio duration error:\", error);\n        resolve(10);\n      }\n    });\n  }\n  async getImageDimensions(file) {\n    return new Promise(resolve => {\n      try {\n        const img = new Image();\n        const timeout = setTimeout(() => {\n          img.src = \"\";\n          resolve({\n            width: 0,\n            height: 0\n          });\n        }, 5000);\n        img.onload = () => {\n          clearTimeout(timeout);\n          URL.revokeObjectURL(img.src);\n          resolve({\n            width: img.width,\n            height: img.height\n          });\n        };\n        img.onerror = () => {\n          clearTimeout(timeout);\n          resolve({\n            width: 0,\n            height: 0\n          });\n        };\n        img.src = URL.createObjectURL(file);\n      } catch (error) {\n        console.warn(\"Image dimensions error:\", error);\n        resolve({\n          width: 0,\n          height: 0\n        });\n      }\n    });\n  }\n  async canUpload(type) {\n    try {\n      const files = await this.getFilesByType(type);\n      return files.length < this.limits[type];\n    } catch (error) {\n      console.error(\"Can upload check error:\", error);\n      return false;\n    }\n  }\n  async getRemainingSpace(type) {\n    try {\n      const files = await this.getFilesByType(type);\n      return this.limits[type] - files.length;\n    } catch (error) {\n      console.error(\"Get remaining space error:\", error);\n      return 0;\n    }\n  }\n}\n\n// Создаем экземпляр MediaStorage\nconst mediaStorage = new MediaStorage();\nexport const MediaLibrary = ({\n  mediaLibrary,\n  setMediaLibrary,\n  activeTab,\n  setActiveTab,\n  draggedItem,\n  setDraggedItem,\n  setIsDragging,\n  addToTimeline,\n  formatTime\n}) => {\n  _s();\n  const fileInputRef = useRef(null);\n  const audioInputRef = useRef(null);\n  const imageInputRef = useRef(null);\n\n  // Состояния для обработки загрузки и ошибок\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [storageInfo, setStorageInfo] = useState(null);\n  const [compressionProgress, setCompressionProgress] = useState(0);\n  const [isCompressing, setIsCompressing] = useState(false);\n\n  // Инициализация MediaStorage при монтировании компонента\n  useEffect(() => {\n    const initializeStorage = async () => {\n      try {\n        setIsLoading(true);\n        await mediaStorage.init();\n        await loadFilesFromStorage();\n        await updateStorageInfo();\n      } catch (error) {\n        console.error('Failed to initialize MediaStorage:', error);\n        setError('Failed to initialize storage');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initializeStorage();\n  }, []);\n\n  // Загрузка файлов из MediaStorage\n  const loadFilesFromStorage = async () => {\n    try {\n      const files = await mediaStorage.getAllFiles();\n\n      // Пересоздаем URL для всех файлов из blob объектов\n      const processFiles = fileArray => {\n        return fileArray.map(file => {\n          // Если есть blob, пересоздаем URL\n          if (file.blob) {\n            // Освобождаем старый URL если он есть\n            if (file.url) {\n              URL.revokeObjectURL(file.url);\n            }\n            // Создаем новый URL из blob\n            file.url = URL.createObjectURL(file.blob);\n          }\n          return file;\n        });\n      };\n      setMediaLibrary({\n        videos: processFiles(files.videos || []),\n        audios: processFiles(files.audios || []),\n        images: processFiles(files.images || [])\n      });\n    } catch (error) {\n      console.error('Failed to load files from storage:', error);\n      setError('Failed to load saved files');\n    }\n  };\n\n  // Обновление информации о хранилище\n  const updateStorageInfo = async () => {\n    try {\n      const info = await mediaStorage.getStorageInfo();\n      setStorageInfo(info);\n    } catch (error) {\n      console.error('Failed to get storage info:', error);\n    }\n  };\n\n  // Форматирование размера файла\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  // Проверка размера файла\n  const checkFileSize = (file, type) => {\n    const limit = 100 * 1024 * 1024; // 100MB\n    if (file.size > limit) {\n      return {\n        valid: false,\n        message: `File \"${file.name}\" is ${formatFileSize(file.size)}. Maximum allowed: ${formatFileSize(limit)}`,\n        size: file.size,\n        limit: limit\n      };\n    }\n    return {\n      valid: true\n    };\n  };\n\n  // Сжатие видео файла\n  const compressVideo = async file => {\n    return new Promise((resolve, reject) => {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const video = document.createElement('video');\n      video.onloadeddata = () => {\n        // Уменьшаем разрешение для сжатия\n        const maxWidth = 1280;\n        const maxHeight = 720;\n        let {\n          videoWidth,\n          videoHeight\n        } = video;\n        if (videoWidth > maxWidth || videoHeight > maxHeight) {\n          const ratio = Math.min(maxWidth / videoWidth, maxHeight / videoHeight);\n          videoWidth *= ratio;\n          videoHeight *= ratio;\n        }\n        canvas.width = videoWidth;\n        canvas.height = videoHeight;\n\n        // Создаем MediaRecorder для сжатия\n        const stream = canvas.captureStream(30); // 30 FPS\n        const options = {\n          mimeType: 'video/webm;codecs=vp9',\n          videoBitsPerSecond: 2000000 // 2 Mbps\n        };\n        let mediaRecorder;\n        try {\n          mediaRecorder = new MediaRecorder(stream, options);\n        } catch (e) {\n          // Fallback если VP9 не поддерживается\n          mediaRecorder = new MediaRecorder(stream, {\n            mimeType: 'video/webm',\n            videoBitsPerSecond: 2000000\n          });\n        }\n        const chunks = [];\n        mediaRecorder.ondataavailable = e => chunks.push(e.data);\n        mediaRecorder.onstop = () => {\n          const compressedBlob = new Blob(chunks, {\n            type: 'video/webm'\n          });\n          const compressedFile = new File([compressedBlob], file.name.replace(/\\.[^/.]+$/, '_compressed.webm'), {\n            type: 'video/webm'\n          });\n          resolve(compressedFile);\n        };\n        let currentTime = 0;\n        const duration = video.duration;\n        const drawFrame = () => {\n          if (currentTime < duration) {\n            video.currentTime = currentTime;\n            ctx.drawImage(video, 0, 0, videoWidth, videoHeight);\n            currentTime += 1 / 30; // 30 FPS\n            setCompressionProgress(currentTime / duration * 100);\n            requestAnimationFrame(drawFrame);\n          } else {\n            mediaRecorder.stop();\n          }\n        };\n        mediaRecorder.start();\n        drawFrame();\n      };\n      video.onerror = () => reject(new Error('Failed to load video for compression'));\n      video.src = URL.createObjectURL(file);\n    });\n  };\n\n  // Универсальная обработка загрузки файлов\n  const handleFileUpload = async (files, type) => {\n    setError(null);\n    const fileArray = Array.from(files);\n\n    // Проверяем размеры всех файлов\n    const oversizedFiles = [];\n    const validFiles = [];\n    fileArray.forEach(file => {\n      const sizeCheck = checkFileSize(file, type);\n      if (sizeCheck.valid) {\n        validFiles.push(file);\n      } else {\n        oversizedFiles.push(sizeCheck);\n      }\n    });\n\n    // Показываем ошибки для слишком больших файлов\n    if (oversizedFiles.length > 0) {\n      const errorMessages = oversizedFiles.map(f => f.message).join('\\n');\n\n      // Для видео предлагаем сжатие\n      if (type === 'videos' && oversizedFiles.length === 1) {\n        const oversizedFile = oversizedFiles[0];\n        const shouldCompress = window.confirm(`${oversizedFile.message}\\n\\nWould you like to compress this video to reduce file size?`);\n        if (shouldCompress) {\n          // Находим оригинальный файл\n          const originalFile = fileArray.find(f => f.name === oversizedFile.message.match(/\"([^\"]+)\"/)[1]);\n          if (originalFile) {\n            try {\n              setIsCompressing(true);\n              setCompressionProgress(0);\n              const compressedFile = await compressVideo(originalFile);\n              console.log(`Compressed from ${formatFileSize(originalFile.size)} to ${formatFileSize(compressedFile.size)}`);\n\n              // Проверяем размер сжатого файла\n              const compressedSizeCheck = checkFileSize(compressedFile, type);\n              if (compressedSizeCheck.valid) {\n                validFiles.push(compressedFile);\n                setError(null); // Убираем ошибку, если сжатие помогло\n              } else {\n                setError(`Even after compression, the file is still too large: ${formatFileSize(compressedFile.size)}`);\n              }\n            } catch (compressionError) {\n              console.error('Compression failed:', compressionError);\n              setError(`Compression failed: ${compressionError.message}`);\n            } finally {\n              setIsCompressing(false);\n              setCompressionProgress(0);\n            }\n          }\n        } else {\n          setError(errorMessages);\n        }\n      } else {\n        setError(`${oversizedFiles.length} file(s) exceeded size limit:\\n${errorMessages}`);\n      }\n    }\n\n    // Обрабатываем валидные файлы\n    for (const file of validFiles) {\n      try {\n        setIsLoading(true);\n\n        // Проверяем лимиты хранилища\n        const canUpload = await mediaStorage.canUpload(type);\n        if (!canUpload) {\n          const remaining = await mediaStorage.getRemainingSpace(type);\n          setError(`Storage limit reached. You can upload ${remaining} more ${type}.`);\n          continue;\n        }\n\n        // Сохраняем файл в MediaStorage\n        const savedFile = await mediaStorage.saveFile(file, type);\n\n        // Обновляем состояние компонента\n        setMediaLibrary(prev => ({\n          ...prev,\n          [type]: [...prev[type], savedFile]\n        }));\n      } catch (error) {\n        console.error(`Failed to save ${file.name}:`, error);\n        setError(`Failed to save ${file.name}: ${error.message}`);\n      }\n    }\n    setIsLoading(false);\n    await updateStorageInfo();\n  };\n\n  // Обработка загрузки видео\n  const handleVideoUpload = async event => {\n    const files = event.target.files ? Array.from(event.target.files) : [];\n    await handleFileUpload(files, 'videos');\n\n    // Очищаем input\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  // Обработка загрузки аудио\n  const handleAudioUpload = async event => {\n    const files = event.target.files ? Array.from(event.target.files) : [];\n    await handleFileUpload(files, 'audios');\n    if (audioInputRef.current) {\n      audioInputRef.current.value = '';\n    }\n  };\n\n  // Обработка загрузки изображений\n  const handleImageUpload = async event => {\n    const files = event.target.files ? Array.from(event.target.files) : [];\n    await handleFileUpload(files, 'images');\n    if (imageInputRef.current) {\n      imageInputRef.current.value = '';\n    }\n  };\n\n  // Удаление из библиотеки\n  const removeFromLibrary = async (itemId, type) => {\n    try {\n      setError(null);\n\n      // Удаляем из MediaStorage\n      await mediaStorage.deleteFile(itemId);\n\n      // Обновляем состояние компонента\n      setMediaLibrary(prev => ({\n        ...prev,\n        [type]: prev[type].filter(item => item.id !== itemId)\n      }));\n      await updateStorageInfo();\n    } catch (error) {\n      console.error('Failed to remove file:', error);\n      setError('Failed to remove file');\n    }\n  };\n  const handleDragStart = (e, mediaItem) => {\n    setDraggedItem(mediaItem);\n    setIsDragging(true);\n    e.dataTransfer.effectAllowed = \"copy\";\n    e.dataTransfer.setData(\"text/plain\", \"\");\n  };\n  const handleDragEnd = () => {\n    setDraggedItem(null);\n    setIsDragging(false);\n  };\n\n  // Очистка ошибки\n  const clearError = () => {\n    setError(null);\n  };\n\n  // Получить текущий тип файлов для отображения лимитов\n  const getCurrentTypeKey = () => {\n    return activeTab === 'videos' ? 'videos' : activeTab === 'audios' ? 'audios' : 'images';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-80 min-w-72 max-w-80 bg-white border-2 border-blue-200 flex flex-col rounded-2xl shadow-lg overflow-hidden flex-shrink-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-50 px-4 py-3 border-b border-blue-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-bold text-blue-800 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Upload, {\n          size: 18,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), \"Enhanced Media Library\", (isLoading || isCompressing) && /*#__PURE__*/_jsxDEV(Loader2, {\n          size: 16,\n          className: \"ml-2 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this), storageInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-blue-600 mt-1\",\n        children: [storageInfo.usage[getCurrentTypeKey()], \"/\", storageInfo.limits[getCurrentTypeKey()], \" files\", storageInfo.mode === 'fallback' && ' (demo mode)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, this), isCompressing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-50 px-4 py-2 border-b border-blue-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center text-sm text-blue-700\",\n        children: [/*#__PURE__*/_jsxDEV(Zap, {\n          size: 14,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 13\n        }, this), \"Compressing video... \", Math.round(compressionProgress), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-blue-200 rounded-full h-2 mt-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-600 h-2 rounded-full transition-all duration-300\",\n          style: {\n            width: `${compressionProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 border-l-4 border-red-400 p-3 mx-4 mt-2 rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-start\",\n        children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n          size: 16,\n          className: \"text-red-400 mr-2 mt-0.5 flex-shrink-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"text-sm text-red-700 whitespace-pre-wrap\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearError,\n          className: \"text-red-400 hover:text-red-600 ml-2\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 pb-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex bg-gray-100 rounded-xl p-1\",\n        children: [{\n          id: \"videos\",\n          name: \"Videos\",\n          icon: Video\n        }, {\n          id: \"audios\",\n          name: \"Audio\",\n          icon: Music\n        }, {\n          id: \"images\",\n          name: \"Images\",\n          icon: Image\n        }].map(tab => {\n          const IconComponent = tab.icon;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(tab.id),\n            className: `flex-1 p-3 text-sm font-medium transition-all duration-200 rounded-lg ${activeTab === tab.id ? \"bg-white text-blue-600 shadow-sm\" : \"text-gray-600 hover:text-gray-800\"}`,\n            children: [/*#__PURE__*/_jsxDEV(IconComponent, {\n              size: 16,\n              className: \"mr-2 inline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 17\n            }, this), tab.name]\n          }, tab.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          var _fileInputRef$current, _audioInputRef$curren, _imageInputRef$curren;\n          if (isLoading || isCompressing) return;\n          if (activeTab === \"videos\") (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();else if (activeTab === \"audios\") (_audioInputRef$curren = audioInputRef.current) === null || _audioInputRef$curren === void 0 ? void 0 : _audioInputRef$curren.click();else (_imageInputRef$curren = imageInputRef.current) === null || _imageInputRef$curren === void 0 ? void 0 : _imageInputRef$curren.click();\n        },\n        disabled: isLoading || isCompressing,\n        className: `w-full p-6 border-2 border-dashed border-gray-300 rounded-2xl hover:border-blue-400 hover:bg-blue-50/50 transition-all duration-200 text-center group ${isLoading || isCompressing ? 'opacity-50 cursor-not-allowed' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-12 h-12 bg-gray-100 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:bg-blue-100 transition-colors\",\n          children: isLoading || isCompressing ? /*#__PURE__*/_jsxDEV(Loader2, {\n            size: 20,\n            className: \"text-blue-500 animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Upload, {\n            size: 20,\n            className: \"text-gray-500 group-hover:text-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-gray-700 group-hover:text-blue-600\",\n          children: isCompressing ? 'Compressing...' : isLoading ? 'Uploading...' : `Upload ${activeTab === \"videos\" ? \"Video\" : activeTab === \"audios\" ? \"Audio\" : \"Images\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: activeTab === \"videos\" ? \"MP4, AVI, MOV up to 100MB (compression available)\" : activeTab === \"audios\" ? \"MP3, WAV, M4A up to 100MB\" : \"JPG, PNG, GIF up to 100MB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: fileInputRef,\n      type: \"file\",\n      accept: \"video/*\",\n      multiple: true,\n      onChange: handleVideoUpload,\n      className: \"hidden\",\n      disabled: isLoading || isCompressing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: audioInputRef,\n      type: \"file\",\n      accept: \"audio/*\",\n      multiple: true,\n      onChange: handleAudioUpload,\n      className: \"hidden\",\n      disabled: isLoading || isCompressing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: imageInputRef,\n      type: \"file\",\n      accept: \"image/*\",\n      multiple: true,\n      onChange: handleImageUpload,\n      className: \"hidden\",\n      disabled: isLoading || isCompressing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto px-4 pb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [mediaLibrary[activeTab].map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          draggable: \"true\",\n          onDragStart: e => handleDragStart(e, item),\n          onDragEnd: handleDragEnd,\n          className: `flex items-center p-3 bg-gray-50 rounded-xl hover:bg-gray-100 hover:shadow-sm transition-all duration-200 cursor-grab active:cursor-grabbing group ${(draggedItem === null || draggedItem === void 0 ? void 0 : draggedItem.id) === item.id ? \"opacity-50\" : \"\"}`,\n          onClick: () => addToTimeline(item),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-12 h-12 bg-white rounded-xl flex items-center justify-center mr-3 shadow-sm group-hover:shadow\",\n            children: [activeTab === \"videos\" && /*#__PURE__*/_jsxDEV(Video, {\n              size: 20,\n              className: \"text-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 19\n            }, this), activeTab === \"audios\" && /*#__PURE__*/_jsxDEV(Music, {\n              size: 20,\n              className: \"text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 19\n            }, this), activeTab === \"images\" && /*#__PURE__*/_jsxDEV(Image, {\n              size: 20,\n              className: \"text-purple-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 min-w-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm font-medium text-gray-900 truncate\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-xs text-gray-500 space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: activeTab === \"images\" ? `${item.width || 0}×${item.height || 0}` : formatTime(item.duration || 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 19\n              }, this), item.size && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\u2022\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatFileSize(item.size)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 814,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              removeFromLibrary(item.id, activeTab);\n            },\n            className: \"opacity-0 group-hover:opacity-100 p-2 text-red-400 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all duration-200\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 13\n        }, this)), mediaLibrary[activeTab].length === 0 && !isLoading && !isCompressing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-16 h-16 bg-gray-100 rounded-2xl flex items-center justify-center mx-auto mb-3\",\n            children: [activeTab === \"videos\" && /*#__PURE__*/_jsxDEV(Video, {\n              size: 24,\n              className: \"text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 19\n            }, this), activeTab === \"audios\" && /*#__PURE__*/_jsxDEV(Music, {\n              size: 24,\n              className: \"text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 837,\n              columnNumber: 19\n            }, this), activeTab === \"images\" && /*#__PURE__*/_jsxDEV(Image, {\n              size: 24,\n              className: \"text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 840,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: [\"No \", activeTab, \" uploaded yet\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-400 mt-1\",\n            children: \"Click upload button above\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 628,\n    columnNumber: 5\n  }, this);\n};\n_s(MediaLibrary, \"95GHomA57WFY6wHjgim/C7zOpm8=\");\n_c = MediaLibrary;\nvar _c;\n$RefreshReg$(_c, \"MediaLibrary\");","map":{"version":3,"names":["useRef","useEffect","useState","Upload","Video","Music","Trash2","Image","AlertTriangle","Loader2","Zap","jsxDEV","_jsxDEV","Fragment","_Fragment","MediaStorage","constructor","dbName","version","db","fallbackMode","memoryStorage","Map","limits","videos","images","audios","maxFileSize","retentionDays","isIndexedDBSupported","window","indexedDB","init","console","log","clear","saveFile","file","type","size","Error","currentFiles","getFilesByType","length","fileData","id","Date","now","Math","random","name","mediaType","mimetype","blob","url","URL","createObjectURL","createdAt","toISOString","expiresAt","duration","getVideoDuration","getAudioDuration","dimensions","getImageDimensions","width","height","metaError","warn","set","toString","files","key","entries","push","getAllFiles","error","deleteFile","get","revokeObjectURL","delete","getStorageInfo","totalSize","reduce","sum","usage","totalSizeMB","round","mode","Promise","resolve","video","document","createElement","preload","timeout","setTimeout","src","onloadedmetadata","clearTimeout","onerror","audio","img","onload","canUpload","getRemainingSpace","mediaStorage","MediaLibrary","mediaLibrary","setMediaLibrary","activeTab","setActiveTab","draggedItem","setDraggedItem","setIsDragging","addToTimeline","formatTime","_s","fileInputRef","audioInputRef","imageInputRef","isLoading","setIsLoading","setError","storageInfo","setStorageInfo","compressionProgress","setCompressionProgress","isCompressing","setIsCompressing","initializeStorage","loadFilesFromStorage","updateStorageInfo","processFiles","fileArray","map","info","formatFileSize","bytes","k","sizes","i","floor","parseFloat","pow","toFixed","checkFileSize","limit","valid","message","compressVideo","reject","canvas","ctx","getContext","onloadeddata","maxWidth","maxHeight","videoWidth","videoHeight","ratio","min","stream","captureStream","options","mimeType","videoBitsPerSecond","mediaRecorder","MediaRecorder","e","chunks","ondataavailable","data","onstop","compressedBlob","Blob","compressedFile","File","replace","currentTime","drawFrame","drawImage","requestAnimationFrame","stop","start","handleFileUpload","Array","from","oversizedFiles","validFiles","forEach","sizeCheck","errorMessages","f","join","oversizedFile","shouldCompress","confirm","originalFile","find","match","compressedSizeCheck","compressionError","remaining","savedFile","prev","handleVideoUpload","event","target","current","value","handleAudioUpload","handleImageUpload","removeFromLibrary","itemId","filter","item","handleDragStart","mediaItem","dataTransfer","effectAllowed","setData","handleDragEnd","clearError","getCurrentTypeKey","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","icon","tab","IconComponent","_fileInputRef$current","_audioInputRef$curren","_imageInputRef$curren","click","disabled","ref","accept","multiple","onChange","draggable","onDragStart","onDragEnd","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Scriptify/ai-content-studio/frontend/src/components/MediaLibrary.jsx"],"sourcesContent":["import { useRef, useEffect, useState } from \"react\";\r\nimport { Upload, Video, Music, Trash2, Image, AlertTriangle, Loader2, Zap } from \"lucide-react\";\r\n\r\n// Симуляция MediaStorage для демонстрации\r\nclass MediaStorage {\r\n  constructor() {\r\n    this.dbName = \"VideoEditorDB\";\r\n    this.version = 1;\r\n    this.db = null;\r\n    this.fallbackMode = false;\r\n    this.memoryStorage = new Map();\r\n    this.limits = {\r\n      videos: 5,\r\n      images: 10,\r\n      audios: 5,\r\n      maxFileSize: 100 * 1024 * 1024, // 100MB\r\n      retentionDays: 7,\r\n    };\r\n  }\r\n\r\n  isIndexedDBSupported() {\r\n    return \"indexedDB\" in window && indexedDB !== null;\r\n  }\r\n\r\n  async init() {\r\n    console.log(\"Initializing MediaStorage...\");\r\n    this.fallbackMode = true; // Используем fallback для демонстрации\r\n    this.memoryStorage.clear();\r\n    return true;\r\n  }\r\n\r\n  async saveFile(file, type) {\r\n    if (file.size > this.limits.maxFileSize) {\r\n      throw new Error(\r\n        `File too large. Max size: ${this.limits.maxFileSize / (1024 * 1024)}MB`\r\n      );\r\n    }\r\n\r\n    const currentFiles = await this.getFilesByType(type);\r\n    if (currentFiles.length >= this.limits[type]) {\r\n      throw new Error(\r\n        `Storage limit reached. Max ${this.limits[type]} ${type} allowed.`\r\n      );\r\n    }\r\n\r\n    const fileData = {\r\n      id: Date.now() + Math.random(),\r\n      name: file.name,\r\n      type: type,\r\n      mediaType: type, // Добавляем mediaType\r\n      size: file.size,\r\n      mimetype: file.type,\r\n      blob: file,\r\n      url: URL.createObjectURL(file),\r\n      createdAt: new Date().toISOString(),\r\n      expiresAt: new Date(\r\n        Date.now() + this.limits.retentionDays * 24 * 60 * 60 * 1000\r\n      ).toISOString(),\r\n    };\r\n\r\n    try {\r\n      if (type === \"videos\") {\r\n        fileData.duration = await this.getVideoDuration(file);\r\n      } else if (type === \"audios\") {\r\n        fileData.duration = await this.getAudioDuration(file);\r\n      } else if (type === \"images\") {\r\n        const dimensions = await this.getImageDimensions(file);\r\n        fileData.width = dimensions.width;\r\n        fileData.height = dimensions.height;\r\n      }\r\n    } catch (metaError) {\r\n      console.warn(\"Failed to get file metadata:\", metaError);\r\n    }\r\n\r\n    // Сохраняем в память (fallback mode)\r\n    this.memoryStorage.set(fileData.id.toString(), fileData);\r\n    console.log(`Saved file ${fileData.name} to memory storage`);\r\n    \r\n    return fileData;\r\n  }\r\n\r\n  async getFilesByType(type) {\r\n    const now = new Date();\r\n    const files = [];\r\n\r\n    for (const [key, file] of this.memoryStorage.entries()) {\r\n      if (file.type === type && new Date(file.expiresAt) > now) {\r\n        files.push(file);\r\n      }\r\n    }\r\n\r\n    return files;\r\n  }\r\n\r\n  async getAllFiles() {\r\n    try {\r\n      const videos = await this.getFilesByType(\"videos\");\r\n      const images = await this.getFilesByType(\"images\");\r\n      const audios = await this.getFilesByType(\"audios\");\r\n\r\n      return { videos, images, audios };\r\n    } catch (error) {\r\n      console.error(\"Get all files error:\", error);\r\n      return { videos: [], images: [], audios: [] };\r\n    }\r\n  }\r\n\r\n  async deleteFile(id) {\r\n    try {\r\n      const file = this.memoryStorage.get(id.toString());\r\n      if (file && file.url) {\r\n        URL.revokeObjectURL(file.url);\r\n      }\r\n\r\n      this.memoryStorage.delete(id.toString());\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Delete error:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getStorageInfo() {\r\n    try {\r\n      const files = await this.getAllFiles();\r\n      const totalSize = [\r\n        ...files.videos,\r\n        ...files.images,\r\n        ...files.audios,\r\n      ].reduce((sum, file) => sum + file.size, 0);\r\n\r\n      return {\r\n        usage: {\r\n          videos: files.videos.length,\r\n          images: files.images.length,\r\n          audios: files.audios.length,\r\n          totalSize: totalSize,\r\n          totalSizeMB: Math.round(totalSize / (1024 * 1024)),\r\n        },\r\n        limits: this.limits,\r\n        files: files,\r\n        mode: this.fallbackMode ? \"fallback\" : \"indexeddb\",\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Get storage info error:\", error);\r\n      return {\r\n        usage: {\r\n          videos: 0,\r\n          images: 0,\r\n          audios: 0,\r\n          totalSize: 0,\r\n          totalSizeMB: 0,\r\n        },\r\n        limits: this.limits,\r\n        files: { videos: [], images: [], audios: [] },\r\n        mode: this.fallbackMode ? \"fallback\" : \"indexeddb\",\r\n      };\r\n    }\r\n  }\r\n\r\n  async getVideoDuration(file) {\r\n    return new Promise((resolve) => {\r\n      try {\r\n        const video = document.createElement(\"video\");\r\n        video.preload = \"metadata\";\r\n\r\n        const timeout = setTimeout(() => {\r\n          video.src = \"\";\r\n          resolve(10);\r\n        }, 5000);\r\n\r\n        video.onloadedmetadata = () => {\r\n          clearTimeout(timeout);\r\n          URL.revokeObjectURL(video.src);\r\n          resolve(video.duration || 10);\r\n        };\r\n\r\n        video.onerror = () => {\r\n          clearTimeout(timeout);\r\n          resolve(10);\r\n        };\r\n\r\n        video.src = URL.createObjectURL(file);\r\n      } catch (error) {\r\n        console.warn(\"Video duration error:\", error);\r\n        resolve(10);\r\n      }\r\n    });\r\n  }\r\n\r\n  async getAudioDuration(file) {\r\n    return new Promise((resolve) => {\r\n      try {\r\n        const audio = document.createElement(\"audio\");\r\n        audio.preload = \"metadata\";\r\n\r\n        const timeout = setTimeout(() => {\r\n          audio.src = \"\";\r\n          resolve(10);\r\n        }, 5000);\r\n\r\n        audio.onloadedmetadata = () => {\r\n          clearTimeout(timeout);\r\n          URL.revokeObjectURL(audio.src);\r\n          resolve(audio.duration || 10);\r\n        };\r\n\r\n        audio.onerror = () => {\r\n          clearTimeout(timeout);\r\n          resolve(10);\r\n        };\r\n\r\n        audio.src = URL.createObjectURL(file);\r\n      } catch (error) {\r\n        console.warn(\"Audio duration error:\", error);\r\n        resolve(10);\r\n      }\r\n    });\r\n  }\r\n\r\n  async getImageDimensions(file) {\r\n    return new Promise((resolve) => {\r\n      try {\r\n        const img = new Image();\r\n\r\n        const timeout = setTimeout(() => {\r\n          img.src = \"\";\r\n          resolve({ width: 0, height: 0 });\r\n        }, 5000);\r\n\r\n        img.onload = () => {\r\n          clearTimeout(timeout);\r\n          URL.revokeObjectURL(img.src);\r\n          resolve({ width: img.width, height: img.height });\r\n        };\r\n\r\n        img.onerror = () => {\r\n          clearTimeout(timeout);\r\n          resolve({ width: 0, height: 0 });\r\n        };\r\n\r\n        img.src = URL.createObjectURL(file);\r\n      } catch (error) {\r\n        console.warn(\"Image dimensions error:\", error);\r\n        resolve({ width: 0, height: 0 });\r\n      }\r\n    });\r\n  }\r\n\r\n  async canUpload(type) {\r\n    try {\r\n      const files = await this.getFilesByType(type);\r\n      return files.length < this.limits[type];\r\n    } catch (error) {\r\n      console.error(\"Can upload check error:\", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async getRemainingSpace(type) {\r\n    try {\r\n      const files = await this.getFilesByType(type);\r\n      return this.limits[type] - files.length;\r\n    } catch (error) {\r\n      console.error(\"Get remaining space error:\", error);\r\n      return 0;\r\n    }\r\n  }\r\n}\r\n\r\n// Создаем экземпляр MediaStorage\r\nconst mediaStorage = new MediaStorage();\r\n\r\nexport const MediaLibrary = ({\r\n  mediaLibrary,\r\n  setMediaLibrary,\r\n  activeTab,\r\n  setActiveTab,\r\n  draggedItem,\r\n  setDraggedItem,\r\n  setIsDragging,\r\n  addToTimeline,\r\n  formatTime,\r\n}) => {\r\n  const fileInputRef = useRef(null);\r\n  const audioInputRef = useRef(null);\r\n  const imageInputRef = useRef(null);\r\n  \r\n  // Состояния для обработки загрузки и ошибок\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [storageInfo, setStorageInfo] = useState(null);\r\n  const [compressionProgress, setCompressionProgress] = useState(0);\r\n  const [isCompressing, setIsCompressing] = useState(false);\r\n\r\n  // Инициализация MediaStorage при монтировании компонента\r\n  useEffect(() => {\r\n    const initializeStorage = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        await mediaStorage.init();\r\n        await loadFilesFromStorage();\r\n        await updateStorageInfo();\r\n      } catch (error) {\r\n        console.error('Failed to initialize MediaStorage:', error);\r\n        setError('Failed to initialize storage');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeStorage();\r\n  }, []);\r\n\r\n  // Загрузка файлов из MediaStorage\r\n  const loadFilesFromStorage = async () => {\r\n    try {\r\n      const files = await mediaStorage.getAllFiles();\r\n      \r\n      // Пересоздаем URL для всех файлов из blob объектов\r\n      const processFiles = (fileArray) => {\r\n        return fileArray.map(file => {\r\n          // Если есть blob, пересоздаем URL\r\n          if (file.blob) {\r\n            // Освобождаем старый URL если он есть\r\n            if (file.url) {\r\n              URL.revokeObjectURL(file.url);\r\n            }\r\n            // Создаем новый URL из blob\r\n            file.url = URL.createObjectURL(file.blob);\r\n          }\r\n          return file;\r\n        });\r\n      };\r\n\r\n      setMediaLibrary({\r\n        videos: processFiles(files.videos || []),\r\n        audios: processFiles(files.audios || []),\r\n        images: processFiles(files.images || [])\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to load files from storage:', error);\r\n      setError('Failed to load saved files');\r\n    }\r\n  };\r\n\r\n  // Обновление информации о хранилище\r\n  const updateStorageInfo = async () => {\r\n    try {\r\n      const info = await mediaStorage.getStorageInfo();\r\n      setStorageInfo(info);\r\n    } catch (error) {\r\n      console.error('Failed to get storage info:', error);\r\n    }\r\n  };\r\n\r\n  // Форматирование размера файла\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  // Проверка размера файла\r\n  const checkFileSize = (file, type) => {\r\n    const limit = 100 * 1024 * 1024; // 100MB\r\n    if (file.size > limit) {\r\n      return {\r\n        valid: false,\r\n        message: `File \"${file.name}\" is ${formatFileSize(file.size)}. Maximum allowed: ${formatFileSize(limit)}`,\r\n        size: file.size,\r\n        limit: limit\r\n      };\r\n    }\r\n    return { valid: true };\r\n  };\r\n\r\n  // Сжатие видео файла\r\n  const compressVideo = async (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      const video = document.createElement('video');\r\n      \r\n      video.onloadeddata = () => {\r\n        // Уменьшаем разрешение для сжатия\r\n        const maxWidth = 1280;\r\n        const maxHeight = 720;\r\n        let { videoWidth, videoHeight } = video;\r\n        \r\n        if (videoWidth > maxWidth || videoHeight > maxHeight) {\r\n          const ratio = Math.min(maxWidth / videoWidth, maxHeight / videoHeight);\r\n          videoWidth *= ratio;\r\n          videoHeight *= ratio;\r\n        }\r\n        \r\n        canvas.width = videoWidth;\r\n        canvas.height = videoHeight;\r\n        \r\n        // Создаем MediaRecorder для сжатия\r\n        const stream = canvas.captureStream(30); // 30 FPS\r\n        const options = {\r\n          mimeType: 'video/webm;codecs=vp9',\r\n          videoBitsPerSecond: 2000000 // 2 Mbps\r\n        };\r\n        \r\n        let mediaRecorder;\r\n        try {\r\n          mediaRecorder = new MediaRecorder(stream, options);\r\n        } catch (e) {\r\n          // Fallback если VP9 не поддерживается\r\n          mediaRecorder = new MediaRecorder(stream, {\r\n            mimeType: 'video/webm',\r\n            videoBitsPerSecond: 2000000\r\n          });\r\n        }\r\n        \r\n        const chunks = [];\r\n        mediaRecorder.ondataavailable = (e) => chunks.push(e.data);\r\n        \r\n        mediaRecorder.onstop = () => {\r\n          const compressedBlob = new Blob(chunks, { type: 'video/webm' });\r\n          const compressedFile = new File([compressedBlob], \r\n            file.name.replace(/\\.[^/.]+$/, '_compressed.webm'), \r\n            { type: 'video/webm' }\r\n          );\r\n          resolve(compressedFile);\r\n        };\r\n        \r\n        let currentTime = 0;\r\n        const duration = video.duration;\r\n        \r\n        const drawFrame = () => {\r\n          if (currentTime < duration) {\r\n            video.currentTime = currentTime;\r\n            ctx.drawImage(video, 0, 0, videoWidth, videoHeight);\r\n            currentTime += 1/30; // 30 FPS\r\n            setCompressionProgress((currentTime / duration) * 100);\r\n            requestAnimationFrame(drawFrame);\r\n          } else {\r\n            mediaRecorder.stop();\r\n          }\r\n        };\r\n        \r\n        mediaRecorder.start();\r\n        drawFrame();\r\n      };\r\n      \r\n      video.onerror = () => reject(new Error('Failed to load video for compression'));\r\n      video.src = URL.createObjectURL(file);\r\n    });\r\n  };\r\n\r\n  // Универсальная обработка загрузки файлов\r\n  const handleFileUpload = async (files, type) => {\r\n    setError(null);\r\n    const fileArray = Array.from(files);\r\n    \r\n    // Проверяем размеры всех файлов\r\n    const oversizedFiles = [];\r\n    const validFiles = [];\r\n    \r\n    fileArray.forEach(file => {\r\n      const sizeCheck = checkFileSize(file, type);\r\n      if (sizeCheck.valid) {\r\n        validFiles.push(file);\r\n      } else {\r\n        oversizedFiles.push(sizeCheck);\r\n      }\r\n    });\r\n    \r\n    // Показываем ошибки для слишком больших файлов\r\n    if (oversizedFiles.length > 0) {\r\n      const errorMessages = oversizedFiles.map(f => f.message).join('\\n');\r\n      \r\n      // Для видео предлагаем сжатие\r\n      if (type === 'videos' && oversizedFiles.length === 1) {\r\n        const oversizedFile = oversizedFiles[0];\r\n        const shouldCompress = window.confirm(\r\n          `${oversizedFile.message}\\n\\nWould you like to compress this video to reduce file size?`\r\n        );\r\n        \r\n        if (shouldCompress) {\r\n          // Находим оригинальный файл\r\n          const originalFile = fileArray.find(f => f.name === oversizedFile.message.match(/\"([^\"]+)\"/)[1]);\r\n          if (originalFile) {\r\n            try {\r\n              setIsCompressing(true);\r\n              setCompressionProgress(0);\r\n              \r\n              const compressedFile = await compressVideo(originalFile);\r\n              console.log(`Compressed from ${formatFileSize(originalFile.size)} to ${formatFileSize(compressedFile.size)}`);\r\n              \r\n              // Проверяем размер сжатого файла\r\n              const compressedSizeCheck = checkFileSize(compressedFile, type);\r\n              if (compressedSizeCheck.valid) {\r\n                validFiles.push(compressedFile);\r\n                setError(null); // Убираем ошибку, если сжатие помогло\r\n              } else {\r\n                setError(`Even after compression, the file is still too large: ${formatFileSize(compressedFile.size)}`);\r\n              }\r\n            } catch (compressionError) {\r\n              console.error('Compression failed:', compressionError);\r\n              setError(`Compression failed: ${compressionError.message}`);\r\n            } finally {\r\n              setIsCompressing(false);\r\n              setCompressionProgress(0);\r\n            }\r\n          }\r\n        } else {\r\n          setError(errorMessages);\r\n        }\r\n      } else {\r\n        setError(`${oversizedFiles.length} file(s) exceeded size limit:\\n${errorMessages}`);\r\n      }\r\n    }\r\n    \r\n    // Обрабатываем валидные файлы\r\n    for (const file of validFiles) {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        // Проверяем лимиты хранилища\r\n        const canUpload = await mediaStorage.canUpload(type);\r\n        if (!canUpload) {\r\n          const remaining = await mediaStorage.getRemainingSpace(type);\r\n          setError(`Storage limit reached. You can upload ${remaining} more ${type}.`);\r\n          continue;\r\n        }\r\n\r\n        // Сохраняем файл в MediaStorage\r\n        const savedFile = await mediaStorage.saveFile(file, type);\r\n        \r\n        // Обновляем состояние компонента\r\n        setMediaLibrary((prev) => ({\r\n          ...prev,\r\n          [type]: [...prev[type], savedFile],\r\n        }));\r\n\r\n      } catch (error) {\r\n        console.error(`Failed to save ${file.name}:`, error);\r\n        setError(`Failed to save ${file.name}: ${error.message}`);\r\n      }\r\n    }\r\n    \r\n    setIsLoading(false);\r\n    await updateStorageInfo();\r\n  };\r\n\r\n  // Обработка загрузки видео\r\n  const handleVideoUpload = async (event) => {\r\n    const files = event.target.files ? Array.from(event.target.files) : [];\r\n    await handleFileUpload(files, 'videos');\r\n    \r\n    // Очищаем input\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  // Обработка загрузки аудио\r\n  const handleAudioUpload = async (event) => {\r\n    const files = event.target.files ? Array.from(event.target.files) : [];\r\n    await handleFileUpload(files, 'audios');\r\n    \r\n    if (audioInputRef.current) {\r\n      audioInputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  // Обработка загрузки изображений\r\n  const handleImageUpload = async (event) => {\r\n    const files = event.target.files ? Array.from(event.target.files) : [];\r\n    await handleFileUpload(files, 'images');\r\n    \r\n    if (imageInputRef.current) {\r\n      imageInputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  // Удаление из библиотеки\r\n  const removeFromLibrary = async (itemId, type) => {\r\n    try {\r\n      setError(null);\r\n      \r\n      // Удаляем из MediaStorage\r\n      await mediaStorage.deleteFile(itemId);\r\n      \r\n      // Обновляем состояние компонента\r\n      setMediaLibrary((prev) => ({\r\n        ...prev,\r\n        [type]: prev[type].filter((item) => item.id !== itemId),\r\n      }));\r\n      \r\n      await updateStorageInfo();\r\n    } catch (error) {\r\n      console.error('Failed to remove file:', error);\r\n      setError('Failed to remove file');\r\n    }\r\n  };\r\n\r\n  const handleDragStart = (e, mediaItem) => {\r\n    setDraggedItem(mediaItem);\r\n    setIsDragging(true);\r\n    e.dataTransfer.effectAllowed = \"copy\";\r\n    e.dataTransfer.setData(\"text/plain\", \"\");\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    setDraggedItem(null);\r\n    setIsDragging(false);\r\n  };\r\n\r\n  // Очистка ошибки\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  // Получить текущий тип файлов для отображения лимитов\r\n  const getCurrentTypeKey = () => {\r\n    return activeTab === 'videos' ? 'videos' : \r\n           activeTab === 'audios' ? 'audios' : 'images';\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-80 min-w-72 max-w-80 bg-white border-2 border-blue-200 flex flex-col rounded-2xl shadow-lg overflow-hidden flex-shrink-0\">\r\n      <div className=\"bg-blue-50 px-4 py-3 border-b border-blue-100\">\r\n        <h3 className=\"font-bold text-blue-800 flex items-center\">\r\n          <Upload size={18} className=\"mr-2\" />\r\n          Enhanced Media Library\r\n          {(isLoading || isCompressing) && <Loader2 size={16} className=\"ml-2 animate-spin\" />}\r\n        </h3>\r\n        \r\n        {/* Информация о хранилище */}\r\n        {storageInfo && (\r\n          <div className=\"text-xs text-blue-600 mt-1\">\r\n            {storageInfo.usage[getCurrentTypeKey()]}/{storageInfo.limits[getCurrentTypeKey()]} files\r\n            {storageInfo.mode === 'fallback' && ' (demo mode)'}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Прогресс сжатия */}\r\n      {isCompressing && (\r\n        <div className=\"bg-blue-50 px-4 py-2 border-b border-blue-100\">\r\n          <div className=\"flex items-center text-sm text-blue-700\">\r\n            <Zap size={14} className=\"mr-2\" />\r\n            Compressing video... {Math.round(compressionProgress)}%\r\n          </div>\r\n          <div className=\"w-full bg-blue-200 rounded-full h-2 mt-1\">\r\n            <div \r\n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n              style={{ width: `${compressionProgress}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Отображение ошибок */}\r\n      {error && (\r\n        <div className=\"bg-red-50 border-l-4 border-red-400 p-3 mx-4 mt-2 rounded\">\r\n          <div className=\"flex items-start\">\r\n            <AlertTriangle size={16} className=\"text-red-400 mr-2 mt-0.5 flex-shrink-0\" />\r\n            <div className=\"flex-1\">\r\n              <pre className=\"text-sm text-red-700 whitespace-pre-wrap\">{error}</pre>\r\n            </div>\r\n            <button\r\n              onClick={clearError}\r\n              className=\"text-red-400 hover:text-red-600 ml-2\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"p-4 pb-0\">\r\n        <div className=\"flex bg-gray-100 rounded-xl p-1\">\r\n          {[\r\n            { id: \"videos\", name: \"Videos\", icon: Video },\r\n            { id: \"audios\", name: \"Audio\", icon: Music },\r\n            { id: \"images\", name: \"Images\", icon: Image },\r\n          ].map((tab) => {\r\n            const IconComponent = tab.icon;\r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`flex-1 p-3 text-sm font-medium transition-all duration-200 rounded-lg ${\r\n                  activeTab === tab.id\r\n                    ? \"bg-white text-blue-600 shadow-sm\"\r\n                    : \"text-gray-600 hover:text-gray-800\"\r\n                }`}\r\n              >\r\n                <IconComponent size={16} className=\"mr-2 inline\" />\r\n                {tab.name}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"p-4\">\r\n        <button\r\n          onClick={() => {\r\n            if (isLoading || isCompressing) return;\r\n            if (activeTab === \"videos\") fileInputRef.current?.click();\r\n            else if (activeTab === \"audios\") audioInputRef.current?.click();\r\n            else imageInputRef.current?.click();\r\n          }}\r\n          disabled={isLoading || isCompressing}\r\n          className={`w-full p-6 border-2 border-dashed border-gray-300 rounded-2xl hover:border-blue-400 hover:bg-blue-50/50 transition-all duration-200 text-center group ${\r\n            (isLoading || isCompressing) ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n        >\r\n          <div className=\"w-12 h-12 bg-gray-100 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:bg-blue-100 transition-colors\">\r\n            {(isLoading || isCompressing) ? (\r\n              <Loader2 size={20} className=\"text-blue-500 animate-spin\" />\r\n            ) : (\r\n              <Upload\r\n                size={20}\r\n                className=\"text-gray-500 group-hover:text-blue-500\"\r\n              />\r\n            )}\r\n          </div>\r\n          <span className=\"text-sm font-medium text-gray-700 group-hover:text-blue-600\">\r\n            {isCompressing ? 'Compressing...' : \r\n             isLoading ? 'Uploading...' : \r\n             `Upload ${\r\n              activeTab === \"videos\"\r\n                ? \"Video\"\r\n                : activeTab === \"audios\"\r\n                ? \"Audio\"\r\n                : \"Images\"\r\n            }`}\r\n          </span>\r\n          <p className=\"text-xs text-gray-500 mt-1\">\r\n            {activeTab === \"videos\"\r\n              ? \"MP4, AVI, MOV up to 100MB (compression available)\"\r\n              : activeTab === \"audios\"\r\n              ? \"MP3, WAV, M4A up to 100MB\"\r\n              : \"JPG, PNG, GIF up to 100MB\"}\r\n          </p>\r\n        </button>\r\n      </div>\r\n\r\n      <input\r\n        ref={fileInputRef}\r\n        type=\"file\"\r\n        accept=\"video/*\"\r\n        multiple\r\n        onChange={handleVideoUpload}\r\n        className=\"hidden\"\r\n        disabled={isLoading || isCompressing}\r\n      />\r\n      <input\r\n        ref={audioInputRef}\r\n        type=\"file\"\r\n        accept=\"audio/*\"\r\n        multiple\r\n        onChange={handleAudioUpload}\r\n        className=\"hidden\"\r\n        disabled={isLoading || isCompressing}\r\n      />\r\n      <input\r\n        ref={imageInputRef}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        multiple\r\n        onChange={handleImageUpload}\r\n        className=\"hidden\"\r\n        disabled={isLoading || isCompressing}\r\n      />\r\n\r\n      <div className=\"flex-1 overflow-y-auto px-4 pb-4\">\r\n        <div className=\"space-y-2\">\r\n          {mediaLibrary[activeTab].map((item) => (\r\n            <div\r\n              key={item.id}\r\n              draggable=\"true\"\r\n              onDragStart={(e) => handleDragStart(e, item)}\r\n              onDragEnd={handleDragEnd}\r\n              className={`flex items-center p-3 bg-gray-50 rounded-xl hover:bg-gray-100 hover:shadow-sm transition-all duration-200 cursor-grab active:cursor-grabbing group ${\r\n                draggedItem?.id === item.id ? \"opacity-50\" : \"\"\r\n              }`}\r\n              onClick={() => addToTimeline(item)}\r\n            >\r\n              <div className=\"w-12 h-12 bg-white rounded-xl flex items-center justify-center mr-3 shadow-sm group-hover:shadow\">\r\n                {activeTab === \"videos\" && (\r\n                  <Video size={20} className=\"text-blue-500\" />\r\n                )}\r\n                {activeTab === \"audios\" && (\r\n                  <Music size={20} className=\"text-green-500\" />\r\n                )}\r\n                {activeTab === \"images\" && (\r\n                  <Image size={20} className=\"text-purple-500\" />\r\n                )}\r\n              </div>\r\n              <div className=\"flex-1 min-w-0\">\r\n                <p className=\"text-sm font-medium text-gray-900 truncate\">\r\n                  {item.name}\r\n                </p>\r\n                <div className=\"flex items-center text-xs text-gray-500 space-x-2\">\r\n                  <span>\r\n                    {activeTab === \"images\"\r\n                      ? `${item.width || 0}×${item.height || 0}`\r\n                      : formatTime(item.duration || 0)}\r\n                  </span>\r\n                  {item.size && (\r\n                    <>\r\n                      <span>•</span>\r\n                      <span>{formatFileSize(item.size)}</span>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  removeFromLibrary(item.id, activeTab);\r\n                }}\r\n                className=\"opacity-0 group-hover:opacity-100 p-2 text-red-400 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all duration-200\"\r\n              >\r\n                <Trash2 size={14} />\r\n              </button>\r\n            </div>\r\n          ))}\r\n          {mediaLibrary[activeTab].length === 0 && !isLoading && !isCompressing && (\r\n            <div className=\"text-center py-8\">\r\n              <div className=\"w-16 h-16 bg-gray-100 rounded-2xl flex items-center justify-center mx-auto mb-3\">\r\n                {activeTab === \"videos\" && (\r\n                  <Video size={24} className=\"text-gray-400\" />\r\n                )}\r\n                {activeTab === \"audios\" && (\r\n                  <Music size={24} className=\"text-gray-400\" />\r\n                )}\r\n                {activeTab === \"images\" && (\r\n                  <Image size={24} className=\"text-gray-400\" />\r\n                )}\r\n              </div>\r\n              <p className=\"text-sm text-gray-500\">\r\n                No {activeTab} uploaded yet\r\n              </p>\r\n              <p className=\"text-xs text-gray-400 mt-1\">\r\n                Click upload button above\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
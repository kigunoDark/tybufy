{"ast":null,"code":"var _jsxFileName = \"C:\\\\Scriptify\\\\ai-content-studio\\\\frontend\\\\src\\\\components\\\\VideoExportModal.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { X, Download, Check, AlertCircle, FolderOpen, ChevronDown, ChevronUp } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const VideoExportModal = ({\n  isOpen,\n  onClose,\n  timelineItems = [],\n  tracks,\n  videoDuration\n}) => {\n  _s();\n  const [exportSettings, setExportSettings] = useState({\n    resolution: \"1920x1080\",\n    fps: 30,\n    bitrate: 5000,\n    format: \"mp4\",\n    quality: \"high\",\n    saveDirectory: null,\n    filename: `video_${Date.now()}`\n  });\n  const [isExporting, setIsExporting] = useState(false);\n  const [exportProgress, setExportProgress] = useState(0);\n  const [exportStatus, setExportStatus] = useState(\"idle\");\n  const [estimatedTime, setEstimatedTime] = useState(null);\n  const [showAllElements, setShowAllElements] = useState(false);\n\n  // Предустановки для быстрого выбора\n  const presets = [{\n    name: \"YouTube 1080p\",\n    resolution: \"1920x1080\",\n    fps: 30,\n    quality: \"high\",\n    format: \"mp4\"\n  }, {\n    name: \"Instagram\",\n    resolution: \"1080x1080\",\n    fps: 30,\n    quality: \"medium\",\n    format: \"mp4\"\n  }, {\n    name: \"TikTok\",\n    resolution: \"1080x1920\",\n    fps: 30,\n    quality: \"medium\",\n    format: \"mp4\"\n  }, {\n    name: \"Web\",\n    resolution: \"1280x720\",\n    fps: 30,\n    quality: \"medium\",\n    format: \"webm\"\n  }];\n  const qualityOptions = [{\n    value: \"low\",\n    label: \"Низкое\",\n    bitrate: 1000\n  }, {\n    value: \"medium\",\n    label: \"Среднее\",\n    bitrate: 3000\n  }, {\n    value: \"high\",\n    label: \"Высокое\",\n    bitrate: 5000\n  }, {\n    value: \"ultra\",\n    label: \"Ультра\",\n    bitrate: 10000\n  }];\n  const formatOptions = [{\n    value: \"mp4\",\n    label: \"MP4\"\n  }, {\n    value: \"webm\",\n    label: \"WebM\"\n  }, {\n    value: \"mov\",\n    label: \"MOV\"\n  }];\n\n  // Быстрый расчет времени экспорта\n  useEffect(() => {\n    if (videoDuration && timelineItems !== null && timelineItems !== void 0 && timelineItems.length) {\n      const complexity = timelineItems.filter(item => item.trackType === \"overlay\").length;\n      const baseTime = Math.max(2, videoDuration * 0.1);\n      const complexityMultiplier = 1 + complexity * 0.1;\n      setEstimatedTime(Math.ceil(baseTime * complexityMultiplier));\n    }\n  }, [videoDuration, timelineItems]);\n\n  // Синхронизация битрейта с качеством\n  useEffect(() => {\n    const quality = qualityOptions.find(q => q.value === exportSettings.quality);\n    if (quality && quality.bitrate !== exportSettings.bitrate) {\n      setExportSettings(prev => ({\n        ...prev,\n        bitrate: quality.bitrate\n      }));\n    }\n  }, [exportSettings.quality]);\n\n  // Выбор папки для сохранения\n  const handleSelectDirectory = async () => {\n    try {\n      if ('showDirectoryPicker' in window) {\n        const directoryHandle = await window.showDirectoryPicker();\n        setExportSettings(prev => ({\n          ...prev,\n          saveDirectory: directoryHandle\n        }));\n      } else {\n        alert('Ваш браузер не поддерживает выбор папки. Файл будет сохранен в папку загрузок.');\n      }\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Ошибка выбора папки:', error);\n      }\n    }\n  };\n\n  // Применение пресета\n  const applyPreset = preset => {\n    setExportSettings(prev => ({\n      ...prev,\n      ...preset\n    }));\n  };\n  const getFileSize = () => {\n    if (!videoDuration) return \"~\";\n    const sizeInMB = exportSettings.bitrate * videoDuration * 1000 / (8 * 1024 * 1024);\n    return sizeInMB < 1024 ? `~${sizeInMB.toFixed(0)} МБ` : `~${(sizeInMB / 1024).toFixed(1)} ГБ`;\n  };\n  const handleExport = async () => {\n    if (!timelineItems || timelineItems.length === 0) {\n      alert('Нет элементов для экспорта!');\n      return;\n    }\n    setIsExporting(true);\n    setExportStatus(\"processing\");\n    setExportProgress(0);\n    try {\n      const videoExporter = new VideoExporter({\n        timelineItems,\n        tracks,\n        videoDuration,\n        settings: exportSettings,\n        onProgress: setExportProgress\n      });\n      const exportedVideoBlob = await videoExporter.render();\n      await downloadVideo(exportedVideoBlob);\n      setExportStatus(\"success\");\n      setTimeout(() => {\n        setExportStatus(\"idle\");\n        setExportProgress(0);\n      }, 3000);\n    } catch (error) {\n      console.error(\"❌ ОШИБКА ЭКСПОРТА:\", error);\n      alert(`Ошибка экспорта: ${error.message}`);\n      setExportStatus(\"error\");\n    } finally {\n      setIsExporting(false);\n    }\n  };\n  const downloadVideo = async blob => {\n    const filename = `${exportSettings.filename}.${exportSettings.format}`;\n    try {\n      if (exportSettings.saveDirectory && 'showDirectoryPicker' in window) {\n        const fileHandle = await exportSettings.saveDirectory.getFileHandle(filename, {\n          create: true\n        });\n        const writable = await fileHandle.createWritable();\n        await writable.write(blob);\n        await writable.close();\n      } else {\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      console.error('Ошибка сохранения:', error);\n      throw error;\n    }\n  };\n  const handleClose = () => {\n    if (!isExporting) {\n      setExportStatus(\"idle\");\n      setExportProgress(0);\n      onClose();\n    }\n  };\n  if (!isOpen) return null;\n\n  // Логика отображения элементов\n  const hasTimelineItems = timelineItems && timelineItems.length > 0;\n  const elementsToShow = hasTimelineItems ? showAllElements ? timelineItems : timelineItems.slice(0, 3) : [];\n  const hasMoreElements = hasTimelineItems && timelineItems.length > 3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-2xl shadow-xl max-w-lg w-full max-h-[90vh] overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-4 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-800 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Download, {\n            size: 20,\n            className: \"mr-2 text-blue-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442 \\u0432\\u0438\\u0434\\u0435\\u043E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          className: \"p-1 hover:bg-gray-100 rounded-full transition-colors\",\n          disabled: isExporting,\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 space-y-4 max-h-[calc(90vh-120px)] overflow-y-auto\",\n        children: [exportStatus !== \"idle\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-3 rounded-lg ${exportStatus === \"processing\" ? \"bg-blue-50 border border-blue-200\" : exportStatus === \"success\" ? \"bg-green-50 border border-green-200\" : \"bg-red-50 border border-red-200\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [exportStatus === \"processing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between text-sm text-blue-700 mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [exportProgress, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-full bg-blue-200 rounded-full h-1.5\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-blue-600 h-1.5 rounded-full transition-all duration-300\",\n                    style: {\n                      width: `${exportProgress}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), exportStatus === \"success\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Check, {\n                size: 16,\n                className: \"text-green-600 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-green-700 text-sm font-medium\",\n                children: \"\\u0413\\u043E\\u0442\\u043E\\u0432\\u043E!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), exportStatus === \"error\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                size: 16,\n                className: \"text-red-600 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-red-700 text-sm font-medium\",\n                children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u044D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"\\u0411\\u044B\\u0441\\u0442\\u0440\\u044B\\u0435 \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-2\",\n            children: presets.map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => applyPreset(preset),\n              className: \"p-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\",\n              disabled: isExporting,\n              children: preset.name\n            }, preset.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-700 mb-1\",\n              children: \"\\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: exportSettings.resolution,\n              onChange: e => setExportSettings(prev => ({\n                ...prev,\n                resolution: e.target.value\n              })),\n              className: \"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n              disabled: isExporting,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3840x2160\",\n                children: \"4K\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1920x1080\",\n                children: \"1080p\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1280x720\",\n                children: \"720p\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"854x480\",\n                children: \"480p\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1080x1920\",\n                children: \"9:16 (TikTok)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1080x1080\",\n                children: \"1:1 (Instagram)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-700 mb-1\",\n              children: \"FPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: exportSettings.fps,\n              onChange: e => setExportSettings(prev => ({\n                ...prev,\n                fps: parseInt(e.target.value)\n              })),\n              className: \"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n              disabled: isExporting,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"24\",\n                children: \"24\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"30\",\n                children: \"30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"60\",\n                children: \"60\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-700 mb-1\",\n              children: \"\\u041A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: exportSettings.quality,\n              onChange: e => setExportSettings(prev => ({\n                ...prev,\n                quality: e.target.value\n              })),\n              className: \"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n              disabled: isExporting,\n              children: qualityOptions.map(quality => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: quality.value,\n                children: quality.label\n              }, quality.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-700 mb-1\",\n              children: \"\\u0424\\u043E\\u0440\\u043C\\u0430\\u0442\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: exportSettings.format,\n              onChange: e => setExportSettings(prev => ({\n                ...prev,\n                format: e.target.value\n              })),\n              className: \"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n              disabled: isExporting,\n              children: formatOptions.map(format => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: format.value,\n                children: format.label\n              }, format.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-700 mb-1\",\n              children: \"\\u0418\\u043C\\u044F \\u0444\\u0430\\u0439\\u043B\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: exportSettings.filename,\n              onChange: e => setExportSettings(prev => ({\n                ...prev,\n                filename: e.target.value\n              })),\n              className: \"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n              disabled: isExporting,\n              placeholder: \"\\u0418\\u043C\\u044F \\u0444\\u0430\\u0439\\u043B\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-700 mb-1\",\n              children: \"\\u041F\\u0430\\u043F\\u043A\\u0430 \\u0434\\u043B\\u044F \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSelectDirectory,\n              className: \"w-full p-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors flex items-center justify-between\",\n              disabled: isExporting,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: exportSettings.saveDirectory ? exportSettings.saveDirectory.name : 'Выберите папку'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FolderOpen, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 rounded-lg p-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-2 text-xs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"\\u0414\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 font-medium\",\n                children: [Math.round(videoDuration), \"\\u0441\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 font-medium\",\n                children: getFileSize()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"\\u0411\\u0438\\u0442\\u0440\\u0435\\u0439\\u0442:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 font-medium\",\n                children: [exportSettings.bitrate, \" kbps\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"\\u0412\\u0440\\u0435\\u043C\\u044F:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 font-medium\",\n                children: [\"~\", estimatedTime, \"\\u0441\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 rounded-lg p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs font-medium text-gray-800\",\n              children: \"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u044B \\u0434\\u043B\\u044F \\u044D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-600\",\n              children: hasTimelineItems ? timelineItems.length : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), hasTimelineItems ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-1\",\n            children: [elementsToShow.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between text-xs\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-700 truncate\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-1 py-0.5 rounded text-xs ${item.trackType === \"main\" ? \"bg-blue-100 text-blue-700\" : item.trackType === \"audio\" ? \"bg-green-100 text-green-700\" : \"bg-purple-100 text-purple-700\"}`,\n                children: item.trackType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 19\n            }, this)), hasMoreElements && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowAllElements(!showAllElements),\n              className: \"w-full text-xs text-blue-600 hover:text-blue-800 flex items-center justify-center py-1 transition-colors\",\n              children: showAllElements ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \", /*#__PURE__*/_jsxDEV(ChevronUp, {\n                  size: 12,\n                  className: \"ml-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"+\", timelineItems.length - 3, \" \\u0435\\u0449\\u0451 \", /*#__PURE__*/_jsxDEV(ChevronDown, {\n                  size: 12,\n                  className: \"ml-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500 text-center py-2\",\n            children: \"\\u041D\\u0435\\u0442 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432 \\u0434\\u043B\\u044F \\u044D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end space-x-3 p-4 border-t border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose,\n          className: \"px-4 py-2 text-sm text-gray-600 hover:text-gray-800 transition-colors\",\n          disabled: isExporting,\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExport,\n          disabled: isExporting || !hasTimelineItems,\n          className: `px-4 py-2 text-sm rounded-lg font-medium transition-all flex items-center ${isExporting || !hasTimelineItems ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" : \"bg-blue-600 text-white hover:bg-blue-700\"}`,\n          children: isExporting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-3 w-3 border-b-2 border-white mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this), \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              size: 14,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this), \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n\n// Полностью переписанный VideoExporter класс\n_s(VideoExportModal, \"o9mGQFTi1ZqvD/sVLiPqj9ylZaw=\");\n_c = VideoExportModal;\nclass VideoExporter {\n  constructor({\n    timelineItems,\n    tracks,\n    videoDuration,\n    settings,\n    onProgress\n  }) {\n    this.timelineItems = timelineItems;\n    this.tracks = tracks;\n    this.videoDuration = videoDuration;\n    this.settings = settings;\n    this.onProgress = onProgress;\n\n    // Создаем основной canvas для композиции\n    this.canvas = document.createElement(\"canvas\");\n    this.ctx = this.canvas.getContext(\"2d\", {\n      alpha: false\n    });\n    const [width, height] = settings.resolution.split(\"x\").map(Number);\n    this.canvas.width = width;\n    this.canvas.height = height;\n\n    // Подготовленные элементы\n    this.loadedMedia = new Map();\n    this.mediaRecorder = null;\n    this.chunks = [];\n  }\n  async render() {\n    try {\n      var _this$onProgress;\n      console.log('🎬 СТАРТ ЭКСПОРТА ВИДЕО');\n      console.log('📊 Параметры:', {\n        элементов: this.timelineItems.length,\n        длительность: this.videoDuration,\n        разрешение: this.settings.resolution,\n        fps: this.settings.fps\n      });\n\n      // Подготавливаем все элементы\n      await this.prepareAllElements();\n      (_this$onProgress = this.onProgress) === null || _this$onProgress === void 0 ? void 0 : _this$onProgress.call(this, 30);\n\n      // Создаем видео поток с фиксированным FPS (не 0!)\n      const stream = this.canvas.captureStream(this.settings.fps);\n      console.log('🎥 Canvas stream создан с FPS:', this.settings.fps);\n\n      // Настраиваем MediaRecorder\n      const mimeType = this.getSupportedMimeType();\n      const options = {\n        mimeType: mimeType,\n        videoBitsPerSecond: this.settings.bitrate * 1000\n      };\n      console.log('⚙️ Опции MediaRecorder:', options);\n      this.mediaRecorder = new MediaRecorder(stream, options);\n      this.chunks = [];\n      this.mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          this.chunks.push(event.data);\n          console.log(`📦 Получен чанк: ${(event.data.size / 1024).toFixed(1)} KB`);\n        }\n      };\n      return new Promise((resolve, reject) => {\n        this.mediaRecorder.onstop = () => {\n          console.log(`✅ Запись остановлена. Чанков: ${this.chunks.length}`);\n          if (this.chunks.length === 0) {\n            reject(new Error('Не удалось записать видео - нет данных'));\n            return;\n          }\n          const blob = new Blob(this.chunks, {\n            type: this.getOutputMimeType()\n          });\n          console.log(`🎉 Экспорт завершен: ${(blob.size / 1024 / 1024).toFixed(2)} МБ`);\n          this.cleanup();\n          resolve(blob);\n        };\n        this.mediaRecorder.onerror = error => {\n          console.error('❌ Ошибка MediaRecorder:', error);\n          this.cleanup();\n          reject(new Error(`Ошибка записи: ${error.message}`));\n        };\n\n        // Начинаем запись\n        this.mediaRecorder.start(100); // Чанки каждые 100мс\n        console.log('🔴 Запись начата');\n\n        // Запускаем рендеринг кадров с правильным таймингом\n        this.renderFramesInRealTime().then(() => {\n          console.log('🎯 Рендеринг завершен');\n          // Добавляем задержку перед остановкой\n          setTimeout(() => {\n            var _this$mediaRecorder;\n            if (((_this$mediaRecorder = this.mediaRecorder) === null || _this$mediaRecorder === void 0 ? void 0 : _this$mediaRecorder.state) === 'recording') {\n              this.mediaRecorder.stop();\n            }\n          }, 1000);\n        }).catch(reject);\n      });\n    } catch (error) {\n      console.error('💥 Ошибка экспорта:', error);\n      this.cleanup();\n      throw error;\n    }\n  }\n  async renderFramesInRealTime() {\n    const frameCount = Math.ceil(this.videoDuration * this.settings.fps);\n    const frameDuration = 1000 / this.settings.fps; // в миллисекундах\n\n    console.log(`🎞️ Рендеринг ${frameCount} кадров в реальном времени`);\n    return new Promise(resolve => {\n      let currentFrame = 0;\n      const renderNextFrame = async () => {\n        if (currentFrame >= frameCount) {\n          console.log('🏁 Все кадры отрендерены');\n          resolve();\n          return;\n        }\n        const currentTime = currentFrame / this.settings.fps;\n        try {\n          var _this$onProgress2;\n          await this.renderFrame(currentTime);\n\n          // Обновляем прогресс\n          const progress = 30 + Math.round(currentFrame / frameCount * 60);\n          (_this$onProgress2 = this.onProgress) === null || _this$onProgress2 === void 0 ? void 0 : _this$onProgress2.call(this, progress);\n\n          // Логируем прогресс\n          if (currentFrame % 100 === 0) {\n            console.log(`📽️ Кадр ${currentFrame}/${frameCount} (${currentTime.toFixed(1)}s)`);\n          }\n          currentFrame++;\n\n          // Планируем следующий кадр\n          setTimeout(renderNextFrame, frameDuration);\n        } catch (error) {\n          console.error(`❌ Ошибка рендеринга кадра ${currentFrame}:`, error);\n          currentFrame++;\n          setTimeout(renderNextFrame, frameDuration);\n        }\n      };\n\n      // Начинаем рендеринг\n      renderNextFrame();\n    });\n  }\n  async prepareAllElements() {\n    console.log('📦 Подготовка элементов...');\n    for (const item of this.timelineItems) {\n      try {\n        console.log(`📄 Подготавливаем: ${item.name}, тип: ${item.type}, trackType: ${item.trackType}`);\n        const elementType = this.determineElementType(item);\n        console.log(`🎯 Определенный тип: ${elementType}`);\n        if (elementType === 'video') {\n          await this.prepareVideoElement(item);\n        } else if (elementType === 'image') {\n          await this.prepareImageElement(item);\n        }\n        // Аудио элементы пропускаем для простоты\n      } catch (error) {\n        console.warn(`⚠️ Ошибка подготовки ${item.name}:`, error);\n      }\n    }\n    console.log('✅ Все элементы подготовлены');\n    console.log('📋 Загруженные медиа:', Array.from(this.loadedMedia.keys()));\n  }\n\n  // Удаляем дублирующий метод renderAllFrames - используем только renderFramesInRealTime\n\n  determineElementType(item) {\n    // Сначала проверяем trackType\n    if (item.trackType === 'main') return 'video';\n    if (item.trackType === 'overlay') return 'image';\n    if (item.trackType === 'audio') return 'audio';\n\n    // Потом проверяем type\n    if (item.type === 'videos' || item.type === 'video') return 'video';\n    if (item.type === 'images' || item.type === 'image') return 'image';\n    if (item.type === 'audios' || item.type === 'audio') return 'audio';\n\n    // Наконец проверяем по расширению URL\n    const url = item.url || item.src || '';\n    if (/\\.(mp4|webm|mov|avi)$/i.test(url)) return 'video';\n    if (/\\.(jpg|jpeg|png|gif|webp)$/i.test(url)) return 'image';\n    if (/\\.(mp3|wav|ogg|m4a)$/i.test(url)) return 'audio';\n    console.warn(`⚠️ Неизвестный тип элемента:`, item);\n    return 'unknown';\n  }\n  async prepareVideoElement(item) {\n    if (this.loadedMedia.has(item.id)) return;\n    const video = document.createElement(\"video\");\n    video.crossOrigin = \"anonymous\";\n    video.muted = true;\n    video.preload = \"metadata\";\n    const videoUrl = item.url || item.src;\n    if (!videoUrl) return;\n    video.src = videoUrl;\n    return new Promise(resolve => {\n      const timeout = setTimeout(() => {\n        console.warn(`⏰ Таймаут загрузки видео: ${item.name}`);\n        resolve();\n      }, 10000);\n      video.onloadedmetadata = () => {\n        clearTimeout(timeout);\n        console.log(`🎥 Видео загружено: ${item.name}`);\n        this.loadedMedia.set(item.id, video);\n        resolve();\n      };\n      video.onerror = () => {\n        clearTimeout(timeout);\n        console.error(`❌ Ошибка загрузки видео: ${item.name}`);\n        resolve();\n      };\n    });\n  }\n  async prepareImageElement(item) {\n    if (this.loadedMedia.has(item.id)) return;\n    const img = new Image();\n    img.crossOrigin = \"anonymous\";\n    const imageUrl = item.url || item.src;\n    if (!imageUrl) return;\n    img.src = imageUrl;\n    return new Promise(resolve => {\n      const timeout = setTimeout(() => {\n        console.warn(`⏰ Таймаут загрузки изображения: ${item.name}`);\n        resolve();\n      }, 5000);\n      img.onload = () => {\n        clearTimeout(timeout);\n        console.log(`🖼️ Изображение загружено: ${item.name}`);\n        this.loadedMedia.set(item.id, img);\n        resolve();\n      };\n      img.onerror = () => {\n        clearTimeout(timeout);\n        console.error(`❌ Ошибка загрузки изображения: ${item.name}`);\n        resolve();\n      };\n    });\n  }\n  async renderAllFrames() {\n    var _this$onProgress4;\n    const frameCount = Math.ceil(this.videoDuration * this.settings.fps);\n    const frameDuration = 1 / this.settings.fps;\n    console.log(`🎞️ Рендеринг ${frameCount} кадров (${this.settings.fps} FPS)`);\n\n    // Получаем видео трек для ручного захвата кадров\n    const videoTrack = this.canvas.captureStream(0).getVideoTracks()[0];\n    for (let frame = 0; frame < frameCount; frame++) {\n      const currentTime = frame * frameDuration;\n      try {\n        var _this$onProgress3;\n        await this.renderFrame(currentTime);\n\n        // Принудительно захватываем кадр\n        if (videoTrack && videoTrack.requestFrame) {\n          videoTrack.requestFrame();\n        }\n\n        // Даем время на обработку кадра\n        await new Promise(resolve => setTimeout(resolve, 1000 / this.settings.fps));\n\n        // Обновляем прогресс\n        const progress = 30 + Math.round(frame / frameCount * 60);\n        (_this$onProgress3 = this.onProgress) === null || _this$onProgress3 === void 0 ? void 0 : _this$onProgress3.call(this, progress);\n\n        // Логируем каждые 100 кадров для отладки\n        if (frame % 100 === 0) {\n          console.log(`📽️ Кадр ${frame}/${frameCount} (${currentTime.toFixed(1)}s)`);\n        }\n      } catch (error) {\n        console.error(`❌ Ошибка рендеринга кадра ${frame}:`, error);\n      }\n    }\n    (_this$onProgress4 = this.onProgress) === null || _this$onProgress4 === void 0 ? void 0 : _this$onProgress4.call(this, 90);\n    console.log('🎉 Все кадры отрендерены');\n  }\n  async renderFrame(currentTime) {\n    // Очищаем canvas черным фоном\n    this.ctx.fillStyle = \"#000000\";\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Получаем активные элементы для текущего времени\n    const activeItems = this.getActiveItems(currentTime);\n\n    // Всегда рендерим что-то, даже если нет активных элементов\n    if (activeItems.length === 0) {\n      this.renderEmptyFrame(currentTime);\n      return;\n    }\n\n    // Сортируем элементы по слоям (основное видео сначала, потом оверлеи)\n    const sortedItems = this.sortItemsByLayer(activeItems);\n\n    // Рендерим каждый активный элемент\n    for (const item of sortedItems) {\n      const relativeTime = currentTime - (item.startTime || 0);\n      await this.renderItem(item, relativeTime);\n    }\n\n    // Добавляем индикатор времени в углу для отладки\n    this.ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n    this.ctx.font = \"16px Arial\";\n    this.ctx.fillText(`${currentTime.toFixed(1)}s`, 10, 30);\n  }\n  getActiveItems(currentTime) {\n    const activeItems = this.timelineItems.filter(item => {\n      const startTime = item.startTime || 0;\n      const duration = item.duration || this.videoDuration;\n      const endTime = startTime + duration;\n      const isActive = currentTime >= startTime && currentTime < endTime;\n\n      // Логируем первые несколько кадров для отладки\n      if (currentTime < 1 && isActive) {\n        console.log(`🎬 Активный элемент в ${currentTime.toFixed(1)}s: ${item.name} (${startTime}-${endTime})`);\n      }\n      return isActive;\n    });\n    return activeItems;\n  }\n  sortItemsByLayer(items) {\n    const layerOrder = {\n      main: 1,\n      video: 1,\n      overlay: 2,\n      image: 2,\n      audio: 0 // Аудио не рендерится визуально\n    };\n    return [...items].sort((a, b) => {\n      const orderA = layerOrder[a.trackType] || layerOrder[a.type] || 1;\n      const orderB = layerOrder[b.trackType] || layerOrder[b.type] || 1;\n      return orderA - orderB;\n    });\n  }\n  async renderItem(item, relativeTime) {\n    const elementType = this.determineElementType(item);\n    if (elementType === 'audio') {\n      return; // Аудио не рендерится визуально\n    }\n    const mediaElement = this.loadedMedia.get(item.id);\n    if (!mediaElement) {\n      this.renderPlaceholder(item.name || 'Неизвестный элемент');\n      return;\n    }\n    this.ctx.save();\n    try {\n      if (elementType === 'video') {\n        await this.renderVideoItem(mediaElement, relativeTime);\n      } else if (elementType === 'image') {\n        this.renderImageItem(mediaElement);\n      }\n    } catch (error) {\n      console.warn(`⚠️ Ошибка рендеринга элемента ${item.name}:`, error);\n      this.renderPlaceholder(`Ошибка: ${item.name}`);\n    } finally {\n      this.ctx.restore();\n    }\n  }\n  async renderVideoItem(video, relativeTime) {\n    if (!video || video.readyState < 2) {\n      this.renderPlaceholder('Загрузка видео...');\n      return;\n    }\n    try {\n      // Устанавливаем правильное время видео\n      const targetTime = Math.max(0, Math.min(relativeTime, video.duration));\n\n      // Только если время сильно отличается\n      if (Math.abs(video.currentTime - targetTime) > 0.1) {\n        video.currentTime = targetTime;\n\n        // Ждем готовности кадра\n        await new Promise(resolve => {\n          const checkReady = () => {\n            if (video.readyState >= 2) {\n              resolve();\n            } else {\n              setTimeout(checkReady, 10);\n            }\n          };\n          checkReady();\n        });\n      }\n      this.drawScaledElement(video);\n    } catch (error) {\n      console.warn(`⚠️ Ошибка рендеринга видео:`, error);\n      this.renderPlaceholder('Ошибка видео');\n    }\n  }\n  renderImageItem(img) {\n    if (!img || !img.complete || img.naturalWidth === 0) {\n      this.renderPlaceholder('Изображение не загружено');\n      return;\n    }\n    try {\n      this.drawScaledElement(img);\n    } catch (error) {\n      console.warn(`⚠️ Ошибка рендеринга изображения:`, error);\n      this.renderPlaceholder('Ошибка изображения');\n    }\n  }\n  drawScaledElement(element) {\n    const elementWidth = element.videoWidth || element.naturalWidth || element.width;\n    const elementHeight = element.videoHeight || element.naturalHeight || element.height;\n    if (!elementWidth || !elementHeight) {\n      console.warn('⚠️ Элемент не имеет размеров');\n      return;\n    }\n    const canvasRatio = this.canvas.width / this.canvas.height;\n    const elementRatio = elementWidth / elementHeight;\n    let drawWidth, drawHeight, drawX, drawY;\n\n    // Масштабируем с сохранением пропорций (contain)\n    if (elementRatio > canvasRatio) {\n      drawWidth = this.canvas.width;\n      drawHeight = this.canvas.width / elementRatio;\n      drawX = 0;\n      drawY = (this.canvas.height - drawHeight) / 2;\n    } else {\n      drawHeight = this.canvas.height;\n      drawWidth = this.canvas.height * elementRatio;\n      drawX = (this.canvas.width - drawWidth) / 2;\n      drawY = 0;\n    }\n    try {\n      this.ctx.drawImage(element, drawX, drawY, drawWidth, drawHeight);\n    } catch (error) {\n      console.error('💥 Ошибка отрисовки:', error);\n      this.renderPlaceholder('Ошибка отрисовки');\n    }\n  }\n  renderPlaceholder(text) {\n    // Рендерим серый фон с текстом\n    this.ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\n    this.ctx.fillRect(this.canvas.width * 0.1, this.canvas.height * 0.4, this.canvas.width * 0.8, this.canvas.height * 0.2);\n    this.ctx.fillStyle = \"#ffffff\";\n    this.ctx.font = `${Math.min(32, this.canvas.width / 30)}px Arial`;\n    this.ctx.textAlign = \"center\";\n    this.ctx.textBaseline = \"middle\";\n    this.ctx.fillText(text, this.canvas.width / 2, this.canvas.height / 2);\n  }\n  renderEmptyFrame(currentTime) {\n    // Рендерим черный экран с индикатором времени\n    this.ctx.fillStyle = \"#000000\";\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.fillStyle = \"#666666\";\n    this.ctx.font = `${Math.min(24, this.canvas.width / 50)}px Arial`;\n    this.ctx.textAlign = \"center\";\n    this.ctx.textBaseline = \"middle\";\n    this.ctx.fillText(`${currentTime.toFixed(1)}s`, this.canvas.width / 2, this.canvas.height / 2);\n  }\n  getSupportedMimeType() {\n    const formats = ['video/webm;codecs=vp9', 'video/webm;codecs=vp8', 'video/webm'];\n    for (const format of formats) {\n      if (MediaRecorder.isTypeSupported(format)) {\n        console.log(`✅ Поддерживаемый формат: ${format}`);\n        return format;\n      }\n    }\n    console.log('⚠️ Используем базовый формат video/webm');\n    return 'video/webm';\n  }\n  getOutputMimeType() {\n    // Возвращаем тип для финального файла\n    switch (this.settings.format) {\n      case 'mp4':\n        return 'video/mp4';\n      case 'mov':\n        return 'video/quicktime';\n      case 'webm':\n      default:\n        return 'video/webm';\n    }\n  }\n  cleanup() {\n    console.log('🧹 Очистка ресурсов...');\n\n    // Освобождаем URL объекты\n    this.loadedMedia.forEach(element => {\n      if (element.src && element.src.startsWith('blob:')) {\n        URL.revokeObjectURL(element.src);\n      }\n    });\n\n    // Очищаем массивы\n    this.loadedMedia.clear();\n    this.chunks = [];\n    this.mediaRecorder = null;\n  }\n}\nexport const useVideoExporter = () => {\n  _s2();\n  const [isExportModalOpen, setIsExportModalOpen] = useState(false);\n  const openExportModal = () => setIsExportModalOpen(true);\n  const closeExportModal = () => setIsExportModalOpen(false);\n  return {\n    isExportModalOpen,\n    openExportModal,\n    closeExportModal\n  };\n};\n_s2(useVideoExporter, \"Wfaj4kprhDIijrMYdBElG6JtIdM=\");\nvar _c;\n$RefreshReg$(_c, \"VideoExportModal\");","map":{"version":3,"names":["useState","useEffect","X","Download","Check","AlertCircle","FolderOpen","ChevronDown","ChevronUp","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoExportModal","isOpen","onClose","timelineItems","tracks","videoDuration","_s","exportSettings","setExportSettings","resolution","fps","bitrate","format","quality","saveDirectory","filename","Date","now","isExporting","setIsExporting","exportProgress","setExportProgress","exportStatus","setExportStatus","estimatedTime","setEstimatedTime","showAllElements","setShowAllElements","presets","name","qualityOptions","value","label","formatOptions","length","complexity","filter","item","trackType","baseTime","Math","max","complexityMultiplier","ceil","find","q","prev","handleSelectDirectory","window","directoryHandle","showDirectoryPicker","alert","error","console","applyPreset","preset","getFileSize","sizeInMB","toFixed","handleExport","videoExporter","VideoExporter","settings","onProgress","exportedVideoBlob","render","downloadVideo","setTimeout","message","blob","fileHandle","getFileHandle","create","writable","createWritable","write","close","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleClose","hasTimelineItems","elementsToShow","slice","hasMoreElements","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","width","map","onChange","e","target","parseInt","type","placeholder","round","id","_c","constructor","canvas","ctx","getContext","alpha","height","split","Number","loadedMedia","Map","mediaRecorder","chunks","_this$onProgress","log","элементов","длительность","разрешение","prepareAllElements","call","stream","captureStream","mimeType","getSupportedMimeType","options","videoBitsPerSecond","MediaRecorder","ondataavailable","event","data","push","Promise","resolve","reject","onstop","Error","Blob","getOutputMimeType","cleanup","onerror","start","renderFramesInRealTime","then","_this$mediaRecorder","state","stop","catch","frameCount","frameDuration","currentFrame","renderNextFrame","currentTime","_this$onProgress2","renderFrame","progress","elementType","determineElementType","prepareVideoElement","prepareImageElement","warn","Array","from","keys","src","test","has","video","crossOrigin","muted","preload","videoUrl","timeout","onloadedmetadata","clearTimeout","set","img","Image","imageUrl","onload","renderAllFrames","_this$onProgress4","videoTrack","getVideoTracks","frame","_this$onProgress3","requestFrame","fillStyle","fillRect","activeItems","getActiveItems","renderEmptyFrame","sortedItems","sortItemsByLayer","relativeTime","startTime","renderItem","font","fillText","duration","endTime","isActive","items","layerOrder","main","overlay","image","audio","sort","b","orderA","orderB","mediaElement","get","renderPlaceholder","save","renderVideoItem","renderImageItem","restore","readyState","targetTime","min","abs","checkReady","drawScaledElement","complete","naturalWidth","element","elementWidth","videoWidth","elementHeight","videoHeight","naturalHeight","canvasRatio","elementRatio","drawWidth","drawHeight","drawX","drawY","drawImage","text","textAlign","textBaseline","formats","isTypeSupported","forEach","startsWith","clear","useVideoExporter","_s2","isExportModalOpen","setIsExportModalOpen","openExportModal","closeExportModal","$RefreshReg$"],"sources":["C:/Scriptify/ai-content-studio/frontend/src/components/VideoExportModal.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { X, Download, Check, AlertCircle, FolderOpen, ChevronDown, ChevronUp } from \"lucide-react\";\r\n\r\nexport const VideoExportModal = ({\r\n  isOpen,\r\n  onClose,\r\n  timelineItems = [],\r\n  tracks,\r\n  videoDuration,\r\n}) => {\r\n  const [exportSettings, setExportSettings] = useState({\r\n    resolution: \"1920x1080\",\r\n    fps: 30,\r\n    bitrate: 5000,\r\n    format: \"mp4\",\r\n    quality: \"high\",\r\n    saveDirectory: null,\r\n    filename: `video_${Date.now()}`\r\n  });\r\n\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [exportProgress, setExportProgress] = useState(0);\r\n  const [exportStatus, setExportStatus] = useState(\"idle\");\r\n  const [estimatedTime, setEstimatedTime] = useState(null);\r\n  const [showAllElements, setShowAllElements] = useState(false);\r\n\r\n  // Предустановки для быстрого выбора\r\n  const presets = [\r\n    { name: \"YouTube 1080p\", resolution: \"1920x1080\", fps: 30, quality: \"high\", format: \"mp4\" },\r\n    { name: \"Instagram\", resolution: \"1080x1080\", fps: 30, quality: \"medium\", format: \"mp4\" },\r\n    { name: \"TikTok\", resolution: \"1080x1920\", fps: 30, quality: \"medium\", format: \"mp4\" },\r\n    { name: \"Web\", resolution: \"1280x720\", fps: 30, quality: \"medium\", format: \"webm\" },\r\n  ];\r\n\r\n  const qualityOptions = [\r\n    { value: \"low\", label: \"Низкое\", bitrate: 1000 },\r\n    { value: \"medium\", label: \"Среднее\", bitrate: 3000 },\r\n    { value: \"high\", label: \"Высокое\", bitrate: 5000 },\r\n    { value: \"ultra\", label: \"Ультра\", bitrate: 10000 },\r\n  ];\r\n\r\n  const formatOptions = [\r\n    { value: \"mp4\", label: \"MP4\" },\r\n    { value: \"webm\", label: \"WebM\" },\r\n    { value: \"mov\", label: \"MOV\" },\r\n  ];\r\n\r\n  // Быстрый расчет времени экспорта\r\n  useEffect(() => {\r\n    if (videoDuration && timelineItems?.length) {\r\n      const complexity = timelineItems.filter(item => item.trackType === \"overlay\").length;\r\n      const baseTime = Math.max(2, videoDuration * 0.1);\r\n      const complexityMultiplier = 1 + (complexity * 0.1);\r\n      setEstimatedTime(Math.ceil(baseTime * complexityMultiplier));\r\n    }\r\n  }, [videoDuration, timelineItems]);\r\n\r\n  // Синхронизация битрейта с качеством\r\n  useEffect(() => {\r\n    const quality = qualityOptions.find(q => q.value === exportSettings.quality);\r\n    if (quality && quality.bitrate !== exportSettings.bitrate) {\r\n      setExportSettings(prev => ({ ...prev, bitrate: quality.bitrate }));\r\n    }\r\n  }, [exportSettings.quality]);\r\n\r\n  // Выбор папки для сохранения\r\n  const handleSelectDirectory = async () => {\r\n    try {\r\n      if ('showDirectoryPicker' in window) {\r\n        const directoryHandle = await window.showDirectoryPicker();\r\n        setExportSettings(prev => ({ \r\n          ...prev, \r\n          saveDirectory: directoryHandle \r\n        }));\r\n      } else {\r\n        alert('Ваш браузер не поддерживает выбор папки. Файл будет сохранен в папку загрузок.');\r\n      }\r\n    } catch (error) {\r\n      if (error.name !== 'AbortError') {\r\n        console.error('Ошибка выбора папки:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Применение пресета\r\n  const applyPreset = (preset) => {\r\n    setExportSettings(prev => ({\r\n      ...prev,\r\n      ...preset\r\n    }));\r\n  };\r\n\r\n  const getFileSize = () => {\r\n    if (!videoDuration) return \"~\";\r\n    const sizeInMB = (exportSettings.bitrate * videoDuration * 1000) / (8 * 1024 * 1024);\r\n    return sizeInMB < 1024 ? `~${sizeInMB.toFixed(0)} МБ` : `~${(sizeInMB / 1024).toFixed(1)} ГБ`;\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    if (!timelineItems || timelineItems.length === 0) {\r\n      alert('Нет элементов для экспорта!');\r\n      return;\r\n    }\r\n    setIsExporting(true);\r\n    setExportStatus(\"processing\");\r\n    setExportProgress(0);\r\n\r\n    try {\r\n      const videoExporter = new VideoExporter({\r\n        timelineItems,\r\n        tracks,\r\n        videoDuration,\r\n        settings: exportSettings,\r\n        onProgress: setExportProgress\r\n      });\r\n\r\n      const exportedVideoBlob = await videoExporter.render();\r\n      await downloadVideo(exportedVideoBlob);\r\n      \r\n      setExportStatus(\"success\");\r\n      setTimeout(() => {\r\n        setExportStatus(\"idle\");\r\n        setExportProgress(0);\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"❌ ОШИБКА ЭКСПОРТА:\", error);\r\n      alert(`Ошибка экспорта: ${error.message}`);\r\n      setExportStatus(\"error\");\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const downloadVideo = async (blob) => {\r\n    const filename = `${exportSettings.filename}.${exportSettings.format}`;\r\n    \r\n    try {\r\n      if (exportSettings.saveDirectory && 'showDirectoryPicker' in window) {\r\n        const fileHandle = await exportSettings.saveDirectory.getFileHandle(filename, {\r\n          create: true,\r\n        });\r\n        const writable = await fileHandle.createWritable();\r\n        await writable.write(blob);\r\n        await writable.close();\r\n      } else {\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = filename;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n        URL.revokeObjectURL(url);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка сохранения:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (!isExporting) {\r\n      setExportStatus(\"idle\");\r\n      setExportProgress(0);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  // Логика отображения элементов\r\n  const hasTimelineItems = timelineItems && timelineItems.length > 0;\r\n  const elementsToShow = hasTimelineItems \r\n    ? (showAllElements ? timelineItems : timelineItems.slice(0, 3))\r\n    : [];\r\n  const hasMoreElements = hasTimelineItems && timelineItems.length > 3;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-2xl shadow-xl max-w-lg w-full max-h-[90vh] overflow-hidden\">\r\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800 flex items-center\">\r\n            <Download size={20} className=\"mr-2 text-blue-600\" />\r\n            Экспорт видео\r\n          </h2>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"p-1 hover:bg-gray-100 rounded-full transition-colors\"\r\n            disabled={isExporting}\r\n          >\r\n            <X size={18} />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-4 space-y-4 max-h-[calc(90vh-120px)] overflow-y-auto\">\r\n          {/* Статус экспорта */}\r\n          {exportStatus !== \"idle\" && (\r\n            <div className={`p-3 rounded-lg ${\r\n              exportStatus === \"processing\" ? \"bg-blue-50 border border-blue-200\" :\r\n              exportStatus === \"success\" ? \"bg-green-50 border border-green-200\" :\r\n              \"bg-red-50 border border-red-200\"\r\n            }`}>\r\n              <div className=\"flex items-center\">\r\n                {exportStatus === \"processing\" && (\r\n                  <>\r\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"></div>\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex justify-between text-sm text-blue-700 mb-1\">\r\n                        <span>Экспорт...</span>\r\n                        <span>{exportProgress}%</span>\r\n                      </div>\r\n                      <div className=\"w-full bg-blue-200 rounded-full h-1.5\">\r\n                        <div\r\n                          className=\"bg-blue-600 h-1.5 rounded-full transition-all duration-300\"\r\n                          style={{ width: `${exportProgress}%` }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                {exportStatus === \"success\" && (\r\n                  <>\r\n                    <Check size={16} className=\"text-green-600 mr-2\" />\r\n                    <span className=\"text-green-700 text-sm font-medium\">Готово!</span>\r\n                  </>\r\n                )}\r\n                {exportStatus === \"error\" && (\r\n                  <>\r\n                    <AlertCircle size={16} className=\"text-red-600 mr-2\" />\r\n                    <span className=\"text-red-700 text-sm font-medium\">Ошибка экспорта</span>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Быстрые пресеты */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Быстрые настройки\r\n            </label>\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              {presets.map((preset) => (\r\n                <button\r\n                  key={preset.name}\r\n                  onClick={() => applyPreset(preset)}\r\n                  className=\"p-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\r\n                  disabled={isExporting}\r\n                >\r\n                  {preset.name}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Настройки экспорта */}\r\n          <div className=\"grid grid-cols-2 gap-3\">\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                Разрешение\r\n              </label>\r\n              <select\r\n                value={exportSettings.resolution}\r\n                onChange={(e) => setExportSettings(prev => ({ ...prev, resolution: e.target.value }))}\r\n                className=\"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                disabled={isExporting}\r\n              >\r\n                <option value=\"3840x2160\">4K</option>\r\n                <option value=\"1920x1080\">1080p</option>\r\n                <option value=\"1280x720\">720p</option>\r\n                <option value=\"854x480\">480p</option>\r\n                <option value=\"1080x1920\">9:16 (TikTok)</option>\r\n                <option value=\"1080x1080\">1:1 (Instagram)</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                FPS\r\n              </label>\r\n              <select\r\n                value={exportSettings.fps}\r\n                onChange={(e) => setExportSettings(prev => ({ ...prev, fps: parseInt(e.target.value) }))}\r\n                className=\"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                disabled={isExporting}\r\n              >\r\n                <option value=\"24\">24</option>\r\n                <option value=\"30\">30</option>\r\n                <option value=\"60\">60</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                Качество\r\n              </label>\r\n              <select\r\n                value={exportSettings.quality}\r\n                onChange={(e) => setExportSettings(prev => ({ ...prev, quality: e.target.value }))}\r\n                className=\"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                disabled={isExporting}\r\n              >\r\n                {qualityOptions.map((quality) => (\r\n                  <option key={quality.value} value={quality.value}>\r\n                    {quality.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                Формат\r\n              </label>\r\n              <select\r\n                value={exportSettings.format}\r\n                onChange={(e) => setExportSettings(prev => ({ ...prev, format: e.target.value }))}\r\n                className=\"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                disabled={isExporting}\r\n              >\r\n                {formatOptions.map((format) => (\r\n                  <option key={format.value} value={format.value}>\r\n                    {format.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Имя файла и папка сохранения */}\r\n          <div className=\"space-y-2\">\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                Имя файла\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={exportSettings.filename}\r\n                onChange={(e) => setExportSettings(prev => ({ ...prev, filename: e.target.value }))}\r\n                className=\"w-full p-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                disabled={isExporting}\r\n                placeholder=\"Имя файла\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                Папка для сохранения\r\n              </label>\r\n              <button\r\n                onClick={handleSelectDirectory}\r\n                className=\"w-full p-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors flex items-center justify-between\"\r\n                disabled={isExporting}\r\n              >\r\n                <span className=\"text-gray-600\">\r\n                  {exportSettings.saveDirectory ? exportSettings.saveDirectory.name : 'Выберите папку'}\r\n                </span>\r\n                <FolderOpen size={16} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Информация */}\r\n          <div className=\"bg-gray-50 rounded-lg p-3\">\r\n            <div className=\"grid grid-cols-2 gap-2 text-xs\">\r\n              <div>\r\n                <span className=\"text-gray-600\">Длительность:</span>\r\n                <span className=\"ml-1 font-medium\">{Math.round(videoDuration)}с</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"text-gray-600\">Размер:</span>\r\n                <span className=\"ml-1 font-medium\">{getFileSize()}</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"text-gray-600\">Битрейт:</span>\r\n                <span className=\"ml-1 font-medium\">{exportSettings.bitrate} kbps</span>\r\n              </div>\r\n              <div>\r\n                <span className=\"text-gray-600\">Время:</span>\r\n                <span className=\"ml-1 font-medium\">~{estimatedTime}с</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Элементы для экспорта */}\r\n          <div className=\"bg-gray-50 rounded-lg p-3\">\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <span className=\"text-xs font-medium text-gray-800\">Элементы для экспорта</span>\r\n              <span className=\"text-xs text-gray-600\">{hasTimelineItems ? timelineItems.length : 0}</span>\r\n            </div>\r\n            {hasTimelineItems ? (\r\n              <div className=\"space-y-1\">\r\n                {elementsToShow.map((item) => (\r\n                  <div key={item.id} className=\"flex items-center justify-between text-xs\">\r\n                    <span className=\"text-gray-700 truncate\">{item.name}</span>\r\n                    <span className={`px-1 py-0.5 rounded text-xs ${\r\n                      item.trackType === \"main\" ? \"bg-blue-100 text-blue-700\" :\r\n                      item.trackType === \"audio\" ? \"bg-green-100 text-green-700\" :\r\n                      \"bg-purple-100 text-purple-700\"\r\n                    }`}>\r\n                      {item.trackType}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n                {hasMoreElements && (\r\n                  <button\r\n                    onClick={() => setShowAllElements(!showAllElements)}\r\n                    className=\"w-full text-xs text-blue-600 hover:text-blue-800 flex items-center justify-center py-1 transition-colors\"\r\n                  >\r\n                    {showAllElements ? (\r\n                      <>\r\n                        Скрыть <ChevronUp size={12} className=\"ml-1\" />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        +{timelineItems.length - 3} ещё <ChevronDown size={12} className=\"ml-1\" />\r\n                      </>\r\n                    )}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-xs text-gray-500 text-center py-2\">\r\n                Нет элементов для экспорта\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Кнопки */}\r\n        <div className=\"flex justify-end space-x-3 p-4 border-t border-gray-200\">\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"px-4 py-2 text-sm text-gray-600 hover:text-gray-800 transition-colors\"\r\n            disabled={isExporting}\r\n          >\r\n            Отмена\r\n          </button>\r\n          <button\r\n            onClick={handleExport}\r\n            disabled={isExporting || !hasTimelineItems}\r\n            className={`px-4 py-2 text-sm rounded-lg font-medium transition-all flex items-center ${\r\n              isExporting || !hasTimelineItems\r\n                ? \"bg-gray-300 text-gray-500 cursor-not-allowed\"\r\n                : \"bg-blue-600 text-white hover:bg-blue-700\"\r\n            }`}\r\n          >\r\n            {isExporting ? (\r\n              <>\r\n                <div className=\"animate-spin rounded-full h-3 w-3 border-b-2 border-white mr-2\"></div>\r\n                Экспорт...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Download size={14} className=\"mr-2\" />\r\n                Экспортировать\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Полностью переписанный VideoExporter класс\r\nclass VideoExporter {\r\n  constructor({ timelineItems, tracks, videoDuration, settings, onProgress }) {\r\n    this.timelineItems = timelineItems;\r\n    this.tracks = tracks;\r\n    this.videoDuration = videoDuration;\r\n    this.settings = settings;\r\n    this.onProgress = onProgress;\r\n\r\n    // Создаем основной canvas для композиции\r\n    this.canvas = document.createElement(\"canvas\");\r\n    this.ctx = this.canvas.getContext(\"2d\", { alpha: false });\r\n\r\n    const [width, height] = settings.resolution.split(\"x\").map(Number);\r\n    this.canvas.width = width;\r\n    this.canvas.height = height;\r\n\r\n    // Подготовленные элементы\r\n    this.loadedMedia = new Map();\r\n    this.mediaRecorder = null;\r\n    this.chunks = [];\r\n  }\r\n\r\n  async render() {\r\n    try {\r\n      console.log('🎬 СТАРТ ЭКСПОРТА ВИДЕО');\r\n      console.log('📊 Параметры:', {\r\n        элементов: this.timelineItems.length,\r\n        длительность: this.videoDuration,\r\n        разрешение: this.settings.resolution,\r\n        fps: this.settings.fps\r\n      });\r\n\r\n      // Подготавливаем все элементы\r\n      await this.prepareAllElements();\r\n      this.onProgress?.(30);\r\n\r\n      // Создаем видео поток с фиксированным FPS (не 0!)\r\n      const stream = this.canvas.captureStream(this.settings.fps);\r\n      console.log('🎥 Canvas stream создан с FPS:', this.settings.fps);\r\n\r\n      // Настраиваем MediaRecorder\r\n      const mimeType = this.getSupportedMimeType();\r\n      const options = {\r\n        mimeType: mimeType,\r\n        videoBitsPerSecond: this.settings.bitrate * 1000,\r\n      };\r\n\r\n      console.log('⚙️ Опции MediaRecorder:', options);\r\n\r\n      this.mediaRecorder = new MediaRecorder(stream, options);\r\n      this.chunks = [];\r\n\r\n      this.mediaRecorder.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          this.chunks.push(event.data);\r\n          console.log(`📦 Получен чанк: ${(event.data.size / 1024).toFixed(1)} KB`);\r\n        }\r\n      };\r\n\r\n      return new Promise((resolve, reject) => {\r\n        this.mediaRecorder.onstop = () => {\r\n          console.log(`✅ Запись остановлена. Чанков: ${this.chunks.length}`);\r\n          \r\n          if (this.chunks.length === 0) {\r\n            reject(new Error('Не удалось записать видео - нет данных'));\r\n            return;\r\n          }\r\n\r\n          const blob = new Blob(this.chunks, {\r\n            type: this.getOutputMimeType(),\r\n          });\r\n          \r\n          console.log(`🎉 Экспорт завершен: ${(blob.size / 1024 / 1024).toFixed(2)} МБ`);\r\n          this.cleanup();\r\n          resolve(blob);\r\n        };\r\n\r\n        this.mediaRecorder.onerror = (error) => {\r\n          console.error('❌ Ошибка MediaRecorder:', error);\r\n          this.cleanup();\r\n          reject(new Error(`Ошибка записи: ${error.message}`));\r\n        };\r\n\r\n        // Начинаем запись\r\n        this.mediaRecorder.start(100); // Чанки каждые 100мс\r\n        console.log('🔴 Запись начата');\r\n\r\n        // Запускаем рендеринг кадров с правильным таймингом\r\n        this.renderFramesInRealTime()\r\n          .then(() => {\r\n            console.log('🎯 Рендеринг завершен');\r\n            // Добавляем задержку перед остановкой\r\n            setTimeout(() => {\r\n              if (this.mediaRecorder?.state === 'recording') {\r\n                this.mediaRecorder.stop();\r\n              }\r\n            }, 1000);\r\n          })\r\n          .catch(reject);\r\n      });\r\n    } catch (error) {\r\n      console.error('💥 Ошибка экспорта:', error);\r\n      this.cleanup();\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async renderFramesInRealTime() {\r\n    const frameCount = Math.ceil(this.videoDuration * this.settings.fps);\r\n    const frameDuration = 1000 / this.settings.fps; // в миллисекундах\r\n    \r\n    console.log(`🎞️ Рендеринг ${frameCount} кадров в реальном времени`);\r\n\r\n    return new Promise((resolve) => {\r\n      let currentFrame = 0;\r\n      \r\n      const renderNextFrame = async () => {\r\n        if (currentFrame >= frameCount) {\r\n          console.log('🏁 Все кадры отрендерены');\r\n          resolve();\r\n          return;\r\n        }\r\n\r\n        const currentTime = (currentFrame / this.settings.fps);\r\n        \r\n        try {\r\n          await this.renderFrame(currentTime);\r\n          \r\n          // Обновляем прогресс\r\n          const progress = 30 + Math.round((currentFrame / frameCount) * 60);\r\n          this.onProgress?.(progress);\r\n          \r\n          // Логируем прогресс\r\n          if (currentFrame % 100 === 0) {\r\n            console.log(`📽️ Кадр ${currentFrame}/${frameCount} (${currentTime.toFixed(1)}s)`);\r\n          }\r\n          \r\n          currentFrame++;\r\n          \r\n          // Планируем следующий кадр\r\n          setTimeout(renderNextFrame, frameDuration);\r\n        } catch (error) {\r\n          console.error(`❌ Ошибка рендеринга кадра ${currentFrame}:`, error);\r\n          currentFrame++;\r\n          setTimeout(renderNextFrame, frameDuration);\r\n        }\r\n      };\r\n\r\n      // Начинаем рендеринг\r\n      renderNextFrame();\r\n    });\r\n  }\r\n\r\n  async prepareAllElements() {\r\n    console.log('📦 Подготовка элементов...');\r\n    \r\n    for (const item of this.timelineItems) {\r\n      try {\r\n        console.log(`📄 Подготавливаем: ${item.name}, тип: ${item.type}, trackType: ${item.trackType}`);\r\n        \r\n        const elementType = this.determineElementType(item);\r\n        console.log(`🎯 Определенный тип: ${elementType}`);\r\n        \r\n        if (elementType === 'video') {\r\n          await this.prepareVideoElement(item);\r\n        } else if (elementType === 'image') {\r\n          await this.prepareImageElement(item);\r\n        }\r\n        // Аудио элементы пропускаем для простоты\r\n      } catch (error) {\r\n        console.warn(`⚠️ Ошибка подготовки ${item.name}:`, error);\r\n      }\r\n    }\r\n    \r\n    console.log('✅ Все элементы подготовлены');\r\n    console.log('📋 Загруженные медиа:', Array.from(this.loadedMedia.keys()));\r\n  }\r\n\r\n  // Удаляем дублирующий метод renderAllFrames - используем только renderFramesInRealTime\r\n\r\n  determineElementType(item) {\r\n    // Сначала проверяем trackType\r\n    if (item.trackType === 'main') return 'video';\r\n    if (item.trackType === 'overlay') return 'image';\r\n    if (item.trackType === 'audio') return 'audio';\r\n    \r\n    // Потом проверяем type\r\n    if (item.type === 'videos' || item.type === 'video') return 'video';\r\n    if (item.type === 'images' || item.type === 'image') return 'image';\r\n    if (item.type === 'audios' || item.type === 'audio') return 'audio';\r\n\r\n    // Наконец проверяем по расширению URL\r\n    const url = item.url || item.src || '';\r\n    if (/\\.(mp4|webm|mov|avi)$/i.test(url)) return 'video';\r\n    if (/\\.(jpg|jpeg|png|gif|webp)$/i.test(url)) return 'image';\r\n    if (/\\.(mp3|wav|ogg|m4a)$/i.test(url)) return 'audio';\r\n\r\n    console.warn(`⚠️ Неизвестный тип элемента:`, item);\r\n    return 'unknown';\r\n  }\r\n\r\n  async prepareVideoElement(item) {\r\n    if (this.loadedMedia.has(item.id)) return;\r\n\r\n    const video = document.createElement(\"video\");\r\n    video.crossOrigin = \"anonymous\";\r\n    video.muted = true;\r\n    video.preload = \"metadata\";\r\n    \r\n    const videoUrl = item.url || item.src;\r\n    if (!videoUrl) return;\r\n\r\n    video.src = videoUrl;\r\n    \r\n    return new Promise((resolve) => {\r\n      const timeout = setTimeout(() => {\r\n        console.warn(`⏰ Таймаут загрузки видео: ${item.name}`);\r\n        resolve();\r\n      }, 10000);\r\n\r\n      video.onloadedmetadata = () => {\r\n        clearTimeout(timeout);\r\n        console.log(`🎥 Видео загружено: ${item.name}`);\r\n        this.loadedMedia.set(item.id, video);\r\n        resolve();\r\n      };\r\n      \r\n      video.onerror = () => {\r\n        clearTimeout(timeout);\r\n        console.error(`❌ Ошибка загрузки видео: ${item.name}`);\r\n        resolve();\r\n      };\r\n    });\r\n  }\r\n\r\n  async prepareImageElement(item) {\r\n    if (this.loadedMedia.has(item.id)) return;\r\n\r\n    const img = new Image();\r\n    img.crossOrigin = \"anonymous\";\r\n    \r\n    const imageUrl = item.url || item.src;\r\n    if (!imageUrl) return;\r\n\r\n    img.src = imageUrl;\r\n    \r\n    return new Promise((resolve) => {\r\n      const timeout = setTimeout(() => {\r\n        console.warn(`⏰ Таймаут загрузки изображения: ${item.name}`);\r\n        resolve();\r\n      }, 5000);\r\n\r\n      img.onload = () => {\r\n        clearTimeout(timeout);\r\n        console.log(`🖼️ Изображение загружено: ${item.name}`);\r\n        this.loadedMedia.set(item.id, img);\r\n        resolve();\r\n      };\r\n      \r\n      img.onerror = () => {\r\n        clearTimeout(timeout);\r\n        console.error(`❌ Ошибка загрузки изображения: ${item.name}`);\r\n        resolve();\r\n      };\r\n    });\r\n  }\r\n\r\n  async renderAllFrames() {\r\n    const frameCount = Math.ceil(this.videoDuration * this.settings.fps);\r\n    const frameDuration = 1 / this.settings.fps;\r\n    \r\n    console.log(`🎞️ Рендеринг ${frameCount} кадров (${this.settings.fps} FPS)`);\r\n\r\n    // Получаем видео трек для ручного захвата кадров\r\n    const videoTrack = this.canvas.captureStream(0).getVideoTracks()[0];\r\n\r\n    for (let frame = 0; frame < frameCount; frame++) {\r\n      const currentTime = frame * frameDuration;\r\n      \r\n      try {\r\n        await this.renderFrame(currentTime);\r\n        \r\n        // Принудительно захватываем кадр\r\n        if (videoTrack && videoTrack.requestFrame) {\r\n          videoTrack.requestFrame();\r\n        }\r\n        \r\n        // Даем время на обработку кадра\r\n        await new Promise(resolve => setTimeout(resolve, 1000 / this.settings.fps));\r\n        \r\n        // Обновляем прогресс\r\n        const progress = 30 + Math.round((frame / frameCount) * 60);\r\n        this.onProgress?.(progress);\r\n        \r\n        // Логируем каждые 100 кадров для отладки\r\n        if (frame % 100 === 0) {\r\n          console.log(`📽️ Кадр ${frame}/${frameCount} (${currentTime.toFixed(1)}s)`);\r\n        }\r\n      } catch (error) {\r\n        console.error(`❌ Ошибка рендеринга кадра ${frame}:`, error);\r\n      }\r\n    }\r\n\r\n    this.onProgress?.(90);\r\n    console.log('🎉 Все кадры отрендерены');\r\n  }\r\n\r\n  async renderFrame(currentTime) {\r\n    // Очищаем canvas черным фоном\r\n    this.ctx.fillStyle = \"#000000\";\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    // Получаем активные элементы для текущего времени\r\n    const activeItems = this.getActiveItems(currentTime);\r\n\r\n    // Всегда рендерим что-то, даже если нет активных элементов\r\n    if (activeItems.length === 0) {\r\n      this.renderEmptyFrame(currentTime);\r\n      return;\r\n    }\r\n\r\n    // Сортируем элементы по слоям (основное видео сначала, потом оверлеи)\r\n    const sortedItems = this.sortItemsByLayer(activeItems);\r\n\r\n    // Рендерим каждый активный элемент\r\n    for (const item of sortedItems) {\r\n      const relativeTime = currentTime - (item.startTime || 0);\r\n      await this.renderItem(item, relativeTime);\r\n    }\r\n\r\n    // Добавляем индикатор времени в углу для отладки\r\n    this.ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\r\n    this.ctx.font = \"16px Arial\";\r\n    this.ctx.fillText(`${currentTime.toFixed(1)}s`, 10, 30);\r\n  }\r\n\r\n  getActiveItems(currentTime) {\r\n    const activeItems = this.timelineItems.filter(item => {\r\n      const startTime = item.startTime || 0;\r\n      const duration = item.duration || this.videoDuration;\r\n      const endTime = startTime + duration;\r\n      \r\n      const isActive = currentTime >= startTime && currentTime < endTime;\r\n      \r\n      // Логируем первые несколько кадров для отладки\r\n      if (currentTime < 1 && isActive) {\r\n        console.log(`🎬 Активный элемент в ${currentTime.toFixed(1)}s: ${item.name} (${startTime}-${endTime})`);\r\n      }\r\n      \r\n      return isActive;\r\n    });\r\n\r\n    return activeItems;\r\n  }\r\n\r\n  sortItemsByLayer(items) {\r\n    const layerOrder = {\r\n      main: 1,\r\n      video: 1, \r\n      overlay: 2,\r\n      image: 2,\r\n      audio: 0 // Аудио не рендерится визуально\r\n    };\r\n\r\n    return [...items].sort((a, b) => {\r\n      const orderA = layerOrder[a.trackType] || layerOrder[a.type] || 1;\r\n      const orderB = layerOrder[b.trackType] || layerOrder[b.type] || 1;\r\n      return orderA - orderB;\r\n    });\r\n  }\r\n\r\n  async renderItem(item, relativeTime) {\r\n    const elementType = this.determineElementType(item);\r\n    \r\n    if (elementType === 'audio') {\r\n      return; // Аудио не рендерится визуально\r\n    }\r\n\r\n    const mediaElement = this.loadedMedia.get(item.id);\r\n    if (!mediaElement) {\r\n      this.renderPlaceholder(item.name || 'Неизвестный элемент');\r\n      return;\r\n    }\r\n\r\n    this.ctx.save();\r\n    \r\n    try {\r\n      if (elementType === 'video') {\r\n        await this.renderVideoItem(mediaElement, relativeTime);\r\n      } else if (elementType === 'image') {\r\n        this.renderImageItem(mediaElement);\r\n      }\r\n    } catch (error) {\r\n      console.warn(`⚠️ Ошибка рендеринга элемента ${item.name}:`, error);\r\n      this.renderPlaceholder(`Ошибка: ${item.name}`);\r\n    } finally {\r\n      this.ctx.restore();\r\n    }\r\n  }\r\n\r\n  async renderVideoItem(video, relativeTime) {\r\n    if (!video || video.readyState < 2) {\r\n      this.renderPlaceholder('Загрузка видео...');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Устанавливаем правильное время видео\r\n      const targetTime = Math.max(0, Math.min(relativeTime, video.duration));\r\n      \r\n      // Только если время сильно отличается\r\n      if (Math.abs(video.currentTime - targetTime) > 0.1) {\r\n        video.currentTime = targetTime;\r\n        \r\n        // Ждем готовности кадра\r\n        await new Promise((resolve) => {\r\n          const checkReady = () => {\r\n            if (video.readyState >= 2) {\r\n              resolve();\r\n            } else {\r\n              setTimeout(checkReady, 10);\r\n            }\r\n          };\r\n          checkReady();\r\n        });\r\n      }\r\n\r\n      this.drawScaledElement(video);\r\n    } catch (error) {\r\n      console.warn(`⚠️ Ошибка рендеринга видео:`, error);\r\n      this.renderPlaceholder('Ошибка видео');\r\n    }\r\n  }\r\n\r\n  renderImageItem(img) {\r\n    if (!img || !img.complete || img.naturalWidth === 0) {\r\n      this.renderPlaceholder('Изображение не загружено');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.drawScaledElement(img);\r\n    } catch (error) {\r\n      console.warn(`⚠️ Ошибка рендеринга изображения:`, error);\r\n      this.renderPlaceholder('Ошибка изображения');\r\n    }\r\n  }\r\n\r\n  drawScaledElement(element) {\r\n    const elementWidth = element.videoWidth || element.naturalWidth || element.width;\r\n    const elementHeight = element.videoHeight || element.naturalHeight || element.height;\r\n    \r\n    if (!elementWidth || !elementHeight) {\r\n      console.warn('⚠️ Элемент не имеет размеров');\r\n      return;\r\n    }\r\n    \r\n    const canvasRatio = this.canvas.width / this.canvas.height;\r\n    const elementRatio = elementWidth / elementHeight;\r\n    \r\n    let drawWidth, drawHeight, drawX, drawY;\r\n\r\n    // Масштабируем с сохранением пропорций (contain)\r\n    if (elementRatio > canvasRatio) {\r\n      drawWidth = this.canvas.width;\r\n      drawHeight = this.canvas.width / elementRatio;\r\n      drawX = 0;\r\n      drawY = (this.canvas.height - drawHeight) / 2;\r\n    } else {\r\n      drawHeight = this.canvas.height;\r\n      drawWidth = this.canvas.height * elementRatio;\r\n      drawX = (this.canvas.width - drawWidth) / 2;\r\n      drawY = 0;\r\n    }\r\n\r\n    try {\r\n      this.ctx.drawImage(element, drawX, drawY, drawWidth, drawHeight);\r\n    } catch (error) {\r\n      console.error('💥 Ошибка отрисовки:', error);\r\n      this.renderPlaceholder('Ошибка отрисовки');\r\n    }\r\n  }\r\n\r\n  renderPlaceholder(text) {\r\n    // Рендерим серый фон с текстом\r\n    this.ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\r\n    this.ctx.fillRect(\r\n      this.canvas.width * 0.1, \r\n      this.canvas.height * 0.4, \r\n      this.canvas.width * 0.8, \r\n      this.canvas.height * 0.2\r\n    );\r\n    \r\n    this.ctx.fillStyle = \"#ffffff\";\r\n    this.ctx.font = `${Math.min(32, this.canvas.width / 30)}px Arial`;\r\n    this.ctx.textAlign = \"center\";\r\n    this.ctx.textBaseline = \"middle\";\r\n    this.ctx.fillText(\r\n      text, \r\n      this.canvas.width / 2, \r\n      this.canvas.height / 2\r\n    );\r\n  }\r\n\r\n  renderEmptyFrame(currentTime) {\r\n    // Рендерим черный экран с индикатором времени\r\n    this.ctx.fillStyle = \"#000000\";\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    \r\n    this.ctx.fillStyle = \"#666666\";\r\n    this.ctx.font = `${Math.min(24, this.canvas.width / 50)}px Arial`;\r\n    this.ctx.textAlign = \"center\";\r\n    this.ctx.textBaseline = \"middle\";\r\n    this.ctx.fillText(\r\n      `${currentTime.toFixed(1)}s`, \r\n      this.canvas.width / 2, \r\n      this.canvas.height / 2\r\n    );\r\n  }\r\n\r\n  getSupportedMimeType() {\r\n    const formats = [\r\n      'video/webm;codecs=vp9',\r\n      'video/webm;codecs=vp8', \r\n      'video/webm'\r\n    ];\r\n    \r\n    for (const format of formats) {\r\n      if (MediaRecorder.isTypeSupported(format)) {\r\n        console.log(`✅ Поддерживаемый формат: ${format}`);\r\n        return format;\r\n      }\r\n    }\r\n    \r\n    console.log('⚠️ Используем базовый формат video/webm');\r\n    return 'video/webm';\r\n  }\r\n\r\n  getOutputMimeType() {\r\n    // Возвращаем тип для финального файла\r\n    switch (this.settings.format) {\r\n      case 'mp4':\r\n        return 'video/mp4';\r\n      case 'mov':\r\n        return 'video/quicktime';\r\n      case 'webm':\r\n      default:\r\n        return 'video/webm';\r\n    }\r\n  }\r\n\r\n  cleanup() {\r\n    console.log('🧹 Очистка ресурсов...');\r\n    \r\n    // Освобождаем URL объекты\r\n    this.loadedMedia.forEach(element => {\r\n      if (element.src && element.src.startsWith('blob:')) {\r\n        URL.revokeObjectURL(element.src);\r\n      }\r\n    });\r\n\r\n    // Очищаем массивы\r\n    this.loadedMedia.clear();\r\n    this.chunks = [];\r\n    this.mediaRecorder = null;\r\n  }\r\n}\r\n\r\nexport const useVideoExporter = () => {\r\n  const [isExportModalOpen, setIsExportModalOpen] = useState(false);\r\n\r\n  const openExportModal = () => setIsExportModalOpen(true);\r\n  const closeExportModal = () => setIsExportModalOpen(false);\r\n\r\n  return {\r\n    isExportModalOpen,\r\n    openExportModal,\r\n    closeExportModal,\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}